{"version":3,"file":"main.942f2b18a9a11f1bcf7f.bundle.js","sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./node_modules/nested-object-assign/lib sync ^\\.\\/.*$","webpack:///./src/main/webapp sync \\.stories\\.(j|t)sx","webpack:///src/main/webapp/@storybook/react.js","webpack:///src/main/webapp/@storybook/use-state.js","webpack:///src/main/webapp/about.js","webpack:///src/main/webapp/about.stories.js","webpack:///src/main/webapp/basic-search-helper.js","webpack:///src/main/webapp/basic-search.js","webpack:///src/main/webapp/basic-search.stories.js","webpack:///src/main/webapp/confirm-delete/confirm-delete.js","webpack:///src/main/webapp/confirm-delete/confirm-delete.stories.js","webpack:///src/main/webapp/confirm-delete/index.js","webpack:///src/main/webapp/gallery/gallery.js","webpack:///src/main/webapp/gallery/gallery.stories.js","webpack:///src/main/webapp/gallery/index.js","webpack:///src/main/webapp/gen-results.js","webpack:///src/main/webapp/histogram.js","webpack:///src/main/webapp/histogram.stories.js","webpack:///src/main/webapp/icons/map-pin.js","webpack:///src/main/webapp/index-cards/index-cards.js","webpack:///src/main/webapp/index-cards/index-cards.stories.js","webpack:///src/main/webapp/index-cards/index.js","webpack:///src/main/webapp/input/outlined-select.js","webpack:///src/main/webapp/inspector/index.js","webpack:///src/main/webapp/inspector/inspector.js","webpack:///src/main/webapp/inspector/inspector.stories.js","webpack:///src/main/webapp/lists/lists.js","webpack:///src/main/webapp/lists/lists.stories.js","webpack:///./src/main/webapp/location/bbox.tsx","webpack:///./src/main/webapp/location/coordinate-list.tsx","webpack:///./src/main/webapp/location/coordinate-value.tsx","webpack:///./src/main/webapp/location/filter.tsx","webpack:///./src/main/webapp/location/geo-to-wkt.tsx","webpack:///./src/main/webapp/location/index.tsx","webpack:///./src/main/webapp/location/keyword/container.tsx","webpack:///./src/main/webapp/location/keyword/index.tsx","webpack:///./src/main/webapp/location/keyword/presentation.tsx","webpack:///./src/main/webapp/location/keyword/with-remote-queries.tsx","webpack:///./src/main/webapp/location/length.tsx","webpack:///./src/main/webapp/location/line.tsx","webpack:///src/main/webapp/location/location.stories.js","webpack:///./src/main/webapp/location/location.tsx","webpack:///./src/main/webapp/location/number.tsx","webpack:///./src/main/webapp/location/point-radius.tsx","webpack:///./src/main/webapp/location/point/index.tsx","webpack:///./src/main/webapp/location/point/point-dms.tsx","webpack:///./src/main/webapp/location/point/point-lat-lon.tsx","webpack:///./src/main/webapp/location/point/point-usng.tsx","webpack:///./src/main/webapp/location/point/point-utm.tsx","webpack:///./src/main/webapp/location/polygon.tsx","webpack:///./src/main/webapp/location/units.tsx","webpack:///./src/main/webapp/location/with-coordinate-unit-tabs.tsx","webpack:///./src/main/webapp/location/with-draw-button.tsx","webpack:///src/main/webapp/login/container.js","webpack:///src/main/webapp/login/login.js","webpack:///src/main/webapp/login/login.stories.js","webpack:///src/main/webapp/login/loginModal.js","webpack:///src/main/webapp/maps/cluster-map.js","webpack:///src/main/webapp/maps/cluster-map.stories.js","webpack:///./src/main/webapp/maps/draw-menu.tsx","webpack:///src/main/webapp/maps/effects.js","webpack:///./src/main/webapp/maps/icons/bbox.tsx","webpack:///./src/main/webapp/maps/icons/circle.tsx","webpack:///./src/main/webapp/maps/icons/edit-coordinates.tsx","webpack:///./src/main/webapp/maps/icons/index.tsx","webpack:///./src/main/webapp/maps/icons/line.tsx","webpack:///./src/main/webapp/maps/icons/point.tsx","webpack:///./src/main/webapp/maps/icons/polygon.tsx","webpack:///src/main/webapp/maps/index.js","webpack:///src/main/webapp/maps/map-style.js","webpack:///src/main/webapp/maps/with-draw-menu.js","webpack:///src/main/webapp/maps/world-map-with-menu.stories.js","webpack:///src/main/webapp/maps/world-map.js","webpack:///src/main/webapp/maps/world-map.stories.js","webpack:///./src/main/webapp/query-filters/filter-input/boolean-filter.tsx","webpack:///./src/main/webapp/query-filters/filter-input/date-filter.tsx","webpack:///./src/main/webapp/query-filters/filter-input/location-filter.tsx","webpack:///./src/main/webapp/query-filters/filter-input/number-filter.tsx","webpack:///./src/main/webapp/query-filters/filter-input/text-filter.tsx","webpack:///./src/main/webapp/query-filters/filter/attribute-dropdown.tsx","webpack:///./src/main/webapp/query-filters/filter/comparator-dropdown.tsx","webpack:///./src/main/webapp/query-filters/filter/dummyDefinitions.tsx","webpack:///./src/main/webapp/query-filters/filter/filter-group.tsx","webpack:///./src/main/webapp/query-filters/filter/filter-serialization.tsx","webpack:///./src/main/webapp/query-filters/filter/filter-utils.tsx","webpack:///./src/main/webapp/query-filters/filter/index.tsx","webpack:///./src/main/webapp/query-filters/filter/individual-filter.tsx","webpack:///./src/main/webapp/query-filters/filter/operator.tsx","webpack:///./src/main/webapp/query-filters/filter/search-geo-factory.tsx","webpack:///./src/main/webapp/query-filters/query-filters.stories.tsx","webpack:///src/main/webapp/query-status.js","webpack:///src/main/webapp/query-status.stories.js","webpack:///src/main/webapp/react-golden-layout/index.js","webpack:///src/main/webapp/react-golden-layout/react-golden-layout.js","webpack:///src/main/webapp/react-golden-layout/react-golden-layout.stories.js","webpack:///src/main/webapp/react-hooks/index.js","webpack:///./src/main/webapp/react-hooks/use-anchor-el.tsx","webpack:///src/main/webapp/react-hooks/use-apollo-fallback.js","webpack:///./src/main/webapp/react-hooks/use-attribute-definitions.tsx","webpack:///src/main/webapp/react-hooks/use-draw-interface.js","webpack:///src/main/webapp/react-hooks/use-key-pressed.js","webpack:///src/main/webapp/react-hooks/use-query-executor.js","webpack:///src/main/webapp/react-hooks/use-selection-interface.js","webpack:///src/main/webapp/react-hooks/use-undo-state.js","webpack:///src/main/webapp/result-forms/result-forms.js","webpack:///src/main/webapp/result-forms/result-forms.stories.js","webpack:///src/main/webapp/result-forms/route.js","webpack:///src/main/webapp/result-forms/transfer-list.js","webpack:///src/main/webapp/results/results.js","webpack:///src/main/webapp/results/results.stories.js","webpack:///./src/main/webapp/search-forms/editor.tsx","webpack:///./src/main/webapp/search-forms/query-settings.tsx","webpack:///./src/main/webapp/search-forms/route.tsx","webpack:///./src/main/webapp/search-forms/search-forms.stories.tsx","webpack:///src/main/webapp/sort-order.js","webpack:///src/main/webapp/sort-order.stories.js","webpack:///src/main/webapp/sources.js","webpack:///src/main/webapp/sources.stories.js","webpack:///src/main/webapp/spaced-linear-container.stories.js","webpack:///./src/main/webapp/spaced-linear-container.tsx","webpack:///src/main/webapp/theme/theme.js","webpack:///src/main/webapp/theme/with-theme.js","webpack:///src/main/webapp/thumbnail/thumbnail.js","webpack:///src/main/webapp/thumbnail/thumbnail.stories.js","webpack:///src/main/webapp/time-range.js","webpack:///src/main/webapp/time-range.stories.js","webpack:///src/main/webapp/user-settings/hidden-results-settings.js","webpack:///src/main/webapp/user-settings/notification-settings.js","webpack:///src/main/webapp/user-settings/result-form-select.js","webpack:///src/main/webapp/user-settings/search-settings.js","webpack:///src/main/webapp/user-settings/source-select.js","webpack:///src/main/webapp/user-settings/theme-settings.js","webpack:///src/main/webapp/user-settings/time-settings.js","webpack:///src/main/webapp/user-settings/user-settings.js","webpack:///src/main/webapp/user-settings/user-settings.stories.js","webpack:///src/main/webapp/user.js","webpack:///src/main/webapp/user.stories.js","webpack:///src/main/webapp/utils/human-readable.js","webpack:///src/main/webapp/utils/immutable-utils.js","webpack:///src/main/webapp/utils/index.js","webpack:///src/main/webapp/workspaces/query-selector.js","webpack:///src/main/webapp/workspaces/visualizations.js","webpack:///src/main/webapp/workspaces/workspaces.stories.js"],"sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./nestedObjectAssign\": \"./node_modules/nested-object-assign/lib/nestedObjectAssign.js\",\n\t\"./nestedObjectAssign.js\": \"./node_modules/nested-object-assign/lib/nestedObjectAssign.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/nested-object-assign/lib sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./about.stories.js\": \"./src/main/webapp/about.stories.js\",\n\t\"./basic-search.stories.js\": \"./src/main/webapp/basic-search.stories.js\",\n\t\"./confirm-delete/confirm-delete.stories.js\": \"./src/main/webapp/confirm-delete/confirm-delete.stories.js\",\n\t\"./gallery/gallery.stories.js\": \"./src/main/webapp/gallery/gallery.stories.js\",\n\t\"./histogram.stories.js\": \"./src/main/webapp/histogram.stories.js\",\n\t\"./index-cards/index-cards.stories.js\": \"./src/main/webapp/index-cards/index-cards.stories.js\",\n\t\"./inspector/inspector.stories.js\": \"./src/main/webapp/inspector/inspector.stories.js\",\n\t\"./lists/lists.stories.js\": \"./src/main/webapp/lists/lists.stories.js\",\n\t\"./location/location.stories.js\": \"./src/main/webapp/location/location.stories.js\",\n\t\"./login/login.stories.js\": \"./src/main/webapp/login/login.stories.js\",\n\t\"./maps/cluster-map.stories.js\": \"./src/main/webapp/maps/cluster-map.stories.js\",\n\t\"./maps/world-map-with-menu.stories.js\": \"./src/main/webapp/maps/world-map-with-menu.stories.js\",\n\t\"./maps/world-map.stories.js\": \"./src/main/webapp/maps/world-map.stories.js\",\n\t\"./query-filters/query-filters.stories.tsx\": \"./src/main/webapp/query-filters/query-filters.stories.tsx\",\n\t\"./query-status.stories.js\": \"./src/main/webapp/query-status.stories.js\",\n\t\"./react-golden-layout/react-golden-layout.stories.js\": \"./src/main/webapp/react-golden-layout/react-golden-layout.stories.js\",\n\t\"./result-forms/result-forms.stories.js\": \"./src/main/webapp/result-forms/result-forms.stories.js\",\n\t\"./results/results.stories.js\": \"./src/main/webapp/results/results.stories.js\",\n\t\"./search-forms/search-forms.stories.tsx\": \"./src/main/webapp/search-forms/search-forms.stories.tsx\",\n\t\"./sort-order.stories.js\": \"./src/main/webapp/sort-order.stories.js\",\n\t\"./sources.stories.js\": \"./src/main/webapp/sources.stories.js\",\n\t\"./spaced-linear-container.stories.js\": \"./src/main/webapp/spaced-linear-container.stories.js\",\n\t\"./thumbnail/thumbnail.stories.js\": \"./src/main/webapp/thumbnail/thumbnail.stories.js\",\n\t\"./time-range.stories.js\": \"./src/main/webapp/time-range.stories.js\",\n\t\"./user-settings/user-settings.stories.js\": \"./src/main/webapp/user-settings/user-settings.stories.js\",\n\t\"./user.stories.js\": \"./src/main/webapp/user.stories.js\",\n\t\"./workspaces/workspaces.stories.js\": \"./src/main/webapp/workspaces/workspaces.stories.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/main/webapp sync recursive \\\\.stories\\\\.(j|t)sx?$\";","import { storiesOf as of } from '@connexta/ace/@storybook/react'\n\nimport withTheme from '../theme/with-theme'\n\nexport const storiesOf = (name, m) => {\n  const stories = of(name, m)\n  stories.addDecorator(withTheme)\n  return stories\n}\n","import { action } from '@connexta/ace/@storybook/addon-actions'\nimport React from 'react'\n\nconst useState = initialState => {\n  const [state, setState] = React.useState(initialState)\n  const onChange = newState => {\n    setState(newState)\n    action('onChange')(newState)\n  }\n  return [state, onChange]\n}\n\nexport default useState\n","import React from 'react'\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\n\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst Info = ({ title, value }) => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" component=\"h2\">\n        {title}\n      </Typography>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {value}\n      </Typography>\n    </React.Fragment>\n  )\n}\n\nconst Content = props => {\n  const { version, identifier, releaseDate, branding, product } = props\n  return (\n    <CardContent>\n      <Typography variant=\"h4\" component=\"h1\">\n        {branding} {product}\n      </Typography>\n      <Divider style={{ marginBottom: 15, marginTop: 10 }} />\n\n      <Info title=\"Version\" value={version} />\n      <Info title=\"Unique Identifier\" value={identifier} />\n      <Info title=\"Release Date\" value={releaseDate} />\n    </CardContent>\n  )\n}\n\nconst Failure = ({ error, onFetchProperties }) => {\n  return (\n    <React.Fragment>\n      <CardContent>\n        <Info title=\"Error\" value={error} />\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={onFetchProperties}>\n          Refresh\n        </Button>\n      </CardActions>\n    </React.Fragment>\n  )\n}\n\nconst Loading = () => {\n  return (\n    <CardContent>\n      <LinearProgress />\n    </CardContent>\n  )\n}\n\nconst Component = props => {\n  const { error, attributes } = props\n  if (typeof error === 'string') {\n    return <Failure {...props} />\n  }\n  if (attributes !== null && typeof attributes === 'object') {\n    return <Content {...attributes} />\n  }\n  return <Loading />\n}\n\nexport const About = props => {\n  return (\n    <div style={{ maxWidth: 600, margin: '20px auto' }}>\n      <Card>\n        <Component {...props} />\n      </Card>\n    </div>\n  )\n}\n\nconst query = gql`\n  query AboutPage {\n    systemProperties {\n      product\n      branding\n      identifier\n      version\n      releaseDate\n    }\n  }\n`\n\nexport default () => {\n  const { error, data = {} } = useQuery(query)\n  const attributes = data.systemProperties\n  const props = { error, attributes }\n\n  return <About {...props} />\n}\n","import React from 'react'\nimport { storiesOf } from './@storybook/react'\nimport { About } from './about'\nimport { text } from '@connexta/ace/@storybook/addon-knobs'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nconst stories = storiesOf('About', module)\n\nstories.add('success', () => {\n  const attributes = {\n    branding: text('Branding', 'DDF'),\n    product: text('Product', 'Intrigue'),\n    version: text('Version', '2.18.0-SNAPSHOT'),\n    identifier: text('Identifier', 'feu7s2abm with Changes'),\n    releaseDate: text('Release Date', 'August 20th 2019'),\n  }\n\n  return <About attributes={attributes} />\n})\n\nstories.add('loading', () => {\n  return <About />\n})\n\nstories.add('failure', () => {\n  const error = text('Error', 'API Failure')\n  return <About error={error} onFetchProperties={action('onFetchProperties')} />\n})\n","import { geoJSONToGeometryJSON } from 'geospatialdraw/bin/geometry/utilities'\nimport { geoToFilter } from './location'\nimport { makeSearchGeoId } from './query-filters/filter'\nconst { Map, Set, fromJS } = require('immutable')\nexport const APPLY_TO_KEY = 'applyTo'\nexport const DATATYPES_KEY = 'datatypes'\nexport const LOCATION_KEY = 'location'\nexport const TEXT_KEY = 'text'\nexport const TIME_RANGE_KEY = 'timeRange'\n\nconst timeProperties = [\n  'created',\n  'datetime.end',\n  'datetime.start',\n  'effective',\n  'expiration',\n  'metacard.created',\n  'metacard.modified',\n  'metacard.version.versioned-on',\n  'modified',\n]\n\nexport const uglyMap = {\n  minutes: howMany => `RELATIVE(PT${howMany}M)`,\n  hours: howMany => `RELATIVE(PT${howMany}H)`,\n  days: howMany => `RELATIVE(P${howMany}D)`,\n  months: howMany => `RELATIVE(P${howMany}M)`,\n  years: howMany => `RELATIVE(P${howMany}Y)`,\n}\n\nconst relativeUnits = {\n  P: {\n    D: 'days',\n    M: 'months',\n    Y: 'years',\n  },\n  PT: {\n    H: 'hours',\n    M: 'minutes',\n  },\n}\n\n// Create the Map\nconst unitsMap = Map(fromJS(relativeUnits))\n\nconst datatypeProperties = ['metadata-content-type', 'datatype']\n\nconst parseGeoFilter = (filter = {}) =>\n  geoJSONToGeometryJSON(makeSearchGeoId(), filter.geojson)\n\nexport const fromFilterTree = filterTree => {\n  return filterTree.filters\n    ? filterTree.filters.reduce((accumulator, filter) => {\n        const { property, value, filters } = filter\n\n        if (property === 'anyText') {\n          return accumulator.set(TEXT_KEY, value)\n        }\n\n        if (property === 'anyGeo') {\n          return accumulator.set(LOCATION_KEY, parseGeoFilter(filter))\n        }\n\n        if (filters && filters[0]) {\n          if (timeProperties.includes(filters[0].property)) {\n            if (filters[0].type === '=') {\n              const { last, unit } = parseRelative(filters[0].value)\n              filters[0].last = last\n              filters[0].unit = unit\n            }\n\n            return accumulator.set(\n              TIME_RANGE_KEY,\n              Map({\n                value: filters[0],\n                applyTo: filters.map(({ property }) => property),\n              })\n            )\n          }\n\n          if (datatypeProperties.includes(filters[0].property)) {\n            const applyTo = Set(filters.map(({ value }) => value)).toJSON()\n            return accumulator.set(DATATYPES_KEY, applyTo)\n          }\n        }\n\n        return accumulator\n      }, Map())\n    : Map({ [TEXT_KEY]: filterTree.value })\n}\n\nexport const parseRelative = relative => {\n  const matches = relative.match(/RELATIVE\\((PT?)(\\d*)(\\D*)\\)/)\n  if (matches && matches.length > 3) {\n    /* eslint-disable no-unused-vars */\n    const [full, timeOrDay, last, unitKey] = matches\n    /* eslint-enable */\n    const unit = unitsMap.getIn([timeOrDay, unitKey])\n\n    return { last, unit }\n  }\n\n  return {}\n}\n\nexport const toFilterTree = basicData => {\n  const getTimeRangeFilter = () => {\n    const applyTo = basicData.getIn([TIME_RANGE_KEY, APPLY_TO_KEY])\n    const rest = basicData.getIn([TIME_RANGE_KEY, 'value'])\n\n    if (!applyTo || !rest) {\n      return null\n    }\n\n    if (rest.type === '=') {\n      const { last, unit } = rest\n      rest.value = uglyMap[unit](last)\n    }\n\n    return {\n      type: 'OR',\n      filters: applyTo.map(property => ({\n        ...rest,\n        property,\n      })),\n    }\n  }\n\n  const getDatatypesFilter = () => {\n    const applyTo = basicData.get(DATATYPES_KEY)\n    if (!applyTo || applyTo.length === 0) {\n      return null\n    }\n    const datatypeFilters = applyTo.map(value => ({\n      type: 'ILIKE',\n      property: 'datatype',\n      value,\n    }))\n    const contentTypeFilters = applyTo.map(value => ({\n      type: 'ILIKE',\n      property: 'metadata-content-type',\n      value,\n    }))\n    return {\n      type: 'OR',\n      filters: [...datatypeFilters, ...contentTypeFilters],\n    }\n  }\n\n  const text = basicData.has(TEXT_KEY)\n    ? {\n        type: 'ILIKE',\n        property: 'anyText',\n        value: basicData.get(TEXT_KEY),\n      }\n    : null\n\n  const location = basicData.has(LOCATION_KEY)\n    ? geoToFilter(basicData.get(LOCATION_KEY))\n    : null\n  const timeRange = getTimeRangeFilter()\n  const datatypes = getDatatypesFilter()\n\n  const filters = [text, location, timeRange, datatypes].filter(\n    filter => filter !== null\n  )\n\n  return {\n    type: 'AND',\n    filters,\n  }\n}\n","import React, { useState } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Divider from '@material-ui/core/Divider'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { red } from '@material-ui/core/colors'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport { Map } from 'immutable'\nimport Typography from '@material-ui/core/Typography'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport Collapse from '@material-ui/core/Collapse'\nimport SortOrder from './sort-order'\nimport { SourcesSelect } from './sources'\nimport { makeDefaultSearchGeo } from './query-filters/filter'\nimport { Location } from './location'\n\nimport {\n  APPLY_TO_KEY,\n  DATATYPES_KEY,\n  LOCATION_KEY,\n  TEXT_KEY,\n  TIME_RANGE_KEY,\n  toFilterTree,\n  fromFilterTree,\n} from './basic-search-helper'\nimport TimeRange, {\n  createTimeRange,\n  validate as validateTimeRange,\n} from './time-range'\n\nconst timeAttributes = [\n  'created',\n  'datetime.end',\n  'datetime.start',\n  'effective',\n  'expiration',\n  'metacard.created',\n  'metacard.modified',\n  'metacard.version.versioned-on',\n  'modified',\n]\n\nconst datatypes = [\n  'Interactive Resource',\n  'Moving Image',\n  'Still Image',\n  'Dataset',\n  'Collection',\n  'Event',\n  'Service',\n  'Software',\n  'Sound',\n  'Text',\n  'Image',\n  'Physical Object',\n]\n\nconst TextSearch = ({ text, handleChange }) => {\n  return (\n    <TextField\n      fullWidth\n      label=\"Text\"\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n    />\n  )\n}\n\nconst filterMap = {\n  location: 'Location',\n  timeRange: 'Time Range',\n  datatypes: 'Match Types',\n  sources: 'Sources',\n  sortOrder: 'Sort Order',\n}\n\nconst defaultSorts = [\n  {\n    attribute: 'modified',\n    direction: 'descending',\n  },\n]\n\nconst defaultSources = ['ddf.distribution']\n\nconst AddButton = ({ addFilter }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClick}\n        style={{ marginLeft: '20px' }}\n      >\n        Add Options\n      </Button>\n\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.keys(filterMap).map(filter => (\n          <MenuItem\n            key={filter}\n            value={filter}\n            onClick={() => {\n              addFilter(filter)\n              handleClose()\n            }}\n          >\n            {filterMap[filter]}\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  )\n}\n\nconst SearchButton = props => (\n  <Button\n    style={props.style}\n    fullWidth\n    variant=\"contained\"\n    color=\"primary\"\n    onClick={props.onSearch}\n  >\n    Search\n  </Button>\n)\n\nexport const populateDefaultQuery = (\n  filterTree,\n  srcs = defaultSources,\n  sorts = defaultSorts\n) => ({\n  srcs,\n  start: 1,\n  count: 250,\n  filterTree,\n  sorts,\n  spellcheck: false,\n  phonetics: false,\n})\n\nconst MatchTypes = ({ state = [], setState, errors = {} }) => {\n  errors = errors.matchTypesErrors || {}\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Match Types</InputLabel>\n      <Select\n        error={errors.datatypes !== undefined}\n        multiple\n        value={state}\n        onChange={e => setState(e.target.value)}\n        renderValue={selected => selected.join(', ')}\n      >\n        {datatypes.map(datatype => (\n          <MenuItem key={datatype} value={datatype}>\n            <Checkbox checked={state.indexOf(datatype) > -1} />\n            <ListItemText primary={datatype} />\n          </MenuItem>\n        ))}\n      </Select>\n      <FormHelperText error={errors.datatypes !== undefined}>\n        {errors.datatypes}\n      </FormHelperText>\n    </FormControl>\n  )\n}\n\nconst BasicSources = ({ state = ['ddf.distribution'], setState }) => {\n  return <SourcesSelect value={state} onChange={setState} />\n}\n\nconst BasicSortOrder = props => {\n  const { state, setState } = props\n\n  return <SortOrder value={state} onChange={setState} />\n}\n\nconst BasicTimeRange = ({ state = Map(), setState, errors }) => {\n  return (\n    <div style={{ flex: '1', overflow: 'hidden' }}>\n      <TimeRange\n        errors={errors.timeRangeErrors}\n        fullWidth\n        timeRange={state.get('value')}\n        setTimeRange={updatedTimeRange => {\n          const next = state.set('value', updatedTimeRange)\n          setState(next)\n        }}\n      />\n      <FormControl fullWidth>\n        <AttributeSelector\n          attributes={state.get(APPLY_TO_KEY)}\n          errors={errors.attributeSelectorErrors}\n          setAttributes={attributes => {\n            const next = state.set(APPLY_TO_KEY, attributes)\n            setState(next)\n          }}\n        />\n      </FormControl>\n    </div>\n  )\n}\n\nconst AttributeSelector = props => {\n  const { attributes = [], setAttributes, errors = {} } = props\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Apply Time Range To</InputLabel>\n      <Select\n        error={errors.applyTo !== undefined}\n        multiple\n        value={attributes}\n        onChange={e => setAttributes(e.target.value)}\n        input={<Input />}\n        renderValue={selected => {\n          return selected.join(', ')\n        }}\n      >\n        {timeAttributes.map(name => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={attributes.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </Select>\n      <FormHelperText error={errors.applyTo !== undefined}>\n        {errors.applyTo}\n      </FormHelperText>\n    </FormControl>\n  )\n}\n\nconst isGeo = geo =>\n  geo.hasOwnProperty('type') &&\n  geo.hasOwnProperty('geometry') &&\n  geo.hasOwnProperty('properties') &&\n  geo.type.toLowerCase() === 'feature'\n\nconst BasicLocation = ({ state, setState }) => {\n  const geo = isGeo(state) ? state : makeDefaultSearchGeo()\n  return <Location value={geo} onChange={setState} />\n}\n\nconst filters = {\n  [LOCATION_KEY]: BasicLocation,\n  timeRange: BasicTimeRange,\n  datatypes: MatchTypes,\n  sources: BasicSources,\n  sortOrder: BasicSortOrder,\n}\n\nconst filterLabels = {\n  [LOCATION_KEY]: 'Location',\n  timeRange: 'Time Range',\n  datatypes: 'Match Types',\n  sources: 'Sources',\n  sortOrder: 'Sort Order',\n}\n\nconst defaultFilters = {\n  timeRange: Map({\n    value: createTimeRange({ type: 'BEFORE' }),\n    applyTo: ['created'],\n  }),\n  [LOCATION_KEY]: makeDefaultSearchGeo(),\n}\n\nconst getFilterTree = props => {\n  if (props.query && props.query.filterTree) {\n    return fromFilterTree(props.query.filterTree)\n  }\n\n  return Map({ text: '*' })\n}\n\nexport const FilterCard = props => {\n  const [state, setState] = useState(true)\n  const { children, label, onRemove } = props\n\n  const spacing = 16\n  const Arrow = state ? KeyboardArrowUpIcon : KeyboardArrowDownIcon\n\n  return (\n    <Paper style={{ width: '100%', marginTop: 20 }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Typography style={{ padding: 12 }} color=\"textSecondary\">\n          {label}\n        </Typography>\n        <div style={{ display: 'flex' }}>\n          <IconButton onClick={() => setState(!state)}>\n            <Arrow />\n          </IconButton>\n          {onRemove && (\n            <IconButton style={{ color: red[500] }} onClick={onRemove}>\n              <CloseIcon />\n            </IconButton>\n          )}\n        </div>\n      </div>\n      <Collapse in={state}>\n        <Divider />\n        <div\n          style={{\n            padding: spacing,\n            boxSizing: 'border-box',\n          }}\n        >\n          {children}\n        </div>\n      </Collapse>\n    </Paper>\n  )\n}\n\nexport const BasicSearch = props => {\n  const [filterTree, setFilterTree] = React.useState(getFilterTree(props))\n\n  const [submitted, setSubmitted] = React.useState(false)\n  const errors = validate(filterTree)\n\n  const text = filterTree.get('text')\n\n  return (\n    <div\n      style={{\n        overflow: 'auto',\n        padding: 2,\n        maxWidth: 600,\n        maxHeight: '100%',\n      }}\n    >\n      <Paper\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          padding: 16,\n          boxSizing: 'border-box',\n        }}\n      >\n        <TextSearch\n          text={text}\n          handleChange={e =>\n            setFilterTree(filterTree.set(TEXT_KEY, e.target.value))\n          }\n        />\n        <AddButton\n          addFilter={filter => {\n            setFilterTree(\n              filterTree.merge({\n                [filter]: defaultFilters[filter],\n              })\n            )\n          }}\n        />\n      </Paper>\n\n      {filterTree\n        .remove('text')\n        .map((state, filter) => {\n          const Component = filters[filter]\n          const label = filterLabels[filter]\n\n          return (\n            <FilterCard\n              key={filter}\n              label={label}\n              onRemove={() => {\n                setFilterTree(filterTree.remove(filter))\n              }}\n            >\n              <Component\n                state={state}\n                setState={state => {\n                  setFilterTree(filterTree.set(filter, state))\n                }}\n                errors={submitted ? errors : {}}\n              />\n            </FilterCard>\n          )\n        })\n        .valueSeq()}\n\n      <Divider />\n\n      <div\n        style={{\n          marginTop: 20,\n        }}\n      >\n        <SearchButton\n          fullWidth\n          onSearch={() => {\n            setSubmitted(true)\n\n            if (isEmpty(errors)) {\n              props.onSearch(\n                populateDefaultQuery(\n                  toFilterTree(filterTree),\n                  filterTree.get('sources'),\n                  filterTree.get('sortOrder')\n                )\n              )\n            }\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst isEmpty = checkThis => {\n  return Object.keys(checkThis).length === 0\n}\n\nconst validateAttributeSelector = (applyTo = []) => {\n  const errors = {}\n\n  if (applyTo.length === 0) {\n    errors.applyTo = 'Must choose at least one attribute'\n  }\n\n  return errors\n}\n\nconst validateMatchTypes = () => {\n  return {}\n}\n\nconst validate = (filterMap = Map()) => {\n  let errors = {}\n\n  if (filterMap.has(TIME_RANGE_KEY)) {\n    const timeRangeErrors = validateTimeRange(\n      filterMap.getIn([TIME_RANGE_KEY, 'value'])\n    )\n\n    if (!isEmpty(timeRangeErrors)) {\n      errors['timeRangeErrors'] = timeRangeErrors\n    }\n\n    const attributeSelectorErrors = validateAttributeSelector(\n      filterMap.getIn([TIME_RANGE_KEY, APPLY_TO_KEY])\n    )\n    if (!isEmpty(attributeSelectorErrors)) {\n      errors['attributeSelectorErrors'] = attributeSelectorErrors\n    }\n  }\n\n  if (filterMap.has(DATATYPES_KEY)) {\n    const matchTypesErrors = validateMatchTypes(\n      filterMap.getIn([DATATYPES_KEY])\n    )\n    if (!isEmpty(matchTypesErrors)) {\n      errors['matchTypesErrors'] = matchTypesErrors\n    }\n  }\n  return errors\n}\n\nexport default BasicSearch\n","import React from 'react'\nimport { storiesOf } from './@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\nimport { BasicSearch } from './basic-search'\n\nconst stories = storiesOf('BasicSearch', module)\n\nstories.add('basic', () => {\n  return <BasicSearch onSearch={action('onSearch')} />\n})\n","import React, { Fragment, useState } from 'react'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport Button from '@material-ui/core/Button'\n\nconst ConfirmDelete = props => {\n  const [confirmDelete, setConfirmDelete] = useState(false)\n  const { children, onDelete } = props\n\n  return (\n    <Fragment>\n      {confirmDelete ? (\n        <Dialog\n          open\n          onClick={e => e.stopPropagation()}\n          onClose={() => setConfirmDelete(false)}\n        >\n          <DialogTitle>Are you sure?</DialogTitle>\n          <DialogContent>\n            <DialogContentText>{children}</DialogContentText>\n          </DialogContent>\n          <DialogActions style={{ textAlign: 'center' }}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                setConfirmDelete(false)\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                if (typeof onDelete === 'function') {\n                  onDelete()\n                }\n                setConfirmDelete(false)\n              }}\n            >\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n      ) : null}\n      <IconButton\n        onClick={e => {\n          e.stopPropagation()\n          e.preventDefault()\n          setConfirmDelete(true)\n        }}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </Fragment>\n  )\n}\n\nexport default ConfirmDelete\n","import React from 'react'\n\nimport { storiesOf } from '../@storybook/react'\n\nimport { text } from '@connexta/ace/@storybook/addon-knobs'\n\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nconst stories = storiesOf('ConfirmDelete', module)\n\nimport ConfirmDelete from '.'\n\nstories.add('basic usage', () => {\n  const message = text('Message', 'This will permanently do a thing')\n\n  return <ConfirmDelete onDelete={action('onDelete')}>{message}</ConfirmDelete>\n})\n","export { default } from './confirm-delete'\n","import Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport Dialog from '@material-ui/core/Dialog'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport { Inspector } from '../inspector'\n\nconst GalleryItem = props => {\n  const { title, thumbnail } = props\n  return (\n    <Card>\n      <CardActionArea\n        onClick={props.onClick}\n        style={{ height: '100%', padding: 10 }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            textAlign: 'center',\n            height: '100%',\n          }}\n        >\n          <div\n            style={{\n              flex: 1,\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <img\n              src={`data:image/jpeg;base64,${thumbnail}`}\n              style={{ maxWidth: '100%', maxHeight: '300px' }}\n            />\n          </div>\n          <Typography style={{ fontSize: 14, marginTop: 10 }}>\n            {title}\n          </Typography>\n        </div>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default props => {\n  const [selected, setSelected] = React.useState(null)\n\n  const results = props.results.filter(\n    result => result.metacard.properties.thumbnail !== undefined\n  )\n\n  return (\n    <React.Fragment>\n      {selected && (\n        <Dialog open onClose={() => setSelected(null)}>\n          <Inspector\n            results={results.filter(\n              result => result.metacard.properties.id === selected\n            )}\n          />\n        </Dialog>\n      )}\n\n      <div\n        style={{\n          padding: 20,\n        }}\n      >\n        <div\n          style={{\n            display: 'grid',\n            gridGap: '20px',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', // 'auto-fit' not IE11 compatible\n            msGridColumns: 'repeat(3, 1fr)',\n          }}\n        >\n          {results.map(result => {\n            const { id, title, thumbnail } = result.metacard.properties\n\n            return (\n              <GalleryItem\n                key={id}\n                title={title}\n                thumbnail={thumbnail}\n                onClick={() => setSelected(id)}\n              />\n            )\n          })}\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n","import { setIn } from 'immutable'\nimport React from 'react'\nimport { storiesOf } from '../@storybook/react'\nimport results from '../sample-multi-result.json'\nimport Gallery from './gallery'\n\nconst thumbnailResults = results.filter(\n  result => result.metacard.properties.thumbnail !== undefined\n)\n\nlet genResults = []\nfor (let i = 0; i < 20; i++) {\n  genResults = genResults.concat(\n    thumbnailResults.map(result => {\n      const { id } = result.metacard.properties\n      return setIn(result, ['metacard', 'properties', 'id'], `${id}${i}`)\n    })\n  )\n}\n\nconst stories = storiesOf('Gallery', module)\nstories.addDecorator(Story => <Story />)\n\nstories.add('basic', () => {\n  return <Gallery results={genResults} />\n})\n","export { default } from './gallery'\n","const LA = {\n  title: 'Los Angeles',\n  description: `Painting should do one thing. It should put happiness in your heart.\n  Give him a friend, we forget the trees get lonely too. Don't forget to tell these special people in your life just how special they are to you.\n  If I paint something, I don't want to have to explain what it is. We're not trying to teach you a thing to copy.\n  We're just here to teach you a technique, then let you loose into the world. Trees get lonely too, so we'll give him a little friend.`,\n  created: 'September 4, 1781',\n  modified: 'April 29, 1992',\n  checksum: '1',\n  location: 'POINT(-118.2437 34.0522)',\n}\n\nconst DC = {\n  title: 'Washington DC',\n  description: `To exercise exclusive Legislation in all Cases whatsoever, over such District (not exceeding ten Miles square) as\n  may, by Cession of Particular States, and the Acceptance of Congress, become the Seat of the Government of\n  the United States, and to exercise like Authority over all Places purchased by the Consent of the Legislature of\n  the State in which the Same shall be, for the Erection of Forts, Magazines, Arsenals, dock-Yards and other\n  needful Buildings`,\n  created: 'July 16, 1790',\n  modified: 'February 21, 1871',\n  checksum: '1',\n  location: 'POINT(-77.0369 38.9072)',\n}\n\nconst PHOENIX = {\n  title: 'Phoenix',\n  description: `According to legend, Phoenix gets its name from Cambridge-educated pioneer Darrell Duppa, who saw the\n  ruins and prehistoric canals of the Hohokam and believed another civilization would rise from the ashes.`,\n  created: 'February 25, 1881',\n  modified: 'February 14, 1912',\n  checksum: '1',\n  location: 'POINT(-112.0740 33.4484)',\n}\n\nconst PARIS = {\n  title: 'Paris',\n  description: `Liberty, equality, fraternity, or death; - the last, much the easiest to bestow, O Guillotine!`,\n  created: '250 CE',\n  modified: 'August 25, 1944',\n  checksum: '1',\n  location: 'POINT(2.3522 48.8566)',\n}\n\nconst CITIES = [DC, LA, PARIS, PHOENIX]\n\nconst genResults = (n = 100) =>\n  new Array(n).fill(0).map((_v, i) => ({\n    metacard: {\n      properties: {\n        ...CITIES[Math.min(i, CITIES.length - 1)],\n        id: (i + 1).toString(),\n      },\n    },\n  }))\n\nexport default genResults\n","import React, { useState } from 'react'\nimport { List, Map, Set, fromJS } from 'immutable'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { formatDateString, getFileSize, isDate } from './utils'\n\nconst AttributeSelect = props => {\n  const { attributes, value, onChange } = props\n\n  return (\n    <Autocomplete\n      options={attributes}\n      defaultValue={value}\n      autoSelect\n      disableClearable\n      onChange={(event, value) => {\n        onChange(value)\n      }}\n      renderInput={params => (\n        <TextField {...params} margin=\"normal\" fullWidth />\n      )}\n    />\n  )\n}\n\nconst getResultId = result => {\n  return result.getIn(['metacard', 'properties', 'id'])\n}\n\nconst getAttributeSet = result => {\n  return result\n    .getIn(['metacard', 'properties'])\n    .keySeq()\n    .toSet()\n}\n\nconst getAttributeValue = (result, attribute) => {\n  return result.getIn(['metacard', 'properties']).get(attribute)\n}\n\nconst getAttributeKeysFromResults = results => {\n  return results.reduce((acc, data) => {\n    return acc.merge(getAttributeSet(data))\n  }, Set())\n}\n\nconst getResultsContainingAttribute = (results, attribute) => {\n  return results.filter(result => {\n    const attributes = getAttributeSet(result)\n    return attributes.includes(attribute)\n  })\n}\n\nconst prettyifyValue = (value, attribute) => {\n  if (attribute == 'resource-size') {\n    return getFileSize(value)\n  }\n\n  if (isDate(value)) {\n    return formatDateString(value, 'MMM dd yyyy')\n  }\n  return value\n}\n\nconst mapMultiValueAttrToResults = (values, result) => {\n  return values.reduce((listAcc, listValue) => {\n    return listAcc.update(listValue, (val = List()) => val.push(result))\n  }, Map())\n}\n\nconst mapAttrValuesToResults = (results, attribute) => {\n  return results.reduce((acc, result) => {\n    const value = getAttributeValue(result, attribute)\n    if (List.isList(value)) {\n      const listValues = mapMultiValueAttrToResults(value, result)\n      return acc.merge(listValues)\n    }\n\n    const attrValue = prettyifyValue(value, attribute)\n    return acc.update(attrValue, (val = List()) => val.push(result))\n  }, Map())\n}\n\nconst Histogram = props => {\n  const [attribute, setAttribute] = useState(null)\n  const { results, onSelect } = props\n  const values = fromJS(results || {})\n\n  const attributeSet = getAttributeKeysFromResults(values)\n  const options = attributeSet.toJS()\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <AttributeSelect\n        attributes={options}\n        value={attribute}\n        onChange={setAttribute}\n      />\n      <Graph\n        selectedAttribute={attribute}\n        results={values}\n        onSelect={onSelect}\n      />\n    </div>\n  )\n}\n\nconst Graph = props => {\n  const { selectedAttribute, results, onSelect } = props\n\n  const matchingResults = getResultsContainingAttribute(\n    results,\n    selectedAttribute\n  )\n\n  if (matchingResults.isEmpty()) {\n    return null\n  }\n\n  const attributeValueMap = mapAttrValuesToResults(\n    matchingResults,\n    selectedAttribute\n  )\n  const columnWidth = 100 / attributeValueMap.size\n\n  return (\n    <div className=\"graph-wrapper\">\n      <div\n        className=\"graphcontainer\"\n        style={{ display: 'flex', flexDirection: 'row' }}\n      >\n        <div\n          className=\"graph\"\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            position: 'relative',\n            height: '800px',\n            width: '100%',\n          }}\n        >\n          <LineContainer\n            columnWidth={columnWidth}\n            attributeCount={results.size}\n            selectedAttribute={selectedAttribute}\n            attributeMap={attributeValueMap}\n            onSelect={onSelect}\n          />\n          <BarLabels\n            attributeMap={attributeValueMap}\n            columnWidth={columnWidth}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Line = props => {\n  const { left } = props\n  return (\n    <div\n      className=\"line\"\n      style={{\n        position: 'absolute',\n        height: '1px',\n        width: '100%',\n        background: 'rgba(0, 0, 0, 0.4)',\n        top: `${left}%`,\n      }}\n    />\n  )\n}\n\nconst BarLabels = props => {\n  const { attributeMap, columnWidth } = props\n\n  return (\n    <div\n      className=\"bar-text-content\"\n      style={{\n        display: 'flex',\n        alignItems: 'start',\n        position: 'relative',\n        width: '100%',\n        height: '12%',\n      }}\n    >\n      {attributeMap\n        .keySeq()\n        .toList()\n        .map(attribute => {\n          return (\n            <div\n              key={attribute}\n              style={{\n                width: `${columnWidth}%`,\n              }}\n            >\n              <BarLabel label={attribute} />\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n\nconst BarLabel = props => {\n  const { label } = props\n  return (\n    <Tooltip title={label}>\n      <Typography\n        align=\"center\"\n        style={{\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          marginLeft: '3px',\n          marginRight: '3px',\n        }}\n      >\n        {label}\n      </Typography>\n    </Tooltip>\n  )\n}\n\nconst renderBars = (total, valueMap, columnWidth, onSelect) => {\n  const maxHits = valueMap\n    .valueSeq()\n    .toList()\n    .max((a, b) => a.size - b.size).size\n\n  const barsAgain = valueMap\n    .keySeq()\n    .toList()\n    .map(attr => {\n      const attributeValues = valueMap.get(attr)\n      const percent = (attributeValues.size / maxHits) * 95\n      return (\n        <Bar\n          hits={attributeValues.size}\n          columnWidth={columnWidth}\n          percent={percent}\n          key={attr}\n          onClick={() => {\n            const ids = attributeValues.map(getResultId)\n            onSelect(ids)\n          }}\n        />\n      )\n    })\n  return barsAgain\n}\n\nconst LineContainer = props => {\n  const { attributeCount, attributeMap, columnWidth, onSelect } = props\n  return (\n    <div\n      className=\"bar-lines-container\"\n      style={{\n        display: 'flex',\n        position: 'relative',\n        height: '100%',\n        width: '100%',\n        alignItems: 'flex-end',\n      }}\n    >\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(i => {\n        return <Line left={i * 10} key={i} />\n      })}\n\n      {renderBars(attributeCount, attributeMap, columnWidth, onSelect)}\n    </div>\n  )\n}\n\nconst Bar = props => {\n  const { percent, onClick, columnWidth, hits } = props\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: `${columnWidth}%`,\n      }}\n    >\n      <Typography\n        style={{\n          height: `${100 - percent}%`,\n          display: 'flex',\n          alignItems: 'flex-end',\n          justifyContent: 'center',\n        }}\n      >\n        {hits}\n      </Typography>\n      <div\n        className=\"bar\"\n        style={{\n          height: `${percent}%`,\n          borderTop: '1px solid #222',\n          borderRight: '1px solid #222',\n          borderLeft: '1px solid #222',\n          margin: 1,\n          background: 'rgba(0, 0, 0, 0.1)',\n        }}\n        onClick={onClick}\n      />\n    </div>\n  )\n}\n\nexport default Histogram\n","import React from 'react'\n\nimport { storiesOf } from './@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nimport results from './sample-multi-result.json'\nimport Histogram from './histogram'\n\nconst stories = storiesOf('Histogram', module)\n\nstories.addDecorator(Story => <Story />)\n\nstories.add('Basic', () => {\n  return <Histogram results={results} onSelect={action('onSelect')} />\n})\n","import React from 'react'\n\nexport const getIconText = ({ color }) =>\n  `<svg\n    height=\"16px\"\n    id=\"Layer_1\"\n    style=\"enable-background:new 0 0 16 16;\"\n    version=\"1.1\"\n    viewBox=\"0 0 16 16\"\n    width=\"16px\"\n    xml:space=\"preserve\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path fill=\"${color}\" d=\"M8,0C4.687,0,2,2.687,2,6c0,3.854,4.321,8.663,5,9.398C7.281,15.703,7.516,16,8,16s0.719-0.297,1-0.602  C9.679,14.663,14,9.854,14,6C14,2.687,11.313,0,8,0z M8,10c-2.209,0-4-1.791-4-4s1.791-4,4-4s4,1.791,4,4S10.209,10,8,10z M8,4  C6.896,4,6,4.896,6,6s0.896,2,2,2s2-0.896,2-2S9.104,4,8,4z\" />\n  </svg>`\n\nexport const Icon = ({ color }) => (\n  <svg\n    height=\"16px\"\n    id=\"Layer_1\"\n    style=\"enable-background:new 0 0 16 16;\"\n    version=\"1.1\"\n    viewBox=\"0 0 16 16\"\n    width=\"16px\"\n    xmlSpace=\"preserve\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path\n      fill={color}\n      d=\"M8,0C4.687,0,2,2.687,2,6c0,3.854,4.321,8.663,5,9.398C7.281,15.703,7.516,16,8,16s0.719-0.297,1-0.602  C9.679,14.663,14,9.854,14,6C14,2.687,11.313,0,8,0z M8,10c-2.209,0-4-1.791-4-4s1.791-4,4-4s4,1.791,4,4S10.209,10,8,10z M8,4  C6.896,4,6,4.896,6,6s0.896,2,2,2s2-0.896,2-2S9.104,4,8,4z\"\n    />\n  </svg>\n)\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport IconButton from '@material-ui/core/IconButton'\n\nimport ShareIcon from '@material-ui/icons/Share'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardActionArea from '@material-ui/core/CardActionArea'\n\nimport moment from 'moment'\n\nimport ConfirmDelete from '../confirm-delete'\n\nconst onClick = action => e => {\n  e.preventDefault()\n  e.stopPropagation()\n  if (typeof action === 'function') {\n    action(e)\n  }\n}\n\nexport const EditAction = props => {\n  const { onEdit } = props\n  return (\n    <IconButton onClick={onClick(onEdit)}>\n      <EditIcon />\n    </IconButton>\n  )\n}\n\nexport const DeleteAction = props => {\n  const { onDelete } = props\n  return (\n    <ConfirmDelete onDelete={onDelete}>\n      This will permanently delete the search form.\n    </ConfirmDelete>\n  )\n}\n\nexport const ShareAction = props => {\n  const { onShare } = props\n  return (\n    <IconButton onClick={onClick(onShare)}>\n      <ShareIcon />\n    </IconButton>\n  )\n}\n\nexport const Actions = CardActions\n\nconst ItemContainer = props => {\n  const { children, style, onClick } = props\n\n  return (\n    <Card\n      style={{\n        width: 345,\n        margin: 20,\n        cursor: 'pointer',\n        ...style,\n      }}\n      onClick={onClick}\n    >\n      {children}\n    </Card>\n  )\n}\n\nexport const AddCardItem = props => {\n  const { onClick } = props\n\n  return (\n    <ItemContainer\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      onClick={onClick}\n    >\n      <AddCircleOutlineIcon style={{ width: '50%', height: '50%' }} />\n    </ItemContainer>\n  )\n}\n\nexport const IndexCardItem = props => {\n  const { title, subHeader, owner, modified, children, onClick } = props\n\n  return (\n    <ItemContainer onClick={onClick}>\n      <CardActionArea>\n        <CardHeader\n          title={title}\n          subheader={subHeader || moment(modified).fromNow()}\n        />\n        <CardContent>\n          {owner && (\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Owner: {owner}\n            </Typography>\n          )}\n        </CardContent>\n      </CardActionArea>\n      {children}\n    </ItemContainer>\n  )\n}\n\nexport const IndexCards = props => {\n  const { children } = props\n  return <div style={{ display: 'flex', flexWrap: 'wrap' }}>{children}</div>\n}\n","import React from 'react'\n\nimport { storiesOf } from '../@storybook/react'\n\nimport { number } from '@connexta/ace/@storybook/addon-knobs'\n\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nconst stories = storiesOf('IndexCards', module)\n\nimport {\n  IndexCards,\n  AddCardItem,\n  IndexCardItem,\n  DeleteAction,\n  ShareAction,\n  Actions,\n} from '.'\n\nconst createItem = n => {\n  return {\n    id: n,\n    title: `Item: #${n}`,\n    metacard_owner: 'admin@localhost.local',\n    metacard_modified: new Date(),\n  }\n}\n\nconst generateItems = n => {\n  const items = []\n  for (let i = 0; i < n; i++) {\n    items.push(createItem(i))\n  }\n  return items\n}\n\nstories.add('basic usage', () => {\n  const n = number('Number of Items', 10)\n  const items = generateItems(n)\n\n  return (\n    <IndexCards>\n      <AddCardItem onClick={action('onCreate')} />\n      {items.map(item => {\n        return (\n          <IndexCardItem key={item.id} {...item}>\n            <Actions>\n              <ShareAction onShare={action('onShare')} />\n              <DeleteAction onDelete={action('onDelete')} />\n            </Actions>\n          </IndexCardItem>\n        )\n      })}\n    </IndexCards>\n  )\n})\n","export {\n  IndexCards,\n  IndexCardItem,\n  AddCardItem,\n  DeleteAction,\n  ShareAction,\n  EditAction,\n  Actions,\n} from './index-cards'\n","import InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select from '@material-ui/core/Select'\nimport React from 'react'\n\nconst OutlinedSelect = (props = {}) => {\n  const { value, onChange, label } = props\n  const inputLabel = React.useRef(null)\n  const [labelWidth, setLabelWidth] = React.useState(0)\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <InputLabel ref={inputLabel}>{label}</InputLabel>\n      <Select\n        {...props}\n        input={<OutlinedInput labelWidth={labelWidth} />}\n        value={value}\n        onChange={onChange}\n      >\n        {props.children}\n      </Select>\n    </React.Fragment>\n  )\n}\n\nexport default OutlinedSelect\n","export { default, Inspector } from './inspector'\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport Paper from '@material-ui/core/Card'\nimport Thumbnail from '../thumbnail/thumbnail'\nimport Divider from '@material-ui/core/Divider'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Link from '@material-ui/core/Link'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Typography from '@material-ui/core/Typography'\nimport gql from 'graphql-tag'\n\nimport { useApolloFallback } from '../react-hooks'\n\nconst AttributeTitle = props => {\n  const { title } = props\n\n  return (\n    <Typography variant=\"h6\" component=\"h2\">\n      {title}\n    </Typography>\n  )\n}\nconst AttributeValue = props => {\n  const { title, value } = props\n  const values = value instanceof Array ? value : [value]\n\n  return (\n    <div>\n      {values.map((itemValue, index) => {\n        if (title === 'thumbnail' && itemValue !== 'No Value') {\n          return <ThumbnailValue key={index} value={itemValue} />\n        }\n        return <TextValue key={index} value={itemValue} />\n      })}\n    </div>\n  )\n}\n\nconst ThumbnailValue = props => {\n  const { value } = props\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n      }}\n    >\n      <Thumbnail src={`data:image/jpeg;base64,${value}`} />\n    </div>\n  )\n}\n\nconst TextValue = props => {\n  const { value } = props\n  return (\n    <Typography color=\"textSecondary\" gutterBottom>\n      {value}\n    </Typography>\n  )\n}\n\nconst AttributeEntry = props => {\n  const { title, value } = props\n\n  return (\n    <div style={{ width: '100%' }}>\n      <AttributeTitle title={title} />\n      <AttributeValue title={title} value={value} />\n    </div>\n  )\n}\n\nconst MultiResultPropertiesList = props => {\n  const { results } = props\n  const attributeSet = getAttributeSet(results)\n\n  return Array.from(attributeSet)\n    .sort()\n    .map(key => {\n      const values = results.map(result => {\n        return result.metacard.properties[key] || 'No Value'\n      })\n      return (\n        <div key={key}>\n          <ListItem divider>\n            <List style={{ width: '100%' }}>\n              <AttributeEntry title={key} value={values} />\n            </List>\n          </ListItem>\n        </div>\n      )\n    })\n}\n\nconst PropertiesList = props => {\n  const { properties } = props\n  return Object.entries(properties)\n    .sort()\n    .map(entry => {\n      const key = entry[0]\n      const value = entry[1]\n      return (\n        <div key={key}>\n          <ListItem divider>\n            <AttributeEntry title={key} value={value} />\n          </ListItem>\n        </div>\n      )\n    })\n}\n\nconst Details = props => {\n  const { results } = props\n  const result = results instanceof Array ? results[0] : results\n  return (\n    <Paper>\n      <List>\n        <PropertiesList properties={result.metacard.properties} />\n      </List>\n    </Paper>\n  )\n}\n\nconst createActionsMap = actions => {\n  const mapActions = actions.filter(\n    action => action.id.indexOf('catalog.data.metacard.map.') === 0\n  )\n  const exportActions = actions\n    .filter(action => action.title.indexOf('Export') === 0)\n    .filter(action => mapActions.indexOf(action) === -1)\n  const otherActions = actions.filter(\n    action =>\n      mapActions.indexOf(action) === -1 && exportActions.indexOf(action) === -1\n  )\n  return { exportActions, mapActions, otherActions }\n}\n\nconst ActionLinks = props => {\n  const { title, actions } = props\n  if (actions.length === 0) {\n    return null\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <Typography variant=\"h6\" component=\"h2\">\n        {title}\n      </Typography>\n      {actions.map(action => {\n        return (\n          <ListItem key={action.id}>\n            <Typography color=\"textSecondary\" gutterBottom>\n              <Link target=\"_blank\" href={action.url}>\n                {' '}\n                {action.id}{' '}\n              </Link>\n            </Typography>\n          </ListItem>\n        )\n      })}\n    </div>\n  )\n}\n\nconst Actions = props => {\n  const { results } = props\n  const result = results instanceof Array ? results[0] : results\n  const actions = result.actions\n  if (actions && actions.length) {\n    const actionsMap = createActionsMap(result.actions)\n    return (\n      <Paper>\n        <List style={{ marginLeft: '10px' }}>\n          <ActionLinks title=\"Export as:\" actions={actionsMap.exportActions} />\n          <Divider />\n          <ActionLinks title=\"Map:\" actions={actionsMap.mapActions} />\n          <Divider />\n          <ActionLinks title=\"Various:\" actions={actionsMap.otherActions} />\n        </List>\n      </Paper>\n    )\n  } else {\n    return (\n      <Paper>\n        <List style={{ marginLeft: '10px' }}>\n          <Typography variant=\"h6\" component=\"h2\">\n            No actions provided\n          </Typography>\n        </List>\n      </Paper>\n    )\n  }\n}\n\nconst Summary = props => {\n  const { results, summaryAttributes } = props\n\n  let summaryProperties = { '': 'No summary attributes were provided.' }\n  if (summaryAttributes && summaryAttributes.length) {\n    const result = results instanceof Array ? results[0] : results\n    const properties = result.metacard.properties\n\n    const filteredProperties = summaryAttributes.map(attr => {\n      const property = properties[attr]\n      if (property != undefined) {\n        return { [attr]: property }\n      } else {\n        return {}\n      }\n    })\n\n    summaryProperties = filteredProperties.reduce(\n      (acc, property) => ({\n        ...acc,\n        ...property,\n      }),\n      {}\n    )\n  }\n\n  return (\n    <Paper>\n      <List>\n        <PropertiesList properties={summaryProperties} />\n      </List>\n    </Paper>\n  )\n}\n\nconst getAttributeSet = results => {\n  return results.reduce((acc, value) => {\n    const properties = value.metacard.properties\n    const keys = Object.keys(properties)\n    return new Set([...acc, ...keys])\n  }, new Set())\n}\n\nconst MultiResultDetails = props => {\n  const { results } = props\n\n  return (\n    <Paper>\n      <Typography variant=\"h6\" component=\"h2\" style={{ textAlign: 'center' }}>\n        {results.length} results selected\n      </Typography>\n      <List>\n        <MultiResultPropertiesList results={results} />\n      </List>\n    </Paper>\n  )\n}\n\nconst resultTabMap = {\n  0: Summary,\n  1: Details,\n  2: Actions,\n}\n\nconst multiResultTabMap = {\n  0: MultiResultDetails,\n}\n\nconst getTabComponent = results => {\n  if (results instanceof Array && results.length > 1) {\n    return MultiResultTabs\n  }\n  return ResultTabs\n}\n\nconst ResultTabs = props => {\n  const [tab, setTab] = React.useState(0)\n  const Component = resultTabMap[tab]\n\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <Tabs\n        value={tab}\n        onChange={(_, selectedIndex) => {\n          setTab(selectedIndex)\n        }}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"Summary\" />\n        <Tab label=\"Details\" />\n        <Tab label=\"Actions\" />\n      </Tabs>\n      {Component ? <Component {...props} /> : null}\n    </div>\n  )\n}\n\nconst MultiResultTabs = props => {\n  const [tab, setTab] = React.useState(0)\n  const Component = multiResultTabMap[tab]\n\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <Tabs\n        value={tab}\n        onChange={(_, selectedIndex) => {\n          setTab(selectedIndex)\n        }}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"Details\" />\n      </Tabs>\n      {Component ? <Component {...props} /> : null}\n    </div>\n  )\n}\n\nconst defaultSummaryAttributes = ['created', 'modified', 'thumbnail']\n\nconst Inspector = props => {\n  const { results, summaryAttributes = defaultSummaryAttributes } = props\n  const TabComponent = getTabComponent(results)\n\n  if (results && results.length) {\n    return (\n      <TabComponent results={results} summaryAttributes={summaryAttributes} />\n    )\n  } else {\n    return <PropertiesList properties={{ '': 'No results were provided.' }} />\n  }\n}\n\nconst query = gql`\n  query InspectorSummaryShow {\n    systemProperties {\n      summaryShow\n    }\n  }\n`\n\nconst Loading = () => {\n  return (\n    <Paper>\n      <LinearProgress />\n    </Paper>\n  )\n}\n\nconst Container = props => {\n  const { loading, error, data = {} } = useQuery(query)\n  if (loading) {\n    return <Loading />\n  }\n\n  const summaryAttributes = data.systemProperties.summaryShow\n\n  return (\n    <Inspector {...props} error={error} summaryAttributes={summaryAttributes} />\n  )\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, Inspector)\n  return <Component {...props} />\n}\n\nexport { Actions, Details, Inspector, MultiResultDetails, Summary }\n","import React from 'react'\nimport { storiesOf } from '../@storybook/react'\nimport { select, array } from '@connexta/ace/@storybook/addon-knobs'\n\nimport result from '../sample-result.json'\nimport results from '../sample-multi-result.json'\nimport Inspector from './inspector'\n\nconst stories = storiesOf('Inspector', module)\n\nstories.add('basic', () => {\n  const sampleResult = select(\n    'Result Set',\n    {\n      single: result,\n      multiple: results,\n    },\n    result\n  )\n  const summaryAttributes = array('Summary Attributes', [\n    'created',\n    'modified',\n    'thumbnail',\n  ])\n  return (\n    <Inspector results={sampleResult} summaryAttributes={summaryAttributes} />\n  )\n})\n","import { useLazyQuery } from '@apollo/react-hooks'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Popover from '@material-ui/core/Popover'\nimport Typography from '@material-ui/core/Typography'\nimport ArchiveIcon from '@material-ui/icons/Archive'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport FolderIcon from '@material-ui/icons/Folder'\nimport gql from 'graphql-tag'\nimport React from 'react'\nimport {\n  Actions,\n  DeleteAction,\n  EditAction,\n  IndexCardItem,\n} from '../index-cards'\nimport { useApolloFallback } from '../react-hooks'\n\nconst searchByID = gql`\n  query SearchByID($ids: [ID]!) {\n    metacardsById(ids: $ids) {\n      results {\n        actions {\n          id\n          url\n          title\n          displayName\n        }\n        metacard\n      }\n    }\n  }\n`\n\nconst ListIconMap = {\n  archive: ArchiveIcon,\n  folder: FolderIcon,\n}\n\nconst ListTitle = props => {\n  const { title, icon } = props\n  const Icon = ListIconMap[icon]\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      {Icon ? (\n        <React.Fragment>\n          <Icon /> <div style={{ width: 5 }} />\n        </React.Fragment>\n      ) : null}\n\n      {title}\n      <div style={{ flexGrow: 1 }} />\n      {props.children}\n    </div>\n  )\n}\n\nconst ListInfo = props => {\n  const { listSize } = props\n  return <Typography>{`${listSize} results`}</Typography>\n}\n\nconst Lists = props => {\n  const { onSelect, lists, isLoading } = props\n  const [selected, setSelected] = React.useState(null)\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = list => {\n    setSelected(list.id)\n    onSelect(list['list_bookmarks'])\n  }\n\n  const open = Boolean(anchorEl)\n\n  const ListCards = lists\n    ? lists.map(list => {\n        const isSelected = list.id === selected\n\n        const Title = () => (\n          <ListTitle title={list.title} icon={list['list_icon']}>\n            {isLoading &&\n              isSelected && (\n                <ListItemIcon>\n                  <CircularProgress size={25} />\n                </ListItemIcon>\n              )}\n          </ListTitle>\n        )\n\n        return (\n          <IndexCardItem\n            key={list.id}\n            title={<Title />}\n            subHeader={<ListInfo listSize={list['list_bookmarks'].length} />}\n            onClick={() => {\n              handleClick(list)\n            }}\n          >\n            <Actions>\n              <EditAction />\n              <DeleteAction />\n            </Actions>\n          </IndexCardItem>\n        )\n      })\n    : []\n\n  return (\n    lists && (\n      <React.Fragment>\n        <div style={{ display: 'flex' }}>\n          {selected\n            ? ListCards.filter(list => list.key === selected)[0]\n            : ListCards[0]}\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            style={{ marginTop: 20, marginBottom: 20, marginRight: 20 }}\n            onClick={handleOpen}\n          >\n            <ExpandMoreIcon />\n          </Button>\n        </div>\n\n        <Popover\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n        >\n          {ListCards}\n        </Popover>\n      </React.Fragment>\n    )\n  )\n}\n\nconst Container = props => {\n  const [onSearchById, { loading }] = useLazyQuery(searchByID, {\n    onCompleted: data => {\n      props.onSelect(data)\n    },\n  })\n\n  const onSearch = ids => {\n    onSearchById({ variables: { ids } })\n  }\n\n  return (\n    <Lists {...props} onSelect={ids => onSearch(ids)} isLoading={loading} />\n  )\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, Lists)\n  return <Component {...props} />\n}\n","import React from 'react'\nimport { storiesOf } from '../@storybook/react'\nimport useState from '../@storybook/use-state'\nimport List from './lists'\n\nconst stories = storiesOf('Lists', module)\nstories.addDecorator(Story => <Story />)\n\nstories.add('List Select', () => {\n  const lists = [\n    {\n      list_bookmarks: [\n        '7aafcf53cb0b4ffca9bc26cefe9f469e',\n        '91208b8337bd4d61a061849b2f6c2068',\n      ],\n      list_icon: 'archive',\n      id: '6d305f2d62fa4b65b738346850eaa632',\n      title: 'List 1',\n    },\n    {\n      list_bookmarks: [\n        '91208b8337bd4d61a061849b2f6c2068',\n        'da3ffd5f0a314cbfabed2b06379e4497',\n        '2681cabd1b1341979378cd61b0ab96c9',\n      ],\n      list_icon: 'folder',\n      id: 'f19b28df40854a7696c39509e4d69e6b',\n      title: 'List 2',\n    },\n    {\n      list_bookmarks: [\n        '7aafcf53cb0b4ffca9bc26cefe9f469',\n        '91208b8337bd4d61a061849b2f6c206',\n      ],\n      list_icon: 'folder',\n      id: '6d305f2d62fa4b65b738346850eaa63',\n      title: 'List 3',\n    },\n  ]\n  const [, onSelect] = useState(null)\n  return <List onSelect={onSelect} lists={lists} />\n})\n","import * as React from 'react'\nimport {\n  bboxPropsToGeo,\n  bboxToCoordinatePair,\n  coordinatePairToBBox,\n  geoToBBoxProps,\n} from 'geospatialdraw/bin/coordinates/geometry/bbox'\nimport { UTM } from 'geospatialdraw/bin/coordinates/units'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Point from './point'\nimport Props from './geo-editor'\nimport SpacedLinearContainer from '../spaced-linear-container'\n\nconst BBox: React.SFC<Props> = ({ value, onChange, coordinateUnit }) => {\n  const { id, bbox, properties } = geoToBBoxProps(value)\n  const [upperLeft, lowerRight] = bboxToCoordinatePair(bbox)\n  const containerDirection = coordinateUnit === UTM ? 'row' : 'column'\n  const formControlStyle: any = {\n    display: 'flex',\n    flexDirection: containerDirection,\n  }\n  const formLabelStyle: any =\n    coordinateUnit === UTM\n      ? {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginRight: '0.5em',\n        }\n      : {}\n  return (\n    <SpacedLinearContainer direction={containerDirection} spacing={2}>\n      <FormControl style={formControlStyle}>\n        <FormLabel style={formLabelStyle}>Upper Left</FormLabel>\n        <Point\n          coordinateUnit={coordinateUnit}\n          value={upperLeft}\n          onChange={update =>\n            onChange(\n              bboxPropsToGeo({\n                id,\n                bbox: coordinatePairToBBox([update, lowerRight]),\n                properties,\n              })\n            )\n          }\n        />\n      </FormControl>\n      <FormControl style={formControlStyle}>\n        <FormLabel style={formLabelStyle}>Lower Right</FormLabel>\n        <Point\n          coordinateUnit={coordinateUnit}\n          value={lowerRight}\n          onChange={update =>\n            onChange(\n              bboxPropsToGeo({\n                id,\n                bbox: coordinatePairToBBox([update, upperLeft]),\n                properties,\n              })\n            )\n          }\n        />\n      </FormControl>\n    </SpacedLinearContainer>\n  )\n}\n\nexport default BBox\ntry {\n    // @ts-ignore\n    bbox.displayName = \"bbox\";\n    // @ts-ignore\n    bbox.__docgenInfo = { \"description\": \"\", \"displayName\": \"bbox\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/bbox.tsx#bbox\"] = { docgenInfo: bbox.__docgenInfo, name: \"bbox\", path: \"src/main/webapp/location/bbox.tsx#bbox\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { LengthUnit } from 'geospatialdraw/bin/geometry/units'\nimport { CoordinateUnit } from 'geospatialdraw/bin/coordinates/units'\nimport useCoordinateList from 'geospatialdraw/bin/coordinates/react-hooks/coordinate-list'\nimport Box from '@material-ui/core/Box'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport AddIcon from '@material-ui/icons/Add'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Point from './point'\nimport Length from './length'\nimport SpacedLinearContainer from '../spaced-linear-container'\nimport CoordinateValue from './coordinate-value'\n\ntype Props = {\n  coordinateList: [number, number][]\n  coordinateUnit: CoordinateUnit\n  buffer: number\n  bufferUnit: LengthUnit\n  onChange: (\n    coordinateList: [number, number][],\n    buffer: number,\n    bufferUnit: LengthUnit\n  ) => void\n}\n\nconst CoordinateList: React.SFC<Props> = ({\n  coordinateList: initCoordinates,\n  coordinateUnit,\n  buffer,\n  bufferUnit,\n  onChange,\n}) => {\n  const {\n    lat,\n    lon,\n    coordinateList,\n    setSelectedIndex,\n    selectedIndex,\n    addCoordinateAfter,\n    deleteCoordinate,\n    setCoordinate,\n  } = useCoordinateList(initCoordinates, 0)\n  React.useEffect(\n    () => {\n      if (JSON.stringify(coordinateList) !== JSON.stringify(initCoordinates)) {\n        onChange(coordinateList, buffer, bufferUnit)\n      }\n    },\n    [coordinateList]\n  )\n  return (\n    <SpacedLinearContainer direction=\"column\" spacing={1}>\n      <Point\n        value={{ lat, lon }}\n        coordinateUnit={coordinateUnit}\n        onChange={setCoordinate}\n      />\n      <Length\n        label=\"Buffer\"\n        value={{ length: buffer, unit: bufferUnit }}\n        onChange={({ length, unit }) => onChange(coordinateList, length, unit)}\n      />\n      <Box>\n        <Box flexDirection=\"row\" display=\"flex\" justifyContent=\"flex-end\">\n          <ButtonGroup>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={addCoordinateAfter}\n              title=\"Add Coordinate\"\n              startIcon={<AddIcon />}\n            >\n              Add\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={deleteCoordinate}\n              title=\"Remove Coordinate\"\n              startIcon={<RemoveIcon />}\n            >\n              Remove\n            </Button>\n          </ButtonGroup>\n        </Box>\n        <List>\n          {coordinateList.map(\n            ([coordinateLon, coordinateLat], index: number) => (\n              <ListItem\n                key={index}\n                button\n                selected={index === selectedIndex}\n                onClick={() => setSelectedIndex(index)}\n                title={`Select Coordinate #${index + 1}`}\n              >\n                <CoordinateValue\n                  lat={coordinateLat}\n                  lon={coordinateLon}\n                  unit={coordinateUnit}\n                />\n              </ListItem>\n            )\n          )}\n        </List>\n      </Box>\n    </SpacedLinearContainer>\n  )\n}\n\nexport default CoordinateList\ntry {\n    // @ts-ignore\n    coordinatelist.displayName = \"coordinatelist\";\n    // @ts-ignore\n    coordinatelist.__docgenInfo = { \"description\": \"\", \"displayName\": \"coordinatelist\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/coordinate-list.tsx#coordinatelist\"] = { docgenInfo: coordinatelist.__docgenInfo, name: \"coordinatelist\", path: \"src/main/webapp/location/coordinate-list.tsx#coordinatelist\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport useCoordinateUnit, {\n  CoordinateUnitProps,\n} from 'geospatialdraw/bin/coordinates/react-hooks/coordinate-unit'\nimport Box from '@material-ui/core/Box'\n\nconst Row: React.SFC<any> = props => (\n  <Box display=\"flex\" margin={0} padding={0} {...props} />\n)\n\nconst Column: React.SFC<any> = props => (\n  <Box\n    display=\"flex\"\n    flexGrow={1}\n    justifyContent=\"flex-start\"\n    margin={0}\n    padding={0}\n    marginRight={1}\n    {...props}\n  />\n)\n\nconst CoordinateValue: React.SFC<CoordinateUnitProps> = ({\n  lat,\n  lon,\n  unit,\n}) => {\n  const coordinates = useCoordinateUnit({ lat, lon, unit })\n  return (\n    <Row>\n      {coordinates.map((text, index) => (\n        <Column key={index}>{text}</Column>\n      ))}\n    </Row>\n  )\n}\n\nexport default CoordinateValue\ntry {\n    // @ts-ignore\n    coordinatevalue.displayName = \"coordinatevalue\";\n    // @ts-ignore\n    coordinatevalue.__docgenInfo = { \"description\": \"\", \"displayName\": \"coordinatevalue\", \"props\": { \"lat\": { \"defaultValue\": null, \"description\": \"Lattitude\", \"name\": \"lat\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"lon\": { \"defaultValue\": null, \"description\": \"Longitude\", \"name\": \"lon\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"unit\": { \"defaultValue\": null, \"description\": \"Coordinate unit\", \"name\": \"unit\", \"required\": true, \"type\": { \"name\": \"CoordinateUnit\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/coordinate-value.tsx#coordinatevalue\"] = { docgenInfo: coordinatevalue.__docgenInfo, name: \"coordinatevalue\", path: \"src/main/webapp/location/coordinate-value.tsx#coordinatevalue\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { GeometryJSON } from 'geospatialdraw/bin/geometry/geometry'\nimport { geoToWKT } from './geo-to-wkt'\n\nconst METERS_KILOMETERS = 1000\nconst METERS_FEET = 0.3048\nconst METERS_YARDS = 0.9144\nconst METERS_MILES = 1609.344\nconst METERS_NAUTICAL_MILES = 1852\n\nconst getDistanceInMeters = (distance: number, units: string): number => {\n  switch (units) {\n    case 'kilometers':\n      return distance * METERS_KILOMETERS\n    case 'feet':\n      return distance * METERS_FEET\n    case 'yards':\n      return distance * METERS_YARDS\n    case 'miles':\n      return distance * METERS_MILES\n    case 'nautical miles':\n      return distance * METERS_NAUTICAL_MILES\n    case 'meters':\n    default:\n      return distance\n  }\n}\n\ntype FilterType = 'DWITHIN' | 'INTERSECTS'\nconst DWITHIN: FilterType = 'DWITHIN'\nconst INTERSECTS: FilterType = 'INTERSECTS'\n\ntype Property = 'anyGeo'\nconst ANY_GEO: Property = 'anyGeo'\n\nexport type Filter = {\n  type: FilterType\n  property: string\n  value: string\n  geojson: GeometryJSON\n  distance?: number\n}\n\nexport const geoToFilter = (\n  geo: GeometryJSON,\n  property: string = ANY_GEO\n): Filter => ({\n  type:\n    geo.properties.buffer && geo.properties.buffer.width > 0\n      ? DWITHIN\n      : INTERSECTS,\n  property,\n  value: geoToWKT(geo),\n\n  geojson: geo,\n  distance:\n    (geo.properties.buffer &&\n      getDistanceInMeters(\n        geo.properties.buffer.width,\n        geo.properties.buffer.unit\n      )) ||\n    0,\n})\n","import { GeometryJSON } from 'geospatialdraw/bin/geometry/geometry'\nimport { LengthUnit } from 'geospatialdraw/bin/geometry/units'\nimport { geoJSONToGeometryJSON } from 'geospatialdraw/bin/geometry/utilities'\nimport WKT from 'ol/format/WKT'\nimport GeoJSON from 'ol/format/GeoJSON'\n\nconst wktFormatter = new WKT()\nconst geojsonFormatter = new GeoJSON()\n\nexport const geoToWKT = (geo: GeometryJSON): string =>\n  wktFormatter.writeFeature(geojsonFormatter.readFeature(geo))\n\ntype WKTProps = {\n  wkt: string\n  id: string\n  buffer: number\n  bufferUnit: LengthUnit\n  properties?: object\n}\n\nexport const wktToGeo = ({\n  wkt,\n  id,\n  buffer,\n  bufferUnit,\n  properties = {},\n}: WKTProps): GeometryJSON => {\n  const geo = wktFormatter.readGeometry(wkt)\n  return geoJSONToGeometryJSON(id, {\n    type: 'Feature',\n    geometry: geojsonFormatter.writeGeometryObject(geo),\n    properties: {\n      ...properties,\n      buffer: {\n        width: buffer,\n        unit: bufferUnit,\n      },\n    },\n  })\n}\ntry {\n    // @ts-ignore\n    geoToWKT.displayName = \"geoToWKT\";\n    // @ts-ignore\n    geoToWKT.__docgenInfo = { \"description\": \"\", \"displayName\": \"geoToWKT\", \"props\": { \"type\": { \"defaultValue\": null, \"description\": \"Specifies the type of GeoJSON object.\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"\\\"Feature\\\"\" } }, \"id\": { \"defaultValue\": null, \"description\": \"A value that uniquely identifies this feature in a\\nhttps://tools.ietf.org/html/rfc7946#section-3.2.\", \"name\": \"id\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"properties\": { \"defaultValue\": null, \"description\": \"Properties associated with this feature.\", \"name\": \"properties\", \"required\": true, \"type\": { \"name\": \"{ [name: string]: any; } & GeometryJSONProperties\" } }, \"bbox\": { \"defaultValue\": null, \"description\": \"Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections.\\nhttps://tools.ietf.org/html/rfc7946#section-5\", \"name\": \"bbox\", \"required\": true, \"type\": { \"name\": \"[number, number, number, number] | ([number, number, number, number, number, number] & [number, number, number, number])\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/geo-to-wkt.tsx#geoToWKT\"] = { docgenInfo: geoToWKT.__docgenInfo, name: \"geoToWKT\", path: \"src/main/webapp/location/geo-to-wkt.tsx#geoToWKT\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    wktToGeo.displayName = \"wktToGeo\";\n    // @ts-ignore\n    wktToGeo.__docgenInfo = { \"description\": \"\", \"displayName\": \"wktToGeo\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/geo-to-wkt.tsx#wktToGeo\"] = { docgenInfo: wktToGeo.__docgenInfo, name: \"wktToGeo\", path: \"src/main/webapp/location/geo-to-wkt.tsx#wktToGeo\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import Location from './location'\nexport { Filter, geoToFilter } from './filter'\nexport { Location }\n","import * as React from 'react'\nimport { geoJSONToGeometryJSON } from 'geospatialdraw/bin/geometry/utilities'\nimport {\n  KeywordGeoProperties,\n  ContainerProps as Props,\n  Suggestion,\n} from './props'\nimport Keyword from './presentation'\n\nconst MINIMUM_INPUT_LENGTH = 2\n\nconst Container: React.SFC<Props> = ({\n  value,\n  onChange,\n  minimumInputLength = MINIMUM_INPUT_LENGTH,\n  useFeatureQuery,\n  useSuggestionQuery,\n  ...rest\n}) => {\n  const {\n    keyword = '',\n    keywordId = '',\n  } = value.properties as KeywordGeoProperties\n  const [selectedSuggestion, setSelectedSuggestion] = React.useState<\n    Suggestion\n  >({ name: '', id: '' })\n  const [input, setInput] = React.useState(keyword)\n  const [isOpen, setIsOpen] = React.useState(false)\n  const {\n    fetch: getFeature,\n    data: geofeature,\n    loading: featureLoading,\n    error: featureError,\n  } = useFeatureQuery()\n  const {\n    fetch: getSuggestions,\n    data: suggestions,\n    loading: suggestionLoading,\n    error: suggestionError,\n  } = useSuggestionQuery()\n  React.useEffect(\n    () => {\n      if (selectedSuggestion.id && !featureLoading) {\n        const geo = geoJSONToGeometryJSON(value.properties.id, {\n          ...geofeature,\n          properties: {\n            ...value.properties,\n            keyword: selectedSuggestion.name,\n            keywordId: selectedSuggestion.id,\n          },\n        })\n        setInput(selectedSuggestion.name)\n        onChange(geo)\n      }\n    },\n    [selectedSuggestion.id, selectedSuggestion.name, featureLoading]\n  )\n  const loading = suggestionLoading || featureLoading\n  const error = suggestionError || featureError ? true : false\n  return (\n    <Keyword\n      value={{\n        ...geofeature,\n        properties: {\n          ...value.properties,\n          ...geofeature.properties,\n          keyword: input,\n          keywordId,\n        },\n      }}\n      onChange={update =>\n        onChange({\n          ...update,\n          properties: {\n            ...update.properties,\n            keyword,\n          },\n        })\n      }\n      getGeoFeature={suggestion => {\n        getFeature(suggestion.id)\n        setSelectedSuggestion(suggestion)\n      }}\n      getSuggestions={q => {\n        setInput(q)\n        if (q.length >= minimumInputLength) {\n          getSuggestions(q)\n        }\n      }}\n      loading={loading}\n      error={error}\n      suggestions={isOpen ? suggestions : []}\n      isOpen={isOpen}\n      onOpen={() => {\n        setIsOpen(true)\n      }}\n      onClose={() => {\n        setIsOpen(false)\n        if (selectedSuggestion.id) {\n          if (selectedSuggestion.name !== input) {\n            setInput(selectedSuggestion.name)\n          }\n        } else if (keyword && keyword !== input) {\n          setInput(keyword)\n        }\n      }}\n      {...rest}\n    />\n  )\n}\nContainer.displayName = 'KeywordContainer'\n\nexport default Container\ntry {\n    // @ts-ignore\n    container.displayName = \"container\";\n    // @ts-ignore\n    container.__docgenInfo = { \"description\": \"\", \"displayName\": \"container\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/keyword/container.tsx#container\"] = { docgenInfo: container.__docgenInfo, name: \"container\", path: \"src/main/webapp/location/keyword/container.tsx#container\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nconst { useApolloFallback } = require('../../react-hooks')\nimport { ContainerProps, PresentationProps } from './props'\nimport Container from './container'\nimport withRemoteQueries from './with-remote-queries'\n\nexport default (props: ContainerProps | PresentationProps) => {\n  const Component = useApolloFallback(withRemoteQueries(Container), Container)\n  return <Component {...props} />\n}\ntry {\n    // @ts-ignore\n    keyword.displayName = \"keyword\";\n    // @ts-ignore\n    keyword.__docgenInfo = { \"description\": \"\", \"displayName\": \"keyword\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/keyword/index.tsx#keyword\"] = { docgenInfo: keyword.__docgenInfo, name: \"keyword\", path: \"src/main/webapp/location/keyword/index.tsx#keyword\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport {\n  geoToPolygonProps,\n  polygonPropsToGeo,\n} from 'geospatialdraw/bin/coordinates/geometry/polygon-line'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Length from '../length'\nimport SpacedLinearContainer from '../../spaced-linear-container'\nimport {\n  Suggestion,\n  PresentationProps as Props,\n  KeywordGeoProperties,\n} from './props'\n\nconst Keyword: React.SFC<Props> = ({\n  value,\n  onChange,\n  placeholder = 'Pan to a region, country, or city',\n  minimumInputLength,\n  getSuggestions,\n  getGeoFeature,\n  loading,\n  error,\n  suggestions,\n  isOpen,\n  onOpen,\n  onClose,\n}) => {\n  const { id, properties, coordinates, buffer, bufferUnit } = geoToPolygonProps(\n    value\n  )\n  const { keyword = '', keywordId } = properties as KeywordGeoProperties\n  const hasSelection = keyword && keywordId ? true : false\n  return (\n    <SpacedLinearContainer direction=\"column\" spacing={1}>\n      <Autocomplete\n        title={placeholder}\n        style={{ width: 300 }}\n        open={isOpen}\n        onOpen={onOpen}\n        onClose={onClose}\n        getOptionLabel={(suggestion: Suggestion) => suggestion.name}\n        options={suggestions}\n        loading={loading}\n        inputValue={keyword}\n        onChange={(_e, value) => {\n          if (value) {\n            const { id, name } = value\n            getGeoFeature({ id, name })\n          }\n        }}\n        renderInput={params => (\n          <TextField\n            {...params}\n            error={error}\n            helperText={open || hasSelection ? undefined : placeholder}\n            label=\"Keyword\"\n            placeholder={`Please enter ${minimumInputLength} or more characters`}\n            fullWidth\n            onChange={e => {\n              getSuggestions(e.target.value)\n            }}\n            InputProps={{\n              ...params.InputProps,\n              endAdornment: (\n                <React.Fragment>\n                  {loading ? (\n                    <CircularProgress color=\"inherit\" size={20} />\n                  ) : null}\n                  {params.InputProps.endAdornment}\n                </React.Fragment>\n              ),\n            }}\n          />\n        )}\n      />\n      {hasSelection ? (\n        <Length\n          label=\"Buffer\"\n          value={{ length: buffer, unit: bufferUnit }}\n          onChange={({ length, unit }) =>\n            onChange(\n              polygonPropsToGeo({\n                id,\n                coordinates,\n                buffer: length,\n                bufferUnit: unit,\n                properties,\n              })\n            )\n          }\n        />\n      ) : null}\n    </SpacedLinearContainer>\n  )\n}\nKeyword.displayName = 'Keyword'\n\nexport default Keyword\ntry {\n    // @ts-ignore\n    presentation.displayName = \"presentation\";\n    // @ts-ignore\n    presentation.__docgenInfo = { \"description\": \"\", \"displayName\": \"presentation\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/keyword/presentation.tsx#presentation\"] = { docgenInfo: presentation.__docgenInfo, name: \"presentation\", path: \"src/main/webapp/location/keyword/presentation.tsx#presentation\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { GeometryJSON } from 'geospatialdraw/bin/geometry/geometry'\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport {\n  Suggestion,\n  KeywordProps as Props,\n  ContainerProps,\n  queryHook,\n} from './props'\n\nconst SuggestionsQuery = gql`\n  query SuggestionsQuery($q: String!) {\n    suggestions(q: $q) {\n      id\n      name\n    }\n  }\n`\n\nconst FeatureQuery = gql`\n  query FeatureQuery($id: String!) {\n    geofeature(id: $id) {\n      type\n      geometry\n      properties\n      id\n    }\n  }\n`\n\ntype suggestionResult = {\n  suggestions: Suggestion[]\n}\n\ntype geofeatureResult = {\n  geofeature: GeometryJSON\n}\n\nconst withRemoteQueries = (\n  Component: React.ComponentType<ContainerProps>\n): React.SFC<Props> => ({ value, ...rest }) => {\n  const [\n    getFeature,\n    {\n      data: { geofeature } = { geofeature: value },\n      loading: featureLoading,\n      error: featureError,\n    },\n  ] = useLazyQuery<geofeatureResult>(FeatureQuery)\n  const [\n    getSuggestions,\n    {\n      data: { suggestions } = { suggestions: [] },\n      loading: suggestionLoading,\n      error: suggestionError,\n    },\n  ] = useLazyQuery<suggestionResult>(SuggestionsQuery)\n  const useFeatureQuery: queryHook<GeometryJSON, string> = () => ({\n    fetch: id =>\n      getFeature({\n        variables: {\n          id,\n        },\n      }),\n    data: geofeature,\n    loading: featureLoading,\n    error: featureError ? true : false,\n  })\n  const useSuggestionQuery: queryHook<Suggestion[], string> = () => ({\n    fetch: q =>\n      getSuggestions({\n        variables: {\n          q,\n        },\n      }),\n    data: suggestions,\n    loading: suggestionLoading,\n    error: suggestionError ? true : false,\n  })\n  return (\n    <Component\n      useFeatureQuery={useFeatureQuery}\n      useSuggestionQuery={useSuggestionQuery}\n      value={value}\n      {...rest}\n    />\n  )\n}\n\nexport default withRemoteQueries\ntry {\n    // @ts-ignore\n    withremotequeries.displayName = \"withremotequeries\";\n    // @ts-ignore\n    withremotequeries.__docgenInfo = { \"description\": \"\", \"displayName\": \"withremotequeries\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/keyword/with-remote-queries.tsx#withremotequeries\"] = { docgenInfo: withremotequeries.__docgenInfo, name: \"withremotequeries\", path: \"src/main/webapp/location/keyword/with-remote-queries.tsx#withremotequeries\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { LengthUnit } from 'geospatialdraw/bin/geometry/units'\nimport NumberInput, { MaterialUIInputProps } from './number'\nimport Units from './units'\nimport SpacedLinearContainer from '../spaced-linear-container'\n\nconst LENGTH_PRECISION = 3\n\ntype Measurement = {\n  length: number\n  unit: LengthUnit\n}\n\ntype Props = MaterialUIInputProps & {\n  value: Measurement\n  onChange: (value: Measurement) => void\n}\n\nconst Length: React.SFC<Props> = ({\n  value: { length, unit },\n  onChange,\n  ...rest\n}) => (\n  <SpacedLinearContainer direction=\"row\" spacing={1}>\n    <NumberInput\n      value={length}\n      onChange={update => onChange({ length: update, unit })}\n      decimalPlaces={LENGTH_PRECISION}\n      {...rest}\n      inputProps={{\n        style: {\n          textAlign: 'end',\n        },\n      }}\n      style={{\n        width: '7rem',\n      }}\n    />\n    <Units\n      value={unit}\n      onChange={update => onChange({ length, unit: update })}\n    />\n  </SpacedLinearContainer>\n)\n\nexport default Length\ntry {\n    // @ts-ignore\n    length.displayName = \"length\";\n    // @ts-ignore\n    length.__docgenInfo = { \"description\": \"\", \"displayName\": \"length\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/length.tsx#length\"] = { docgenInfo: length.__docgenInfo, name: \"length\", path: \"src/main/webapp/location/length.tsx#length\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport {\n  geoToLineProps,\n  linePropsToGeo,\n} from 'geospatialdraw/bin/coordinates/geometry/polygon-line'\nimport CoordinateList from './coordinate-list'\nimport Props from './geo-editor'\n\nconst Line: React.SFC<Props> = ({ value, onChange, coordinateUnit }) => {\n  const { id, properties, coordinates, buffer, bufferUnit } = geoToLineProps(\n    value\n  )\n  return (\n    <CoordinateList\n      coordinateList={coordinates}\n      coordinateUnit={coordinateUnit}\n      buffer={buffer}\n      bufferUnit={bufferUnit}\n      onChange={(coordinateListValue, bufferValue, bufferUnitValue) =>\n        onChange(\n          linePropsToGeo({\n            id,\n            coordinates: coordinateListValue,\n            buffer: bufferValue,\n            bufferUnit: bufferUnitValue,\n            properties,\n          })\n        )\n      }\n    />\n  )\n}\n\nexport default Line\ntry {\n    // @ts-ignore\n    line.displayName = \"line\";\n    // @ts-ignore\n    line.__docgenInfo = { \"description\": \"\", \"displayName\": \"line\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/line.tsx#line\"] = { docgenInfo: line.__docgenInfo, name: \"line\", path: \"src/main/webapp/location/line.tsx#line\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { action } from '@connexta/ace/@storybook/addon-actions'\nimport { storiesOf } from '../@storybook/react'\nimport React, { useState } from 'react'\nimport PointRadius from './point-radius'\nimport Line from './line'\nimport Polygon from './polygon'\nimport BBox from './bbox'\nimport Keyword from './keyword'\nimport Location from './location'\nimport {\n  MILES,\n  KILOMETERS,\n  NAUTICAL_MILES,\n} from 'geospatialdraw/bin/geometry/units'\nimport {\n  LAT_LON,\n  LAT_LON_DMS,\n  USNG,\n  UTM,\n} from 'geospatialdraw/bin/coordinates/units'\nimport {\n  geoJSONToGeometryJSON,\n  makeEmptyGeometry,\n} from 'geospatialdraw/bin/geometry/utilities'\nimport {\n  makePointRadiusGeo,\n  makeLineGeo,\n  makePolygonGeo,\n  makeBBoxGeo,\n} from 'geospatialdraw/bin/geometry/shape-factory'\nimport { POLYGON, LINE } from 'geospatialdraw/bin/shapes/shape'\nimport withCoordinateUnitTabs from './with-coordinate-unit-tabs'\nimport { DrawProvider } from '../react-hooks/use-draw-interface'\n\nconst MOCK_AJAX_DELAY = 2000\n\nconst stories = storiesOf('Location', module)\nstories.addDecorator(Story => <Story />)\n\nconst editors = {\n  pointRadius: {\n    Editor: PointRadius,\n    geo: makePointRadiusGeo('pointRadiusGeo', 45, 38, 600, MILES),\n  },\n  line: {\n    Editor: Line,\n    geo: makeLineGeo('lineGeo', [[50, 50], [56, 20], [36, 30]], 50, KILOMETERS),\n  },\n  polygon: {\n    Editor: Polygon,\n    geo: makePolygonGeo(\n      'polygonGeo',\n      [[50, 50], [56, 20], [36, 30]],\n      30,\n      NAUTICAL_MILES\n    ),\n  },\n  bbox: {\n    Editor: BBox,\n    geo: makeBBoxGeo('bboxGeo', [20, 30, 50, 50]),\n  },\n}\n\nconst coordinateUnits = [LAT_LON, LAT_LON_DMS, USNG, UTM]\n\nObject.keys(editors).forEach(key => {\n  const editor = editors[key]\n  coordinateUnits.forEach(coordinateUnit => {\n    stories.add(`${key} using ${coordinateUnit}`, () => {\n      const [geo, setGeo] = useState(editor.geo)\n      return (\n        <editor.Editor\n          value={geo}\n          onChange={update => {\n            action('onChange')(update)\n            setGeo(update)\n          }}\n          coordinateUnit={coordinateUnit}\n        />\n      )\n    })\n  })\n  stories.add(`${key} with coordinate tabs`, () => {\n    const [geo, setGeo] = useState(editor.geo)\n    const Editor = withCoordinateUnitTabs(editor.Editor)\n    return (\n      <Editor\n        value={geo}\n        onChange={update => {\n          action('onChange')(update)\n          setGeo(update)\n        }}\n      />\n    )\n  })\n})\n\nconst useKeyword = value => {\n  const [featureLoading, setFeatureLoading] = useState(false)\n  const [featureData, setFeatureData] = useState(value)\n  const useFeatureQuery = () => ({\n    fetch: () => {\n      setFeatureLoading(true)\n      setTimeout(() => {\n        setFeatureLoading(false)\n        setFeatureData({\n          type: 'Feature',\n          geometry: {\n            type: 'Polygon',\n            coordinates: [\n              [\n                [-77.3811, 42.5304],\n                [-77.1811, 42.5304],\n                [-77.1811, 42.7304],\n                [-77.3811, 42.7304],\n                [-77.3811, 42.5304],\n              ],\n            ],\n          },\n          properties: {},\n          id: 'Italy Valley Cemetery',\n        })\n      }, MOCK_AJAX_DELAY)\n    },\n    data: featureData,\n    loading: featureLoading,\n    error: false,\n  })\n  const [suggestionLoading, setSuggestionLoading] = useState(false)\n  const [suggestions, setSuggestions] = useState([])\n  const useSuggestionQuery = () => ({\n    fetch: () => {\n      setSuggestionLoading(true)\n      setTimeout(() => {\n        setSuggestionLoading(false)\n        setSuggestions([\n          {\n            id: '1dc06d71-dc20-44d5-b211-de33816071c1',\n            name: 'Italy',\n          },\n          {\n            id: 'c0ab17cc-cc60-4a15-9860-3915aa9f0afb',\n            name: 'Italy Valley Cemetery',\n          },\n          {\n            id: 'cff9dea4-2e5e-4c03-9f5b-45495c638e78',\n            name: 'Italy Hill Cemetery',\n          },\n          {\n            id: '19e138c6-03df-47ea-a657-17b5cd2932df',\n            name: 'Italy Post Office',\n          },\n          {\n            id: '9573742f-dd27-4f25-ac83-25250269f469',\n            name: 'Italy Police Department',\n          },\n          {\n            id: 'cdbcd443-c987-489e-9e01-da21e82bc9a3',\n            name: 'Italy Naples Church',\n          },\n          {\n            id: '0816671b-4ce5-45c9-a045-8f83451bcbd5',\n            name: 'Italy Division',\n          },\n          {\n            id: 'd0ef5f36-681a-4cb6-90cc-1f344e594100',\n            name: 'Italy Mine',\n          },\n          {\n            id: '07f74c89-a7b2-4bf9-87fa-22d7d21a6ef4',\n            name: 'Italy Mine',\n          },\n          {\n            id: '75b3f19c-0872-466c-ad89-c051e832362e',\n            name: 'Italy Hollow Cemetery',\n          },\n        ])\n      }, MOCK_AJAX_DELAY)\n    },\n    data: suggestions,\n    loading: suggestionLoading,\n    error: false,\n  })\n  return {\n    useFeatureQuery,\n    useSuggestionQuery,\n  }\n}\n\nstories.add(`keyword`, () => {\n  const [value, setValue] = useState(makeEmptyGeometry('keyword', POLYGON))\n  const keywordProps = useKeyword(value)\n  return (\n    <Keyword\n      value={value}\n      onChange={update => {\n        action('onChange')(update)\n        setValue(update)\n      }}\n      {...keywordProps}\n    />\n  )\n})\n\nstories.add(`keyword prefilled`, () => {\n  const [value, setValue] = useState(\n    geoJSONToGeometryJSON('keyword-prefilled', {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-77.3811, 42.5304],\n            [-77.1811, 42.5304],\n            [-77.1811, 42.7304],\n            [-77.3811, 42.7304],\n            [-77.3811, 42.5304],\n          ],\n        ],\n      },\n      properties: {\n        keyword: 'Italy',\n        keywordId: '1dc06d71-dc20-44d5-b211-de33816071c1',\n      },\n    })\n  )\n  const keywordProps = useKeyword(value)\n  return (\n    <Keyword\n      value={value}\n      onChange={update => {\n        action('onChange')(update)\n        setValue(update)\n      }}\n      {...keywordProps}\n    />\n  )\n})\n\nstories.add(`location`, () => {\n  const [value, setValue] = useState(makeEmptyGeometry('location', LINE))\n  const keyword = useKeyword(value)\n  return (\n    <Location\n      enableDrawing={false}\n      value={value}\n      onChange={update => {\n        action('onChange')(update)\n        setValue(update)\n      }}\n      editorProps={{\n        keyword,\n      }}\n    />\n  )\n})\n\nstories.add(`location with draw button`, () => {\n  const [value, setValue] = useState(makeEmptyGeometry('location', LINE))\n  const keyword = useKeyword(value)\n  return (\n    <DrawProvider>\n      <Location\n        value={value}\n        onChange={update => {\n          action('onChange')(update)\n          setValue(update)\n        }}\n        editorProps={{\n          keyword,\n        }}\n      />\n    </DrawProvider>\n  )\n})\n\nstories.add(`location with keyword`, () => {\n  const [value, setValue] = useState(\n    geoJSONToGeometryJSON('location-keyword', {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-77.3811, 42.5304],\n            [-77.1811, 42.5304],\n            [-77.1811, 42.7304],\n            [-77.3811, 42.7304],\n            [-77.3811, 42.5304],\n          ],\n        ],\n      },\n      properties: {\n        keyword: 'Italy',\n        keywordId: '1dc06d71-dc20-44d5-b211-de33816071c1',\n        buffer: {\n          width: 50,\n          unit: MILES,\n        },\n      },\n    })\n  )\n  const keyword = useKeyword(value)\n  return (\n    <Location\n      enableDrawing={false}\n      value={value}\n      onChange={update => {\n        action('onChange')(update)\n        setValue(update)\n      }}\n      editorProps={{\n        keyword,\n      }}\n    />\n  )\n})\n\nstories.add(`location with bounding box`, () => {\n  const [value, setValue] = useState(\n    makeBBoxGeo('location-bbox', [20, 30, 50, 50])\n  )\n  const keyword = useKeyword(value)\n  return (\n    <Location\n      enableDrawing={false}\n      value={value}\n      onChange={update => {\n        action('onChange')(update)\n        setValue(update)\n      }}\n      editorProps={{\n        keyword,\n      }}\n    />\n  )\n})\n","import * as React from 'react'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Line from './line'\nimport Polygon from './polygon'\nimport PointRadius from './point-radius'\nimport BBox from './bbox'\nimport withCoordinateUnitTabs from './with-coordinate-unit-tabs'\nimport withDrawButton from './with-draw-button'\nimport Keyword from './keyword'\nimport { BasicEditorProps } from './geo-editor'\nimport { makeEmptyGeometry } from 'geospatialdraw/bin/geometry/utilities'\nimport {\n  LINE,\n  POLYGON,\n  POINT_RADIUS,\n  BBOX,\n  POINT,\n  Shape,\n} from 'geospatialdraw/bin/shapes/shape'\nimport ShapeDetector from 'geospatialdraw/bin/shapes/shape-detector'\nimport { GeometryJSON } from 'geospatialdraw/bin/geometry/geometry'\n\ntype LocationType = 'line' | 'polygon' | 'pointRadius' | 'bbox' | 'keyword'\n\ntype LocationTypeComponentMap = {\n  [type in LocationType]: {\n    label: string\n    Component: React.ComponentType<BasicEditorProps>\n    ComponentWithDrawButton: React.ComponentType<BasicEditorProps>\n    shape: Shape\n  }\n}\n\ntype EditorPropsMap = { [editorType in LocationType]: any }\n\ntype Props = BasicEditorProps & {\n  enableDrawing?: boolean\n  editorProps?: EditorPropsMap\n}\n\nconst componentMap: LocationTypeComponentMap = {\n  line: {\n    label: 'Line',\n    Component: withCoordinateUnitTabs(Line),\n    ComponentWithDrawButton: withDrawButton(withCoordinateUnitTabs(Line), LINE),\n    shape: LINE,\n  },\n  polygon: {\n    label: 'Polygon',\n    Component: withCoordinateUnitTabs(Polygon),\n    ComponentWithDrawButton: withDrawButton(\n      withCoordinateUnitTabs(Polygon),\n      POLYGON\n    ),\n    shape: POLYGON,\n  },\n  pointRadius: {\n    label: 'Point-Radius',\n    Component: withCoordinateUnitTabs(PointRadius),\n    ComponentWithDrawButton: withDrawButton(\n      withCoordinateUnitTabs(PointRadius),\n      POINT_RADIUS\n    ),\n    shape: POINT_RADIUS,\n  },\n  bbox: {\n    label: 'Bounding Box',\n    Component: withCoordinateUnitTabs(BBox),\n    ComponentWithDrawButton: withDrawButton(withCoordinateUnitTabs(BBox), BBOX),\n    shape: BBOX,\n  },\n  keyword: {\n    label: 'Keyword',\n    Component: Keyword,\n    ComponentWithDrawButton: Keyword,\n    shape: POLYGON,\n  },\n}\n\ntype ShapeToLocationTypeMap = { [key: string]: LocationType }\n\nconst shapeToLocationTypeMap: ShapeToLocationTypeMap = {\n  [LINE]: 'line',\n  [POLYGON]: 'polygon',\n  [POINT_RADIUS]: 'pointRadius',\n  [POINT]: 'pointRadius',\n  [BBOX]: 'bbox',\n}\n\nconst shapeDetector = new ShapeDetector()\n\nconst locationTypeFromGeo = (geo: GeometryJSON): LocationType => {\n  if (typeof geo.properties.keyword === 'string') {\n    return 'keyword'\n  } else {\n    const shape = geo.properties.shape || shapeDetector.shapeFromGeoJSON(geo)\n    return shapeToLocationTypeMap[shape]\n  }\n}\n\nconst Location: React.SFC<Props> = ({\n  value,\n  onChange,\n  enableDrawing = true,\n  editorProps = {} as EditorPropsMap,\n}) => {\n  const locationType = locationTypeFromGeo(value)\n  const locationTypeDescription = componentMap[locationType]\n  const Component = enableDrawing\n    ? locationTypeDescription.ComponentWithDrawButton\n    : locationTypeDescription.Component\n  const extendedComponentProps = editorProps.hasOwnProperty(locationType)\n    ? editorProps[locationType]\n    : {}\n  const onSelection = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    // the geo must match the location type\n    const updatedType = e.target.value as LocationType\n    const shape = componentMap[updatedType].shape\n    const { id, keyword = '', keywordId = '', ...rest } = value.properties\n    const properties =\n      updatedType === 'keyword'\n        ? {\n            ...rest,\n            keyword,\n            keywordId,\n          }\n        : rest\n    const geo = makeEmptyGeometry(id, shape, properties)\n    onChange(geo)\n  }\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Location</InputLabel>\n      <Select value={locationType} onChange={onSelection}>\n        {Object.keys(componentMap).map((key: LocationType) => (\n          <MenuItem key={key} value={key}>\n            {componentMap[key].label}\n          </MenuItem>\n        ))}\n      </Select>\n      <Component\n        value={value}\n        onChange={onChange}\n        {...extendedComponentProps}\n      />\n    </FormControl>\n  )\n}\n\nexport default Location\ntry {\n    // @ts-ignore\n    location.displayName = \"location\";\n    // @ts-ignore\n    location.__docgenInfo = { \"description\": \"\", \"displayName\": \"location\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/location.tsx#location\"] = { docgenInfo: location.__docgenInfo, name: \"location\", path: \"src/main/webapp/location/location.tsx#location\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport useNumberInput, {\n  NumericConstraints,\n} from 'geospatialdraw/bin/coordinates/react-hooks/number'\n\nexport type MaterialUIInputProps = {\n  autoComplete?: string\n  autoFocus?: boolean\n  color?: 'primary' | 'secondary'\n  children?: React.ReactNode\n  defaultValue?: unknown\n  disabled?: boolean\n  error?: boolean\n  fullWidth?: boolean\n  helperText?: React.ReactNode\n  id?: string\n  InputLabelProps?: any\n  inputRef?: React.Ref<any>\n  label?: React.ReactNode\n  margin?: any\n  multiline?: boolean\n  name?: string\n  placeholder?: string\n  required?: boolean\n  rows?: string | number\n  rowsMax?: string | number\n  select?: boolean\n  SelectProps?: any\n  type?: string\n  InputProps?: any\n  inputProps?: any\n  style?: any\n}\n\ntype Props = MaterialUIInputProps &\n  NumericConstraints & {\n    /** Numeric value */\n    value: number\n    /** Called on change */\n    onChange: (value: number) => void\n  }\n\ntype ChangeEvent = React.ChangeEvent<HTMLInputElement>\n\nconst NumberInput: React.SFC<Props> = ({\n  value,\n  onChange,\n  maxValue,\n  minValue,\n  decimalPlaces,\n  ...rest\n}) => {\n  const [number, text, setText, formattedText] = useNumberInput(value, {\n    maxValue,\n    minValue,\n    decimalPlaces,\n  })\n  return (\n    <TextField\n      value={text}\n      error={number === null}\n      helperText={number === null ? 'invalid value' : ''}\n      onChange={({ target: { value: textValue } }: ChangeEvent) =>\n        setText(textValue)\n      }\n      onBlur={() => {\n        setText(formattedText)\n        if (number !== null) {\n          onChange(number)\n        }\n      }}\n      {...rest}\n    />\n  )\n}\n\nexport default NumberInput\ntry {\n    // @ts-ignore\n    number.displayName = \"number\";\n    // @ts-ignore\n    number.__docgenInfo = { \"description\": \"\", \"displayName\": \"number\", \"props\": { \"maxValue\": { \"defaultValue\": null, \"description\": \"Maximum allowed value\", \"name\": \"maxValue\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"minValue\": { \"defaultValue\": null, \"description\": \"Minimum allowed value\", \"name\": \"minValue\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"decimalPlaces\": { \"defaultValue\": null, \"description\": \"Number of displayed decimal places\", \"name\": \"decimalPlaces\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"value\": { \"defaultValue\": null, \"description\": \"Numeric value\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"Called on change\", \"name\": \"onChange\", \"required\": true, \"type\": { \"name\": \"(value: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/number.tsx#number\"] = { docgenInfo: number.__docgenInfo, name: \"number\", path: \"src/main/webapp/location/number.tsx#number\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport {\n  geoToPointRadiusProps,\n  pointRadiusPropsToGeo,\n} from 'geospatialdraw/bin/coordinates/geometry/point-circle'\nimport Point from './point'\nimport Props from './geo-editor'\nimport Length from './length'\nimport SpacedLinearContainer from '../spaced-linear-container'\n\nconst PointRadius: React.SFC<Props> = ({\n  value,\n  onChange,\n  coordinateUnit,\n}: Props) => {\n  const {\n    id,\n    lat,\n    lon,\n    radius,\n    radiusUnit,\n    properties,\n  } = geoToPointRadiusProps(value)\n  return (\n    <SpacedLinearContainer direction=\"column\" spacing={1}>\n      <Point\n        coordinateUnit={coordinateUnit}\n        value={{ lat, lon }}\n        onChange={({ lat, lon }) => {\n          onChange(\n            pointRadiusPropsToGeo({\n              id,\n              lat,\n              lon,\n              radius,\n              radiusUnit,\n              properties,\n            })\n          )\n        }}\n      />\n      <Length\n        label=\"Radius\"\n        value={{ length: radius, unit: radiusUnit }}\n        onChange={({ length, unit }) =>\n          onChange(\n            pointRadiusPropsToGeo({\n              id,\n              lat,\n              lon,\n              radius: length,\n              radiusUnit: unit,\n              properties,\n            })\n          )\n        }\n      />\n    </SpacedLinearContainer>\n  )\n}\n\nexport default PointRadius\ntry {\n    // @ts-ignore\n    pointradius.displayName = \"pointradius\";\n    // @ts-ignore\n    pointradius.__docgenInfo = { \"description\": \"\", \"displayName\": \"pointradius\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/point-radius.tsx#pointradius\"] = { docgenInfo: pointradius.__docgenInfo, name: \"pointradius\", path: \"src/main/webapp/location/point-radius.tsx#pointradius\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport PointProps from './props'\nimport { CoordinateUnit } from 'geospatialdraw/bin/coordinates/units'\nimport PointUTM from './point-utm'\nimport PointLatLon from './point-lat-lon'\nimport PointDMS from './point-dms'\nimport PointUSNG from './point-usng'\n\ntype Props = PointProps & {\n  coordinateUnit: CoordinateUnit\n}\n\ntype UnitToInputComponentMap = {\n  [unit in CoordinateUnit]: React.ComponentType<PointProps>\n}\n\nconst ComponentMap: UnitToInputComponentMap = {\n  'UTM/UPS': PointUTM,\n  'Lat/Lon (DD)': PointLatLon,\n  'Lat/Lon (DMS)': PointDMS,\n  'USNG/MGRS': PointUSNG,\n}\n\nconst Point: React.SFC<Props> = ({ coordinateUnit, ...rest }) => {\n  const Component = ComponentMap[coordinateUnit]\n  return <Component {...rest} />\n}\n\nexport default Point\ntry {\n    // @ts-ignore\n    point.displayName = \"point\";\n    // @ts-ignore\n    point.__docgenInfo = { \"description\": \"\", \"displayName\": \"point\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/point/index.tsx#point\"] = { docgenInfo: point.__docgenInfo, name: \"point\", path: \"src/main/webapp/location/point/index.tsx#point\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport SpacedLinearContainer from '../../spaced-linear-container'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Props from './props'\nimport useDMSCoordinates from 'geospatialdraw/bin/coordinates/react-hooks/dms'\nimport {\n  DMS,\n  dmsSign,\n  dmsSetSign,\n} from 'geospatialdraw/bin/coordinates/dms-formatting'\nimport NumberInput from '../number'\n\ntype DMSComponentProps = {\n  value: DMS\n  onChange: (value: DMS) => void\n  isValid: boolean\n}\n\ntype DMSValueProps = DMSComponentProps & {\n  maxDegrees: number\n  negativeHeadingTooltip: string\n  positiveHeadingTooltip: string\n  negativeHeadingName: string\n  positiveHeadingName: string\n}\n\nconst SECONDS_PRECISION = 1\n\nconst DMSValue: React.SFC<DMSValueProps> = ({\n  value,\n  onChange,\n  isValid,\n  maxDegrees,\n  negativeHeadingTooltip,\n  positiveHeadingTooltip,\n  negativeHeadingName,\n  positiveHeadingName,\n}) => {\n  const display = dmsSetSign(value, 1)\n  const sign = dmsSign(value)\n  return (\n    <SpacedLinearContainer direction=\"row\" spacing={1}>\n      <NumberInput\n        maxValue={maxDegrees}\n        minValue={0}\n        value={display.degree}\n        decimalPlaces={0}\n        label=\"DD\"\n        error={!isValid}\n        helperText={isValid ? '' : 'invalid value'}\n        onChange={(n: number) => {\n          const degree = n * sign\n          const minute = n < maxDegrees ? value.minute : 0\n          const second = n < maxDegrees ? value.second : 0\n          onChange({\n            degree,\n            minute,\n            second,\n          })\n        }}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">&deg;</InputAdornment>,\n        }}\n        inputProps={{\n          style: { textAlign: 'end' },\n        }}\n        style={{\n          width: '3em',\n        }}\n      />\n      <NumberInput\n        maxValue={display.degree >= maxDegrees ? 0 : 59}\n        minValue={0}\n        decimalPlaces={0}\n        value={display.minute}\n        label=\"MM\"\n        error={!isValid}\n        helperText={isValid ? '' : 'invalid value'}\n        onChange={(n: number) =>\n          onChange({\n            ...value,\n            minute: n,\n          })\n        }\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">&apos;</InputAdornment>,\n        }}\n        inputProps={{\n          style: { textAlign: 'end' },\n        }}\n        style={{\n          width: '3em',\n        }}\n      />\n      <NumberInput\n        maxValue={display.degree >= maxDegrees ? 0 : 59}\n        minValue={0}\n        decimalPlaces={SECONDS_PRECISION}\n        value={display.second}\n        label=\"SS\"\n        error={!isValid}\n        helperText={isValid ? '' : 'invalid value'}\n        onChange={(n: number) =>\n          onChange({\n            ...value,\n            second: n,\n          })\n        }\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">&quot;</InputAdornment>,\n        }}\n        inputProps={{\n          style: { textAlign: 'end' },\n        }}\n        style={{\n          width: '5em',\n        }}\n      />\n      <ToggleButtonGroup\n        exclusive\n        size=\"small\"\n        value={sign}\n        onChange={(_e, sign) => {\n          onChange(dmsSetSign(value, sign))\n        }}\n      >\n        <ToggleButton title={positiveHeadingTooltip} value={1}>\n          {positiveHeadingName}\n        </ToggleButton>\n        <ToggleButton title={negativeHeadingTooltip} value={-1}>\n          {negativeHeadingName}\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </SpacedLinearContainer>\n  )\n}\n\nconst DMSLatitude: React.SFC<DMSComponentProps> = props => (\n  <DMSValue\n    maxDegrees={90}\n    negativeHeadingName=\"S\"\n    negativeHeadingTooltip=\"Southern Hemisphere\"\n    positiveHeadingName=\"N\"\n    positiveHeadingTooltip=\"Northern Hemisphere\"\n    {...props}\n  />\n)\n\nconst DMSLongitude: React.SFC<DMSComponentProps> = props => (\n  <DMSValue\n    maxDegrees={180}\n    negativeHeadingName=\"W\"\n    negativeHeadingTooltip=\"Western Hemisphere\"\n    positiveHeadingName=\"E\"\n    positiveHeadingTooltip=\"Eastern Hemisphere\"\n    {...props}\n  />\n)\n\nconst PointDMS: React.SFC<Props> = ({ value, onChange }) => {\n  const [\n    coordinates,\n    { lat: dmsLat, lon: dmsLon },\n    setDMS,\n    isValid,\n  ] = useDMSCoordinates(value)\n  React.useEffect(\n    () => {\n      if (value.lat !== coordinates.lat || value.lon !== coordinates.lon) {\n        onChange(coordinates)\n      }\n    },\n    [coordinates.lat, coordinates.lon]\n  )\n  return (\n    <SpacedLinearContainer direction=\"column\" spacing={1}>\n      <FormControl>\n        <FormLabel>Latitude</FormLabel>\n        <DMSLatitude\n          isValid={isValid}\n          value={dmsLat}\n          onChange={dms => {\n            setDMS({ lat: dms, lon: dmsLon })\n          }}\n        />\n      </FormControl>\n      <FormControl>\n        <FormLabel>Longitude</FormLabel>\n        <DMSLongitude\n          isValid={isValid}\n          value={dmsLon}\n          onChange={dms => {\n            setDMS({ lat: dmsLat, lon: dms })\n          }}\n        />\n      </FormControl>\n    </SpacedLinearContainer>\n  )\n}\n\nexport default PointDMS\ntry {\n    // @ts-ignore\n    pointdms.displayName = \"pointdms\";\n    // @ts-ignore\n    pointdms.__docgenInfo = { \"description\": \"\", \"displayName\": \"pointdms\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/point/point-dms.tsx#pointdms\"] = { docgenInfo: pointdms.__docgenInfo, name: \"pointdms\", path: \"src/main/webapp/location/point/point-dms.tsx#pointdms\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Props from './props'\nimport NumberInput from '../number'\nimport SpacedLinearContainer from '../../spaced-linear-container'\n\nconst DECIMAL_DEGREES_PRECISION = 6\n\ntype NumberProps = {\n  value: number\n  onChange: (value: number) => void\n}\n\nconst LatitudeInput: React.SFC<NumberProps> = props => (\n  <NumberInput\n    maxValue={90}\n    minValue={-90}\n    decimalPlaces={DECIMAL_DEGREES_PRECISION}\n    label=\"Latitude\"\n    {...props}\n    InputProps={{\n      endAdornment: <InputAdornment position=\"end\">&deg;</InputAdornment>,\n    }}\n    inputProps={{\n      style: { textAlign: 'end' },\n    }}\n    style={{\n      width: '7em',\n    }}\n  />\n)\nconst LongitudeInput: React.SFC<NumberProps> = props => (\n  <NumberInput\n    maxValue={180}\n    minValue={-180}\n    decimalPlaces={DECIMAL_DEGREES_PRECISION}\n    label=\"Longitude\"\n    {...props}\n    InputProps={{\n      endAdornment: <InputAdornment position=\"end\">&deg;</InputAdornment>,\n    }}\n    inputProps={{\n      style: { textAlign: 'end' },\n    }}\n    style={{\n      width: '7em',\n    }}\n  />\n)\n\nconst PointLatLon: React.SFC<Props> = ({ value: { lat, lon }, onChange }) => (\n  <SpacedLinearContainer direction=\"row\" spacing={1}>\n    <LatitudeInput\n      value={lat}\n      onChange={value => onChange({ lat: value, lon })}\n    />\n    <LongitudeInput\n      value={lon}\n      onChange={value => onChange({ lon: value, lat })}\n    />\n  </SpacedLinearContainer>\n)\n\nexport default PointLatLon\ntry {\n    // @ts-ignore\n    pointlatlon.displayName = \"pointlatlon\";\n    // @ts-ignore\n    pointlatlon.__docgenInfo = { \"description\": \"\", \"displayName\": \"pointlatlon\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/point/point-lat-lon.tsx#pointlatlon\"] = { docgenInfo: pointlatlon.__docgenInfo, name: \"pointlatlon\", path: \"src/main/webapp/location/point/point-lat-lon.tsx#pointlatlon\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Props from './props'\nimport useUSNGCoordinates from 'geospatialdraw/bin/coordinates/react-hooks/usng'\n\ntype ChangeEvent = React.ChangeEvent<HTMLInputElement>\n\nconst PointUSNG: React.SFC<Props> = ({ value, onChange }) => {\n  const [\n    coordinates,\n    usng,\n    setUSNG,\n    isValid,\n    formattedUSNG,\n  ] = useUSNGCoordinates(value)\n  React.useEffect(\n    () => {\n      if (value.lat !== coordinates.lat || value.lon !== coordinates.lon) {\n        onChange(coordinates)\n      }\n    },\n    [coordinates.lat, coordinates.lon]\n  )\n  return (\n    <TextField\n      label=\"USNG/MGRS\"\n      error={!isValid}\n      helperText={isValid ? '' : 'invalid USNG value'}\n      value={usng}\n      onChange={(e: ChangeEvent) => {\n        setUSNG(e.target.value)\n      }}\n      onBlur={() => setUSNG(formattedUSNG)}\n      inputProps={{\n        style: { textAlign: 'end' },\n      }}\n      style={{\n        width: '12em',\n      }}\n    />\n  )\n}\n\nexport default PointUSNG\ntry {\n    // @ts-ignore\n    pointusng.displayName = \"pointusng\";\n    // @ts-ignore\n    pointusng.__docgenInfo = { \"description\": \"\", \"displayName\": \"pointusng\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/point/point-usng.tsx#pointusng\"] = { docgenInfo: pointusng.__docgenInfo, name: \"pointusng\", path: \"src/main/webapp/location/point/point-usng.tsx#pointusng\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport SpacedLinearContainer from '../../spaced-linear-container'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport Props from './props'\nimport {\n  useUTMCoordinates,\n  UTM_BOUNDS,\n} from 'geospatialdraw/bin/coordinates/react-hooks/utm'\nimport NumberInput from '../number'\n\nconst {\n  MAX_EASTING,\n  MIN_EASTING,\n  MAX_NORTHING,\n  MIN_NORTHING,\n  MAX_ZONE,\n} = UTM_BOUNDS\n\ntype SelectEvent = React.ChangeEvent<HTMLSelectElement>\n\nconst PointUTM: React.SFC<Props> = ({ value, onChange }) => {\n  const [coordinates, utm, setUTM, isValid] = useUTMCoordinates(value)\n  const { northing, easting, zone, hemisphere } = utm\n  React.useEffect(\n    () => {\n      if (value.lat !== coordinates.lat || value.lon !== coordinates.lon) {\n        onChange(coordinates)\n      }\n    },\n    [coordinates.lat, coordinates.lon]\n  )\n  return (\n    <SpacedLinearContainer direction=\"column\" spacing={1}>\n      <NumberInput\n        label=\"Easting\"\n        error={!isValid}\n        helperText={isValid ? '' : 'invalid UTM value'}\n        value={easting}\n        maxValue={MAX_EASTING}\n        minValue={MIN_EASTING}\n        decimalPlaces={0}\n        onChange={(value: number) => {\n          setUTM({\n            ...utm,\n            easting: value,\n          })\n        }}\n        style={{\n          width: '7em',\n        }}\n      />\n      <NumberInput\n        label=\"Northing\"\n        error={!isValid}\n        helperText={isValid ? '' : 'invalid UTM value'}\n        value={northing}\n        maxValue={MAX_NORTHING}\n        minValue={MIN_NORTHING}\n        decimalPlaces={0}\n        onChange={(value: number) => {\n          setUTM({\n            ...utm,\n            northing: value,\n          })\n        }}\n        style={{\n          width: '7em',\n        }}\n      />\n      <FormControl>\n        <InputLabel>Zone</InputLabel>\n        <Select\n          value={zone}\n          onChange={(e: SelectEvent) => {\n            setUTM({\n              ...utm,\n              zone: parseInt(e.target.value),\n            })\n          }}\n          renderValue={(selected: React.ReactNode) => selected}\n          style={{ minWidth: 50 }}\n        >\n          {Array(MAX_ZONE + 1)\n            .fill(0)\n            .map((_: number, zoneOption: number) => (\n              <MenuItem key={zoneOption} value={zoneOption}>\n                <Checkbox checked={zoneOption === zone} />\n                <ListItemText primary={zoneOption} />\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n      <ToggleButtonGroup\n        exclusive\n        size=\"small\"\n        value={hemisphere}\n        onChange={(_e, selection) => {\n          setUTM({\n            ...utm,\n            hemisphere: selection,\n          })\n        }}\n      >\n        <ToggleButton title=\"Northern Hemisphere\" value=\"N\">\n          N\n        </ToggleButton>\n        <ToggleButton title=\"Southern Hemisphere\" value=\"S\">\n          S\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </SpacedLinearContainer>\n  )\n}\n\nexport default PointUTM\ntry {\n    // @ts-ignore\n    pointutm.displayName = \"pointutm\";\n    // @ts-ignore\n    pointutm.__docgenInfo = { \"description\": \"\", \"displayName\": \"pointutm\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/point/point-utm.tsx#pointutm\"] = { docgenInfo: pointutm.__docgenInfo, name: \"pointutm\", path: \"src/main/webapp/location/point/point-utm.tsx#pointutm\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport {\n  geoToPolygonProps,\n  polygonPropsToGeo,\n} from 'geospatialdraw/bin/coordinates/geometry/polygon-line'\nimport CoordinateList from './coordinate-list'\nimport Props from './geo-editor'\n\nconst Polygon: React.SFC<Props> = ({ value, onChange, coordinateUnit }) => {\n  const { id, properties, coordinates, buffer, bufferUnit } = geoToPolygonProps(\n    value\n  )\n  return (\n    <CoordinateList\n      coordinateList={coordinates}\n      coordinateUnit={coordinateUnit}\n      buffer={buffer}\n      bufferUnit={bufferUnit}\n      onChange={(coordinateListValue, bufferValue, bufferUnitValue) =>\n        onChange(\n          polygonPropsToGeo({\n            id,\n            coordinates: coordinateListValue,\n            buffer: bufferValue,\n            bufferUnit: bufferUnitValue,\n            properties,\n          })\n        )\n      }\n    />\n  )\n}\n\nexport default Polygon\ntry {\n    // @ts-ignore\n    polygon.displayName = \"polygon\";\n    // @ts-ignore\n    polygon.__docgenInfo = { \"description\": \"\", \"displayName\": \"polygon\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/polygon.tsx#polygon\"] = { docgenInfo: polygon.__docgenInfo, name: \"polygon\", path: \"src/main/webapp/location/polygon.tsx#polygon\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport {\n  LengthUnit,\n  METERS,\n  KILOMETERS,\n  FEET,\n  YARDS,\n  MILES,\n  NAUTICAL_MILES,\n} from 'geospatialdraw/bin/geometry/units'\n\ntype SelectEvent = React.ChangeEvent<HTMLSelectElement>\n\ntype Props = {\n  value: LengthUnit\n  onChange: (value: LengthUnit) => void\n}\n\nconst units = [METERS, KILOMETERS, FEET, YARDS, MILES, NAUTICAL_MILES]\n\nconst Units: React.SFC<Props> = ({ value, onChange }) => (\n  <FormControl>\n    <InputLabel>Units</InputLabel>\n    <Select\n      value={value}\n      onChange={(e: SelectEvent) => {\n        onChange(e.target.value as LengthUnit)\n      }}\n      renderValue={(selected: React.ReactNode) => selected}\n      style={{ minWidth: 100 }}\n    >\n      {units.map(unit => (\n        <MenuItem key={unit} value={unit}>\n          <Checkbox checked={unit === value} />\n          <ListItemText primary={unit} />\n        </MenuItem>\n      ))}\n    </Select>\n  </FormControl>\n)\n\nexport default Units\ntry {\n    // @ts-ignore\n    units.displayName = \"units\";\n    // @ts-ignore\n    units.__docgenInfo = { \"description\": \"\", \"displayName\": \"units\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/units.tsx#units\"] = { docgenInfo: units.__docgenInfo, name: \"units\", path: \"src/main/webapp/location/units.tsx#units\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport {\n  CoordinateUnit,\n  LAT_LON,\n  LAT_LON_DMS,\n  USNG,\n  UTM,\n} from 'geospatialdraw/bin/coordinates/units'\nimport EditorProps, { BasicEditorProps } from './geo-editor'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport SpacedLinearContainer from '../spaced-linear-container'\n\ntype OutputComponent = React.SFC<BasicEditorProps>\ntype EditorComponent = React.ComponentType<EditorProps>\n\nconst tabMap: CoordinateUnit[] = [LAT_LON, LAT_LON_DMS, USNG, UTM]\n\nconst defaultTab = 0\n\nconst withCoordinateUnitTabs = (Editor: EditorComponent): OutputComponent => ({\n  value,\n  onChange,\n}) => {\n  const [tab, setTab] = React.useState(defaultTab)\n  return (\n    <SpacedLinearContainer direction=\"column\" spacing={1}>\n      <Tabs\n        value={tab}\n        onChange={(_, index) => setTab(index)}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"Lat / Lon (DD)\" />\n        <Tab label=\"Lat / Lon (DMS)\" />\n        <Tab label=\"USNG / MGRS\" />\n        <Tab label=\"UTM / UPS\" />\n      </Tabs>\n      <Editor value={value} onChange={onChange} coordinateUnit={tabMap[tab]} />\n    </SpacedLinearContainer>\n  )\n}\n\nexport default withCoordinateUnitTabs\ntry {\n    // @ts-ignore\n    withcoordinateunittabs.displayName = \"withcoordinateunittabs\";\n    // @ts-ignore\n    withcoordinateunittabs.__docgenInfo = { \"description\": \"\", \"displayName\": \"withcoordinateunittabs\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/location/with-coordinate-unit-tabs.tsx#withcoordinateunittabs\"] = { docgenInfo: withcoordinateunittabs.__docgenInfo, name: \"withcoordinateunittabs\", path: \"src/main/webapp/location/with-coordinate-unit-tabs.tsx#withcoordinateunittabs\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nconst { useDrawInterface } = require('../react-hooks')\nimport { Shape } from 'geospatialdraw/bin/shapes/shape'\nimport useGeometryJSONMemo from 'geospatialdraw/bin/geometry/memo'\nimport { GeometryJSON } from 'geospatialdraw/bin/geometry/geometry'\nimport { BasicEditorProps } from './geo-editor'\nimport SpacedLinearContainer from '../spaced-linear-container'\nimport Button from '@material-ui/core/Button'\n\ntype OutputComponent = React.SFC<BasicEditorProps>\ntype EditorComponent = React.ComponentType<BasicEditorProps>\ntype DrawButtonProps = {\n  onDraw: () => void\n  active: boolean\n}\n\nconst DrawButton: React.SFC<DrawButtonProps> = ({ onDraw, active }) => (\n  <Button\n    fullWidth\n    variant=\"contained\"\n    color=\"primary\"\n    onClick={onDraw}\n    title=\"Draw Geometry On Map\"\n    disabled={active}\n  >\n    Draw\n  </Button>\n)\n\nconst withDrawButton = (\n  Editor: EditorComponent,\n  shape: Shape\n): OutputComponent => ({ value, onChange }) => {\n  const [drawState, setDrawState] = useDrawInterface()\n  const onDraw = () => {\n    setDrawState({\n      geo: value,\n      active: true,\n      shape,\n    })\n  }\n  const memo = useGeometryJSONMemo(drawState.geo)\n  React.useEffect(\n    () => {\n      const geo =\n        drawState.geo === null\n          ? null\n          : {\n              ...drawState.geo,\n              properties: {\n                ...drawState.geo.properties,\n                id: drawState.geo.properties.id || value.properties.id,\n              },\n            }\n      if (geo && geo.properties.id === value.properties.id) {\n        onChange(geo)\n      }\n    },\n    [memo]\n  )\n  const editorOnChange = (geo: GeometryJSON) => {\n    setDrawState({\n      geo,\n      active: true,\n      shape,\n    })\n    onChange(geo)\n  }\n  return (\n    <SpacedLinearContainer direction=\"column\" spacing={1}>\n      <Editor value={value} onChange={editorOnChange} />\n      <DrawButton onDraw={onDraw} active={drawState.active} />\n    </SpacedLinearContainer>\n  )\n}\n\nexport default withDrawButton\n","import React from 'react'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks'\nimport Cookies from 'universal-cookie'\nimport LogIn from './login'\nimport { useApolloFallback } from '../react-hooks'\n\nconst cookies = new Cookies()\nconst useLogin = () => {\n  const LOGIN_MUTATION = gql`\n    mutation LogIn($username: String!, $password: String!) {\n      logIn(username: $username, password: $password)\n    }\n  `\n  return useMutation(LOGIN_MUTATION)\n}\n\nconst Container = props => {\n  const [login] = useLogin()\n  const executeLogin = async (username, password) => {\n    try {\n      cookies.remove('RSESSION', { path: '/' })\n      const { data } = await login({ variables: { username, password } })\n      cookies.set('RSESSION', data.logIn, { path: '/' })\n      return true\n    } catch (error) {\n      return false\n    }\n  }\n  return (\n    <LogIn\n      label={props.label}\n      login={executeLogin}\n      handleClose={props.handleClose}\n    />\n  )\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, LogIn)\n  return <Component {...props} />\n}\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const LogIn = props => {\n  const [values, setValues] = React.useState({\n    username: '',\n    password: '',\n    showPassword: false,\n    buttonDisabled: false,\n  })\n  const [errors, hasErrors] = React.useState(false)\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  const changePasswordVisibility = () => {\n    let flip = !values['showPassword']\n    setValues({ ...values, showPassword: flip })\n  }\n  const checkCredentials = async () => {\n    setValues({ ...values, buttonDisabled: true })\n    const success = await props.login(values.username, values.password)\n    if (success) {\n      props.handleClose()\n    } else {\n      hasErrors(true)\n      setValues({ ...values, buttonDisabled: false })\n    }\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        maxHeight: '100%',\n        padding: 20,\n        boxSizing: 'border-box',\n        ...props.style,\n      }}\n    >\n      <FormLabel style={{ padding: 10 }}>{props.label}</FormLabel>\n      <TextField\n        autoFocus\n        required\n        fullWidth\n        variant=\"outlined\"\n        label=\"Username\"\n        style={{ marginBottom: 20 }}\n        onChange={handleChange('username')}\n        error={errors}\n        helperText={errors ? 'Invalid Credentials' : undefined}\n        onKeyDown={e => {\n          if (e.key === 'Enter') {\n            checkCredentials()\n          }\n        }}\n      />\n      <TextField\n        required\n        fullWidth\n        variant=\"outlined\"\n        label=\"Password\"\n        type={values.showPassword ? 'text' : 'password'}\n        style={{ marginBottom: 20 }}\n        error={errors}\n        helperText={errors ? 'Invalid Credentials' : undefined}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle-password-visibility\"\n                onClick={changePasswordVisibility}\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n        onKeyDown={e => {\n          if (e.key === 'Enter') {\n            checkCredentials()\n          }\n        }}\n        onChange={handleChange('password')}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={values.buttonDisabled ? true : false}\n        onClick={() => {\n          checkCredentials()\n        }}\n      >\n        Log In\n      </Button>\n    </div>\n  )\n}\n\nexport default LogIn\n","import React from 'react'\nimport { storiesOf } from '../@storybook/react'\nconst stories = storiesOf('LogIn', module)\nimport { LogIn } from './login'\nimport { LogInModal } from './loginModal'\n\nstories.add('Login Form', () => {\n  return <LogIn label=\"Login\" logIn={() => {}} />\n})\n\nstories.add('Login modal', () => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <div>\n      <button\n        onClick={() => {\n          setOpen(true)\n        }}\n      >\n        Open Modal\n      </button>\n      <LogInModal\n        label=\"Log In\"\n        open={open}\n        handleClose={() => setOpen(false)}\n      />\n    </div>\n  )\n})\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport Container from './container'\n\nexport const LogInModal = props => {\n  const { handleClose, open, label } = props\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Container handleClose={handleClose} label={label} />\n    </Dialog>\n  )\n}\n\nexport default LogInModal\n","import React, { useState, useEffect, memo } from 'react'\nimport * as turf from '@turf/turf'\nimport WorldMap from './world-map'\n\nimport Vector from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport Cluster from 'ol/source/Cluster'\nimport GeoJSON from 'ol/format/GeoJSON'\nimport { POINT } from 'geospatialdraw/bin/shapes/shape'\nimport { makeBufferedGeo } from 'geospatialdraw/bin/geometry/utilities'\n\nconst ClusterMap = ({\n  distance,\n  style,\n  geos = [],\n  selectGeos,\n  onMapLoaded = () => {},\n  ...rest\n}) => {\n  const [map, setMap] = useState(null)\n  const [sourceVector, setSourceVector] = useState(null)\n  const geoFormat = new GeoJSON()\n  const nonPointGeos = geos.filter(g => g.properties.shape !== POINT)\n  useEffect(\n    () => {\n      if (map && !sourceVector) {\n        const source = new VectorSource({\n          features: [],\n        })\n        const clusterSource = new Cluster({\n          distance,\n          source,\n        })\n        const vectorLayer = new Vector({\n          source: clusterSource,\n          zIndex: 1,\n          style,\n        })\n        const featureHover = e => {\n          clusterSource.forEachFeature(f => {\n            f.set('hover', false)\n          })\n          map.getFeaturesAtPixel(e.pixel).forEach(f => {\n            f.set('hover', true)\n          })\n        }\n        const featureClick = e => {\n          const selectedGeoList = map\n            .getFeaturesAtPixel(e.pixel)\n            .reduce((ids, f) => {\n              const featuresList = f.get('features') || []\n              featuresList.forEach(f => {\n                ids.push(f.getId())\n              })\n              return ids\n            }, [])\n          selectGeos(selectedGeoList)\n        }\n        map.addLayer(vectorLayer)\n        map.on('pointermove', featureHover)\n        map.on('click', featureClick)\n        clusterSource.on('addfeature', e => {\n          const clusterFeature = e.feature\n          const featureList = clusterFeature.get('features') || []\n          featureList.forEach(f => {\n            const props = {\n              ...f.getProperties(),\n              geometry: clusterFeature.get('geometry'),\n              selected: false,\n              hover: false,\n            }\n            clusterFeature.setProperties(props)\n          })\n          clusterFeature.set(\n            'selected',\n            featureList.every(f => f.get('selected'))\n          )\n        })\n        setSourceVector(source)\n        onMapLoaded(map)\n      }\n    },\n    [map, sourceVector, style, distance, onMapLoaded, selectGeos]\n  )\n  useEffect(\n    () => {\n      if (sourceVector) {\n        sourceVector.clear()\n        geos.forEach(json => {\n          const buffered = makeBufferedGeo(json)\n          const point = turf.center(buffered)\n          const feature = geoFormat.readFeature(point)\n          const props = {\n            ...json.properties,\n            geometry: feature.get('geometry'),\n          }\n          feature.setProperties(props)\n          feature.setId(json.properties.id)\n          sourceVector.addFeature(feature)\n        })\n      }\n    },\n    [sourceVector, geos, geoFormat]\n  )\n  return (\n    <WorldMap\n      geos={nonPointGeos}\n      style={style}\n      onMapLoaded={setMap}\n      {...rest}\n    />\n  )\n}\n\nexport default memo(ClusterMap)\n","import { storiesOf } from '@connexta/ace/@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\nimport { select } from '@connexta/ace/@storybook/addon-knobs'\nimport React, { useState } from 'react'\nimport ClusterMap from './cluster-map'\nimport { LAT_LON } from 'geospatialdraw/bin/coordinates/units'\nimport { RENDERER_STYLE as MAP_STYLE } from './map-style'\n\nconst PROJECTION = 'EPSG:4326'\n\nconst stories = storiesOf('Maps', module)\n\nstories.add('render clusters', () => {\n  const sampleGeos = [\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-77.03166463661832, 38.9167765913355],\n            [-77.03168800168329, 38.9090666585569],\n            [-77.030493814687, 38.90950931436277],\n            [-77.03030871898152, 38.910253467956416],\n            [-77.02967391776659, 38.9104169227114],\n            [-77.0288089355326, 38.91021657997259],\n            [-77.02017717999789, 38.91320633500907],\n            [-77.01994660099065, 38.91522213276954],\n            [-77.02364702460534, 38.916798547897656],\n            [-77.03166463661832, 38.9167765913355],\n          ],\n        ],\n      },\n      properties: {\n        id: '',\n        color: '',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n        shape: 'Polygon',\n      },\n      bbox: [\n        -77.03168800168329,\n        38.9090666585569,\n        -77.01994660099065,\n        38.916798547897656,\n      ],\n    },\n    {\n      bbox: [\n        -77.03932913437343,\n        38.89222719426494,\n        -77.03379505212845,\n        38.899925489110444,\n      ],\n      type: 'Feature',\n      properties: {\n        id: '',\n        color: '',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n        shape: 'Bounding Box',\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-77.03932913437343, 38.89222719426494],\n            [-77.03379505212845, 38.89222719426494],\n            [-77.03379505212845, 38.899925489110444],\n            [-77.03932913437343, 38.899925489110444],\n            [-77.03932913437343, 38.89222719426494],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.0686780957587, 38.87795245851115],\n      },\n      properties: {\n        id: '',\n        color: '',\n        buffer: {\n          width: 979.4785955831757,\n          unit: 'meters',\n        },\n        shape: 'Point Radius',\n      },\n      bbox: [\n        -77.07999321865832,\n        38.86914380804275,\n        -77.05736297285908,\n        38.88676110897956,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-77.10331323286177, 38.91811619710299],\n          [-77.09362950836727, 38.90675171227956],\n          [-77.08294156934186, 38.90369028952271],\n          [-77.07097688871643, 38.902706222907405],\n          [-77.06484449945322, 38.90141039380838],\n          [-77.05821689563251, 38.8995928397366],\n          [-77.05577157492684, 38.89161426515309],\n          [-77.05309084173344, 38.885833934204825],\n          [-77.0457845712815, 38.88087012404728],\n          [-77.03687495091326, 38.87431144730632],\n          [-77.02813181595299, 38.85859607312668],\n        ],\n      },\n      properties: {\n        id: '',\n        color: '',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n        shape: 'Line',\n      },\n      bbox: [\n        -77.10331323286177,\n        38.85859607312668,\n        -77.02813181595299,\n        38.91811619710299,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.028019, 38.898326],\n      },\n      properties: {\n        id: '',\n        color: '',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n        shape: 'Point',\n      },\n      bbox: [-77.028019, 38.898326, -77.028019, 38.898326],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.021717, 38.898818],\n      },\n      properties: {\n        id: '',\n        color: '',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n        shape: 'Point',\n      },\n      bbox: [-77.021717, 38.898818, -77.021717, 38.898818],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.032099, 38.90135],\n      },\n      properties: {\n        id: '',\n        color: '',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n        shape: 'Point',\n      },\n      bbox: [-77.032099, 38.90135, -77.032099, 38.90135],\n    },\n  ].map((g, i) => ({\n    ...g,\n    properties: {\n      ...g.properties,\n      id: `example${i + 1}`,\n    },\n  }))\n  const shapeIndex = select(\n    'Pan To',\n    ['none', ...sampleGeos.map((_x, i) => (i + 1).toString())],\n    'none'\n  )\n  const viewport = shapeIndex === 'none' ? null : geos[shapeIndex - 1].bbox\n  const [geos, setGeos] = useState(sampleGeos)\n  return (\n    <ClusterMap\n      projection={PROJECTION}\n      style={MAP_STYLE}\n      geos={geos}\n      viewport={viewport}\n      coordinateType={LAT_LON}\n      selectGeos={ids => {\n        setGeos(\n          geos.map(g => ({\n            ...g,\n            properties: {\n              ...g.properties,\n              selected: ids.includes(g.properties.id),\n            },\n          }))\n        )\n        action('Select Geos')(ids)\n      }}\n      maxZoom={20}\n      minZoom={1.5}\n      zoom={2}\n      distance={50}\n      height=\"500px\"\n    />\n  )\n})\n","import * as React from 'react'\nimport { Box, Button } from '@material-ui/core'\nimport { ToggleButton } from '@material-ui/lab'\nimport {\n  BboxIcon,\n  CircleIcon,\n  LineIcon,\n  PolygonIcon,\n  PointIcon,\n  EditCoordinatesIcon,\n} from './icons'\nimport {\n  Shape,\n  LINE,\n  POLYGON,\n  POINT,\n  POINT_RADIUS,\n  BOUNDING_BOX,\n} from 'geospatialdraw/bin/shapes/shape'\nimport { GeometryJSON } from 'geospatialdraw/bin/geometry/geometry'\nimport DrawingToolbox from 'geospatialdraw/bin/drawing/drawing-toolbox'\nimport useDrawingMenu from 'geospatialdraw/bin/menu/react-hooks'\n\ntype Props = React.HTMLProps<HTMLDivElement> & {\n  toolbox: DrawingToolbox\n  shape: Shape | null\n  isActive: boolean\n  showCoordinateEditor?: boolean\n  saveAndContinue?: boolean\n  title?: string\n  geometry: GeometryJSON | null\n  toggleCoordinateEditor?: () => void\n  onCancel: () => void\n  onOk: () => void\n  onSetShape: (shape: Shape) => void\n  onUpdate: (geo: GeometryJSON) => void\n  disabledShapes?: Shape[]\n  defaultGeoProperties?: object\n  iconColor?: string\n}\n\nconst invisibleContainer = {\n  display: 'none',\n}\nconst backgroundContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  height: '100%',\n  width: '100%',\n  paddingBottom: 1,\n}\nconst TitleContainer: React.SFC = props => (\n  <Box\n    display=\"flex\"\n    flexDirection=\"grow\"\n    flexGrow={1}\n    flexShrink={1}\n    height=\"100%\"\n    {...props}\n  />\n)\nconst ControlsGroup: React.SFC = props => (\n  <Box\n    height=\"100%\"\n    padding={0}\n    margin={0}\n    display=\"flex\"\n    flexDirection=\"row\"\n    alignItems=\"right\"\n    flex=\"0 0 auto\"\n    {...props}\n  />\n)\nconst shapeContainer = {\n  height: '100%',\n  display: 'flex',\n}\nconst toolsContainer = {\n  height: '100%',\n  display: 'flex',\n}\nconst Title: React.SFC = props => (\n  <Box\n    fontWeight=\"bold\"\n    alignSelf=\"center\"\n    whiteSpace=\"nowrap\"\n    overflow=\"hidden\"\n    textOverflow=\"ellipsis\"\n    flex=\"0 1 auto\"\n    {...props}\n  />\n)\nconst TitleLabel: React.SFC = props => (\n  <Box\n    paddingLeft={1}\n    paddingRight={0.5}\n    alignSelf=\"center\"\n    flex=\"0 0 auto\"\n    {...props}\n  />\n)\n\nconst DrawingMenu: React.SFC<Props> = ({\n  toolbox,\n  shape,\n  isActive,\n  geometry,\n  onCancel,\n  onOk,\n  onSetShape,\n  onUpdate,\n  title,\n  saveAndContinue,\n  showCoordinateEditor,\n  toggleCoordinateEditor,\n  disabledShapes,\n  defaultGeoProperties,\n  iconColor = '#FFFFFF',\n  ...rest\n}) => {\n  useDrawingMenu({\n    toolbox,\n    shape,\n    isActive,\n    geometry,\n    onUpdate,\n    showCoordinateEditor,\n    defaultGeoProperties,\n  })\n  const renderShapeButton = (renderedShape: Shape, icon: any) => {\n    return disabledShapes && disabledShapes.includes(renderedShape) ? null : (\n      <ToggleButton\n        radioGroup=\"shape\"\n        selected={shape === renderedShape}\n        onClick={() => onSetShape(renderedShape)}\n        value={renderedShape}\n        title={`Draw ${renderedShape}`}\n      >\n        {icon}\n      </ToggleButton>\n    )\n  }\n  const backgroundStyle = isActive ? backgroundContainer : invisibleContainer\n  const acceptEditButton = saveAndContinue ? 'Next' : 'Apply'\n  const acceptEditAlt = saveAndContinue\n    ? 'Save And Continue Drawing'\n    : 'Accept Edit'\n  return (\n    <Box style={backgroundStyle} {...rest}>\n      <TitleContainer>\n        {title === undefined ? null : (\n          <React.Fragment>\n            <TitleLabel>Editing Shape:</TitleLabel>\n            <Title>{title}</Title>\n          </React.Fragment>\n        )}\n      </TitleContainer>\n      <ControlsGroup>\n        <Box style={shapeContainer}>\n          {renderShapeButton(LINE, <LineIcon color={iconColor} />)}\n          {renderShapeButton(POLYGON, <PolygonIcon color={iconColor} />)}\n          {renderShapeButton(BOUNDING_BOX, <BboxIcon color={iconColor} />)}\n          {renderShapeButton(POINT_RADIUS, <CircleIcon color={iconColor} />)}\n          {renderShapeButton(POINT, <PointIcon color={iconColor} />)}\n        </Box>\n        {showCoordinateEditor === undefined ||\n        toggleCoordinateEditor === undefined ? null : (\n          <Box style={toolsContainer}>\n            <ToggleButton\n              selected={showCoordinateEditor}\n              onClick={toggleCoordinateEditor}\n              title=\"Edit Coordinates\"\n            >\n              <EditCoordinatesIcon color={iconColor} />\n            </ToggleButton>\n          </Box>\n        )}\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={onCancel}\n          title=\"Cancel Edit\"\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={onOk}\n          title={acceptEditAlt}\n        >\n          {acceptEditButton}\n        </Button>\n      </ControlsGroup>\n    </Box>\n  )\n}\n\nexport default DrawingMenu\ntry {\n    // @ts-ignore\n    drawmenu.displayName = \"drawmenu\";\n    // @ts-ignore\n    drawmenu.__docgenInfo = { \"description\": \"\", \"displayName\": \"drawmenu\", \"props\": { \"aria-activedescendant\": { \"defaultValue\": null, \"description\": \"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.\", \"name\": \"aria-activedescendant\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-atomic\": { \"defaultValue\": null, \"description\": \"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.\", \"name\": \"aria-atomic\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-autocomplete\": { \"defaultValue\": null, \"description\": \"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\\npresented if they are made.\", \"name\": \"aria-autocomplete\", \"required\": false, \"type\": { \"name\": \"\\\"list\\\" | \\\"none\\\" | \\\"inline\\\" | \\\"both\\\"\" } }, \"aria-busy\": { \"defaultValue\": null, \"description\": \"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.\", \"name\": \"aria-busy\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-checked\": { \"defaultValue\": null, \"description\": \"Indicates the current \\\"checked\\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.\", \"name\": \"aria-checked\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\" | \\\"mixed\\\"\" } }, \"aria-colcount\": { \"defaultValue\": null, \"description\": \"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.\", \"name\": \"aria-colcount\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-colindex\": { \"defaultValue\": null, \"description\": \"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.\", \"name\": \"aria-colindex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-colspan\": { \"defaultValue\": null, \"description\": \"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.\", \"name\": \"aria-colspan\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-controls\": { \"defaultValue\": null, \"description\": \"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.\", \"name\": \"aria-controls\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-current\": { \"defaultValue\": null, \"description\": \"Indicates the element that represents the current item within a container or set of related elements.\", \"name\": \"aria-current\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"location\\\" | \\\"step\\\" | \\\"false\\\" | \\\"true\\\" | \\\"page\\\" | \\\"date\\\" | \\\"time\\\"\" } }, \"aria-describedby\": { \"defaultValue\": null, \"description\": \"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby\", \"name\": \"aria-describedby\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-details\": { \"defaultValue\": null, \"description\": \"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.\", \"name\": \"aria-details\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-disabled\": { \"defaultValue\": null, \"description\": \"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.\", \"name\": \"aria-disabled\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-dropeffect\": { \"defaultValue\": null, \"description\": \"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1\", \"name\": \"aria-dropeffect\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"copy\\\" | \\\"execute\\\" | \\\"link\\\" | \\\"move\\\" | \\\"popup\\\"\" } }, \"aria-errormessage\": { \"defaultValue\": null, \"description\": \"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.\", \"name\": \"aria-errormessage\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-expanded\": { \"defaultValue\": null, \"description\": \"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.\", \"name\": \"aria-expanded\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-flowto\": { \"defaultValue\": null, \"description\": \"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\\nallows assistive technology to override the general default of reading in document source order.\", \"name\": \"aria-flowto\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-grabbed\": { \"defaultValue\": null, \"description\": \"Indicates an element's \\\"grabbed\\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1\", \"name\": \"aria-grabbed\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-haspopup\": { \"defaultValue\": null, \"description\": \"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.\", \"name\": \"aria-haspopup\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\" | \\\"menu\\\" | \\\"listbox\\\" | \\\"tree\\\" | \\\"grid\\\" | \\\"dialog\\\"\" } }, \"aria-hidden\": { \"defaultValue\": null, \"description\": \"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.\", \"name\": \"aria-hidden\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-invalid\": { \"defaultValue\": null, \"description\": \"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.\", \"name\": \"aria-invalid\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\" | \\\"grammar\\\" | \\\"spelling\\\"\" } }, \"aria-keyshortcuts\": { \"defaultValue\": null, \"description\": \"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.\", \"name\": \"aria-keyshortcuts\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-label\": { \"defaultValue\": null, \"description\": \"Defines a string value that labels the current element.\\n@see aria-labelledby.\", \"name\": \"aria-label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-labelledby\": { \"defaultValue\": null, \"description\": \"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.\", \"name\": \"aria-labelledby\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-level\": { \"defaultValue\": null, \"description\": \"Defines the hierarchical level of an element within a structure.\", \"name\": \"aria-level\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-live\": { \"defaultValue\": null, \"description\": \"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.\", \"name\": \"aria-live\", \"required\": false, \"type\": { \"name\": \"\\\"off\\\" | \\\"assertive\\\" | \\\"polite\\\"\" } }, \"aria-modal\": { \"defaultValue\": null, \"description\": \"Indicates whether an element is modal when displayed.\", \"name\": \"aria-modal\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-multiline\": { \"defaultValue\": null, \"description\": \"Indicates whether a text box accepts multiple lines of input or only a single line.\", \"name\": \"aria-multiline\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-multiselectable\": { \"defaultValue\": null, \"description\": \"Indicates that the user may select more than one item from the current selectable descendants.\", \"name\": \"aria-multiselectable\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-orientation\": { \"defaultValue\": null, \"description\": \"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.\", \"name\": \"aria-orientation\", \"required\": false, \"type\": { \"name\": \"\\\"horizontal\\\" | \\\"vertical\\\"\" } }, \"aria-owns\": { \"defaultValue\": null, \"description\": \"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.\", \"name\": \"aria-owns\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-placeholder\": { \"defaultValue\": null, \"description\": \"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.\", \"name\": \"aria-placeholder\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-posinset\": { \"defaultValue\": null, \"description\": \"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.\", \"name\": \"aria-posinset\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-pressed\": { \"defaultValue\": null, \"description\": \"Indicates the current \\\"pressed\\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.\", \"name\": \"aria-pressed\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\" | \\\"mixed\\\"\" } }, \"aria-readonly\": { \"defaultValue\": null, \"description\": \"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.\", \"name\": \"aria-readonly\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-relevant\": { \"defaultValue\": null, \"description\": \"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.\", \"name\": \"aria-relevant\", \"required\": false, \"type\": { \"name\": \"\\\"additions\\\" | \\\"additions text\\\" | \\\"all\\\" | \\\"removals\\\" | \\\"text\\\"\" } }, \"aria-required\": { \"defaultValue\": null, \"description\": \"Indicates that user input is required on the element before a form may be submitted.\", \"name\": \"aria-required\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-roledescription\": { \"defaultValue\": null, \"description\": \"Defines a human-readable, author-localized description for the role of an element.\", \"name\": \"aria-roledescription\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"aria-rowcount\": { \"defaultValue\": null, \"description\": \"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.\", \"name\": \"aria-rowcount\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-rowindex\": { \"defaultValue\": null, \"description\": \"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.\", \"name\": \"aria-rowindex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-rowspan\": { \"defaultValue\": null, \"description\": \"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.\", \"name\": \"aria-rowspan\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-selected\": { \"defaultValue\": null, \"description\": \"Indicates the current \\\"selected\\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.\", \"name\": \"aria-selected\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"false\\\" | \\\"true\\\"\" } }, \"aria-setsize\": { \"defaultValue\": null, \"description\": \"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.\", \"name\": \"aria-setsize\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-sort\": { \"defaultValue\": null, \"description\": \"Indicates if items in a table or grid are sorted in ascending or descending order.\", \"name\": \"aria-sort\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"ascending\\\" | \\\"descending\\\" | \\\"other\\\"\" } }, \"aria-valuemax\": { \"defaultValue\": null, \"description\": \"Defines the maximum allowed value for a range widget.\", \"name\": \"aria-valuemax\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-valuemin\": { \"defaultValue\": null, \"description\": \"Defines the minimum allowed value for a range widget.\", \"name\": \"aria-valuemin\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-valuenow\": { \"defaultValue\": null, \"description\": \"Defines the current value for a range widget.\\n@see aria-valuetext.\", \"name\": \"aria-valuenow\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"aria-valuetext\": { \"defaultValue\": null, \"description\": \"Defines the human readable text alternative of aria-valuenow for a range widget.\", \"name\": \"aria-valuetext\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/maps/draw-menu.tsx#drawmenu\"] = { docgenInfo: drawmenu.__docgenInfo, name: \"drawmenu\", path: \"src/main/webapp/maps/draw-menu.tsx#drawmenu\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { useState, useEffect } from 'react'\nimport throttle from 'lodash.throttle'\n\nconst UPDATE_DELAY = 33\n\nconst useCursorPosition = () => {\n  const [cursor, setCursorPosition] = useState({ lat: 0, lon: 0 })\n  const [map, setMap] = useState(null)\n  const updateCursor = throttle(setCursorPosition, UPDATE_DELAY, {\n    trailing: false,\n  })\n  useEffect(\n    () => {\n      const pointerMove = e => {\n        const [lon, lat] = e.coordinate\n        updateCursor({ lat, lon })\n      }\n      if (map) {\n        map.on('pointermove', pointerMove)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },\n    [map]\n  )\n  return { cursor, setMap }\n}\n\nexport { useCursorPosition }\n","import * as React from 'react'\n\ntype Props = {\n  color: string\n}\n\nconst DrawIcon: React.SFC<Props> = ({ color }) => (\n  <svg width=\"30px\" height=\"30px\" x=\"0px\" y=\"0px\" viewBox=\"0 0 360 360\">\n    <polygon\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"15\"\n      strokeMiterlimit=\"10\"\n      points=\"54.7,49.5 291.7,49.5 291.7,279.1 54.7,279.1 54.7,49.5\"\n    />\n  </svg>\n)\n\nexport default DrawIcon\ntry {\n    // @ts-ignore\n    bbox.displayName = \"bbox\";\n    // @ts-ignore\n    bbox.__docgenInfo = { \"description\": \"\", \"displayName\": \"bbox\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/maps/icons/bbox.tsx#bbox\"] = { docgenInfo: bbox.__docgenInfo, name: \"bbox\", path: \"src/main/webapp/maps/icons/bbox.tsx#bbox\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\n\ntype Props = {\n  color: string\n}\n\nconst DrawIcon: React.SFC<Props> = ({ color }) => (\n  <svg width=\"30px\" height=\"30px\" x=\"0px\" y=\"0px\" viewBox=\"0 0 360 360\">\n    <circle fill={color} cx=\"181\" cy=\"186.5\" r=\"24.7\" />\n    <path\n      fill={color}\n      d=\"M178.9,66.2c-67,0-121.3,54.3-121.3,121.3s54.3,121.3,121.3,121.3s121.3-54.3,121.3-121.3\tS245.9,66.2,178.9,66.2z M178.9,295.5c-59.6,0-108-48.3-108-108s48.3-108,108-108c59.6,0,108,48.3,108,108S238.5,295.5,178.9,295.5z\"\n    />\n    <rect x=\"185.9\" y=\"180.5\" fill={color} width=\"110.7\" height=\"12\" />\n  </svg>\n)\n\nexport default DrawIcon\ntry {\n    // @ts-ignore\n    circle.displayName = \"circle\";\n    // @ts-ignore\n    circle.__docgenInfo = { \"description\": \"\", \"displayName\": \"circle\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/maps/icons/circle.tsx#circle\"] = { docgenInfo: circle.__docgenInfo, name: \"circle\", path: \"src/main/webapp/maps/icons/circle.tsx#circle\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\n\ntype Props = {\n  color: string\n}\n\nconst DrawIcon: React.SFC<Props> = ({ color }) => (\n  <svg width=\"30px\" height=\"30px\" x=\"0px\" y=\"0px\" viewBox=\"0 0 20 20\">\n    <path fill={color} d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n  </svg>\n)\n\nexport default DrawIcon\ntry {\n    // @ts-ignore\n    editcoordinates.displayName = \"editcoordinates\";\n    // @ts-ignore\n    editcoordinates.__docgenInfo = { \"description\": \"\", \"displayName\": \"editcoordinates\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/maps/icons/edit-coordinates.tsx#editcoordinates\"] = { docgenInfo: editcoordinates.__docgenInfo, name: \"editcoordinates\", path: \"src/main/webapp/maps/icons/edit-coordinates.tsx#editcoordinates\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import BboxIcon from './bbox'\nimport CircleIcon from './circle'\nimport LineIcon from './line'\nimport PolygonIcon from './polygon'\nimport PointIcon from './point'\nimport EditCoordinatesIcon from './edit-coordinates'\n\nexport {\n  BboxIcon,\n  CircleIcon,\n  LineIcon,\n  PolygonIcon,\n  PointIcon,\n  EditCoordinatesIcon,\n}\n","import * as React from 'react'\n\ntype Props = {\n  color: string\n}\n\nconst DrawIcon: React.SFC<Props> = ({ color }) => (\n  <svg width=\"30px\" height=\"30px\" x=\"0px\" y=\"0px\" viewBox=\"0 0 360 360\">\n    <rect\n      x=\"59.8\"\n      y=\"61\"\n      transform=\"rotate(-45.001 93.415 94.593)\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeMiterlimit=\"10\"\n      width=\"67.2\"\n      height=\"67.2\"\n    />\n    <rect\n      x=\"216.7\"\n      y=\"217.9\"\n      transform=\"rotate(-45.001 250.284 251.466)\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeMiterlimit=\"10\"\n      width=\"67.2\"\n      height=\"67.2\"\n    />\n    <line\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeMiterlimit=\"10\"\n      x1=\"118\"\n      y1=\"117.5\"\n      x2=\"227.4\"\n      y2=\"226.9\"\n    />\n    <path\n      fill={color}\n      d=\"M102.3,47L54.8,94.5l47.5,47.5l47.5-47.5L102.3,47z M68,94.5l34.3-34.3l34.3,34.3l-34.3,34.3L68,94.5z\"\n    />\n    <path\n      fill={color}\n      d=\"M257.7,202.4l-47.5,47.5l47.5,47.5l47.5-47.5L257.7,202.4z M223.4,249.9l34.3-34.3l34.3,34.3l-34.3,34.3\tL223.4,249.9z\"\n    />\n    <rect\n      x=\"174.5\"\n      y=\"94\"\n      transform=\"rotate(-45.001 179.504 171.691)\"\n      fill={color}\n      width=\"10\"\n      height=\"155.3\"\n    />\n  </svg>\n)\n\nexport default DrawIcon\ntry {\n    // @ts-ignore\n    line.displayName = \"line\";\n    // @ts-ignore\n    line.__docgenInfo = { \"description\": \"\", \"displayName\": \"line\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/maps/icons/line.tsx#line\"] = { docgenInfo: line.__docgenInfo, name: \"line\", path: \"src/main/webapp/maps/icons/line.tsx#line\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\n\ntype Props = {\n  color: string\n}\n\nconst DrawIcon: React.SFC<Props> = ({ color }) => (\n  <svg width=\"30px\" height=\"30px\" x=\"0px\" y=\"0px\" viewBox=\"0 0 360 360\">\n    <circle fill={color} cx=\"180\" cy=\"184\" r=\"24.7\" />\n    <path\n      fill={color}\n      d=\"M180.3,61.7C113.3,61.7,59,116,59,183s54.3,121.3,121.3,121.3S301.7,250,301.7,183S247.3,61.7,180.3,61.7z M180.3,291c-59.6,0-108-48.3-108-108s48.3-108,108-108c59.6,0,108,48.3,108,108S240,291,180.3,291z\"\n    />\n    <rect x=\"30.9\" y=\"180\" fill={color} width=\"68.5\" height=\"7.9\" />\n    <rect x=\"260.6\" y=\"180\" fill={color} width=\"68.5\" height=\"7.9\" />\n    <rect\n      x=\"145.8\"\n      y=\"290.9\"\n      transform=\"rotate(-90 180 294.817)\"\n      fill={color}\n      width=\"68.5\"\n      height=\"7.9\"\n    />\n    <rect\n      x=\"145.8\"\n      y=\"61.2\"\n      transform=\"rotate(-90 180 65.183)\"\n      fill={color}\n      width=\"68.5\"\n      height=\"7.9\"\n    />\n  </svg>\n)\n\nexport default DrawIcon\ntry {\n    // @ts-ignore\n    point.displayName = \"point\";\n    // @ts-ignore\n    point.__docgenInfo = { \"description\": \"\", \"displayName\": \"point\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/maps/icons/point.tsx#point\"] = { docgenInfo: point.__docgenInfo, name: \"point\", path: \"src/main/webapp/maps/icons/point.tsx#point\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\n\ntype Props = {\n  color: string\n}\n\nconst DrawIcon: React.SFC<Props> = ({ color }) => (\n  <svg width=\"30px\" height=\"30px\" x=\"0px\" y=\"0px\" viewBox=\"0 0 360 360\">\n    <polygon\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"15\"\n      strokeMiterlimit=\"10\"\n      points=\"100.5,279.1 54.7,103.9 168.3,167 291.7,49.5 274.5,270.2\"\n    />\n  </svg>\n)\n\nexport default DrawIcon\ntry {\n    // @ts-ignore\n    polygon.displayName = \"polygon\";\n    // @ts-ignore\n    polygon.__docgenInfo = { \"description\": \"\", \"displayName\": \"polygon\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/maps/icons/polygon.tsx#polygon\"] = { docgenInfo: polygon.__docgenInfo, name: \"polygon\", path: \"src/main/webapp/maps/icons/polygon.tsx#polygon\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import WorldMap from './world-map'\nimport ClusterMap from './cluster-map'\nimport withDrawMenu from './with-draw-menu'\nexport { DRAWING_STYLE, RENDERER_STYLE } from './map-style'\nexport { withDrawMenu, WorldMap, ClusterMap }\n","import { transparentize } from 'polished'\nimport MultiPoint from 'ol/geom/MultiPoint'\nimport Style from 'ol/style/Style'\nimport Fill from 'ol/style/Fill'\nimport Circle from 'ol/style/Circle'\nimport Stroke from 'ol/style/Stroke'\nimport Icon from 'ol/style/Icon'\nimport Text from 'ol/style/Text'\nimport {\n  BUFFER_CLASSNAME,\n  HIDDEN_CLASSNAME,\n} from 'geospatialdraw/bin/geometry/geometry'\nimport { POINT_RADIUS, POLYGON } from 'geospatialdraw/bin/shapes/shape'\nimport { getIconText } from '../icons/map-pin'\n\nconst LINE_WIDTH = 1.8\nconst POINT_SIZE = 4\nconst SCALE_FACTOR = 1.5\nconst MIN_OPACITY = 0.15\nconst DRAW_COLOR = 'rgba(200, 150, 0, 1)'\nconst HOVER_COLOR = DRAW_COLOR\nconst SELECTED_COLOR = 'rgba(0, 0, 255, 1)'\nconst ICON_COLOR = 'rgba(0, 125, 0, 1)'\n\nconst featureHasClass = (feature, className) =>\n  (feature.get('class') || []).includes(className)\n\nconst featureColor = (feature, opacity = 1, defaultColor = DRAW_COLOR) => {\n  if (featureHasClass(feature, HIDDEN_CLASSNAME)) {\n    return 'rgba(0, 0, 0, 0)'\n  } else if (feature.get('hover')) {\n    return transparentize(1 - opacity, HOVER_COLOR)\n  } else if (feature.get('selected')) {\n    return transparentize(1 - opacity, SELECTED_COLOR)\n  } else {\n    return transparentize(1 - opacity, feature.get('color') || defaultColor)\n  }\n}\n\nconst textStyleCache = {}\n\nconst textStyle = feature => {\n  const count = feature.get('features') ? feature.get('features').length : 0\n  const text = count > 1 ? count.toString() : ''\n  const fillColor = featureColor(feature, 1, ICON_COLOR)\n  const colorMap = textStyleCache[text] || {}\n  const style =\n    colorMap[fillColor] ||\n    new Text({\n      text,\n      font: 'bold 16px/1 verdana',\n      offsetY: -18,\n      placement: 'point',\n      textBaseline: 'middle',\n      stroke: new Stroke({\n        color: 'rgba(255, 255, 255, 1)',\n        width: LINE_WIDTH * SCALE_FACTOR,\n      }),\n      fill: new Fill({\n        color: fillColor,\n      }),\n    })\n  colorMap[fillColor] = style\n  textStyleCache[text] = colorMap\n  return style\n}\n\nconst iconStyleCache = {}\n\nconst iconStyle = feature => {\n  const color = featureColor(feature)\n  const iconColor = featureColor(feature, 1, ICON_COLOR)\n  const iconColorMap = iconStyleCache[color] || {}\n  const style =\n    iconColorMap[iconColor] ||\n    new Icon({\n      fill: new Fill({\n        color,\n      }),\n      stroke: new Stroke({\n        color,\n      }),\n      anchor: [0.5, 1],\n      opacity: 1,\n      src:\n        'data:image/svg+xml,' +\n        escape(\n          getIconText({\n            color: iconColor,\n          })\n        ),\n      scale: 2,\n    })\n  iconColorMap[iconColor] = style\n  iconStyleCache[color] = iconColorMap\n  return style\n}\n\nconst RENDERER_STYLE = feature =>\n  feature.getGeometry() && feature.getGeometry().getType() === 'Point'\n    ? new Style({\n        stroke: new Stroke({\n          color: featureColor(feature),\n          width: LINE_WIDTH,\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 0, 0)',\n        }),\n        text: textStyle(feature),\n        image: iconStyle(feature),\n      })\n    : new Style({\n        stroke: new Stroke({\n          color: featureColor(feature),\n          width: LINE_WIDTH,\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 0, 0)',\n        }),\n        ...(featureHasClass(feature, BUFFER_CLASSNAME) &&\n        feature.get('shape') === POINT_RADIUS\n          ? {}\n          : {\n              image: new Circle({\n                radius: POINT_SIZE,\n                fill: new Fill({\n                  color: featureColor(feature),\n                }),\n              }),\n            }),\n      })\n\nconst CIRCLE_DRAWING_STYLE = feature =>\n  new Style({\n    stroke: new Stroke({\n      color: 'rgba(0, 0, 0, 0)',\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 0, 0)',\n    }),\n    image: new Circle({\n      radius: POINT_SIZE,\n      fill: new Fill({\n        color: featureColor(feature),\n      }),\n    }),\n  })\n\nconst CIRCLE_BUFFER_PROPERTY_VALUE_DRAWING_STYLE = feature =>\n  new Style({\n    stroke: new Stroke({\n      color: featureColor(feature),\n      width: LINE_WIDTH * SCALE_FACTOR,\n    }),\n    fill: new Fill({\n      color: featureColor(feature, MIN_OPACITY),\n    }),\n  })\n\nconst GENERIC_DRAWING_STYLE = feature => [\n  new Style({\n    stroke: new Stroke({\n      color: featureColor(feature),\n      width: LINE_WIDTH * SCALE_FACTOR,\n    }),\n    fill: new Fill({\n      color: featureColor(feature, MIN_OPACITY),\n    }),\n    ...(feature.getGeometry() &&\n    feature.getGeometry().getType() === 'Point' &&\n    feature.get('buffer') &&\n    feature.get('buffer').width > 0\n      ? {}\n      : {\n          image: new Circle({\n            radius: POINT_SIZE * SCALE_FACTOR,\n            fill: new Fill({\n              color: featureColor(feature),\n            }),\n          }),\n        }),\n  }),\n  new Style({\n    image: new Circle({\n      radius: POINT_SIZE,\n      fill: new Fill({\n        color: featureColor(feature),\n      }),\n    }),\n    geometry: feature => {\n      const geometry = feature.getGeometry()\n      let coordinates = []\n      if (geometry) {\n        if (geometry.getType() === 'Polygon') {\n          coordinates = geometry.getCoordinates()[0]\n        } else if (geometry.getType() === 'LineString') {\n          coordinates = geometry.getCoordinates()\n        }\n      }\n      return new MultiPoint(coordinates)\n    },\n  }),\n]\n\nconst DRAWING_STYLE = feature => {\n  if (feature.getGeometry().getType() === 'Circle') {\n    return CIRCLE_DRAWING_STYLE(feature)\n  } else if (featureHasClass(feature, BUFFER_CLASSNAME)) {\n    return feature.get('shape') === POLYGON\n      ? RENDERER_STYLE(feature)\n      : CIRCLE_BUFFER_PROPERTY_VALUE_DRAWING_STYLE(feature)\n  } else {\n    return GENERIC_DRAWING_STYLE(feature)\n  }\n}\n\nexport { DRAWING_STYLE, RENDERER_STYLE }\n","import React, { useState, useEffect } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Menu from './draw-menu'\nimport DrawingToolbox from 'geospatialdraw/bin/drawing/openlayers/drawing-toolbox'\n\nconst Root = props => (\n  <Box\n    position=\"relative\"\n    display=\"flex\"\n    flexDirection=\"column\"\n    width=\"100%\"\n    height=\"100%\"\n    margin={0}\n    padding={0}\n    {...props}\n  />\n)\nconst MenuContainer = props => <Box bgcolor=\"rgb(52, 172, 247)\" {...props} />\n\nconst withDrawMenu = WorldMap => ({\n  drawGeo,\n  drawShape,\n  onSetShape,\n  onOk,\n  onCancel,\n  onUpdate,\n  defaultGeoProperties,\n  isDrawing,\n  drawStyle,\n  mapStyle,\n  onMapLoaded = () => {},\n  ...rest\n}) => {\n  const [drawToolbox, setToolbox] = useState(null)\n  const [map, setMap] = useState(null)\n  const isActive = drawToolbox && isDrawing\n  useEffect(\n    () => {\n      if (map && !drawToolbox) {\n        setToolbox(\n          new DrawingToolbox({\n            map,\n            drawingStyle: drawStyle,\n          })\n        )\n        onMapLoaded(map)\n      }\n    },\n    [map, onMapLoaded, drawToolbox, drawStyle]\n  )\n  return (\n    <Root>\n      {drawToolbox === null ? null : (\n        <MenuContainer>\n          <Menu\n            shape={drawShape}\n            toolbox={drawToolbox}\n            isActive={isActive}\n            geometry={drawGeo}\n            onCancel={onCancel}\n            onOk={onOk}\n            onSetShape={onSetShape}\n            onUpdate={onUpdate}\n            disabledShapes={['Point']}\n            defaultGeoProperties={defaultGeoProperties}\n          />\n        </MenuContainer>\n      )}\n      <WorldMap style={mapStyle} onMapLoaded={setMap} {...rest} />\n    </Root>\n  )\n}\n\nexport default withDrawMenu\n","import { action } from '@connexta/ace/@storybook/addon-actions'\nimport { storiesOf } from '../@storybook/react'\nimport { select } from '@connexta/ace/@storybook/addon-knobs'\nimport React, { useState, useEffect } from 'react'\nimport withDrawMenu from './with-draw-menu'\nimport WorldMap from './world-map'\nimport ClusterMap from './cluster-map'\nimport {\n  LINE,\n  POLYGON,\n  POINT_RADIUS,\n  BOUNDING_BOX,\n} from 'geospatialdraw/bin/shapes/shape'\nimport {\n  METERS,\n  MILES,\n  KILOMETERS,\n  NAUTICAL_MILES,\n} from 'geospatialdraw/bin/geometry/units'\nimport {\n  makeLineGeo,\n  makePolygonGeo,\n  makeBBoxGeo,\n  makePointRadiusGeo,\n} from 'geospatialdraw/bin/geometry/shape-factory'\nimport { LAT_LON } from 'geospatialdraw/bin/coordinates/units'\nimport { DRAWING_STYLE, RENDERER_STYLE } from './map-style'\n\nconst WorldMapWithDrawMenu = withDrawMenu(WorldMap)\nWorldMapWithDrawMenu.displayName = 'WorldMapWithDrawMenu'\n\nconst ClusterMapWithDrawMenu = withDrawMenu(ClusterMap)\nClusterMapWithDrawMenu.displayName = 'ClusterMapWithDrawMenu'\n\nconst stories = storiesOf('Maps', module)\n\nconst PROJECTION = 'EPSG:4326'\n\nconst geometryCatalog = {\n  none: {\n    shape: POLYGON,\n    geo: null,\n  },\n  Line: {\n    shape: LINE,\n    geo: makeLineGeo('', [[50, 50], [56, 20], [36, 30]], 0, METERS),\n  },\n  Polygon: {\n    shape: POLYGON,\n    geo: makePolygonGeo('', [[50, 50], [56, 20], [36, 30]], 0, METERS),\n  },\n  'Bounding Box': {\n    shape: BOUNDING_BOX,\n    geo: makeBBoxGeo('', [20, 30, 50, 50]),\n  },\n  Circle: {\n    shape: POINT_RADIUS,\n    geo: makePointRadiusGeo('', 50, 50, 600, MILES),\n  },\n  'Buffered Line': {\n    shape: LINE,\n    geo: makeLineGeo('', [[50, 50], [56, 20], [36, 30]], 250, KILOMETERS),\n  },\n  'Buffered Polygon': {\n    shape: POLYGON,\n    geo: makePolygonGeo(\n      '',\n      [[50, 50], [56, 20], [36, 30]],\n      150,\n      NAUTICAL_MILES\n    ),\n  },\n}\n\nconst createDrawMenuStory = (Component, additionalProps) => () => {\n  const drawGeoType = select(\n    'starting geometry',\n    Object.keys(geometryCatalog),\n    'none'\n  )\n  const geoData = geometryCatalog[drawGeoType]\n  const [isDrawing, setIsDrawing] = useState(true)\n  const [viewport, setViewport] = useState(null)\n  const [geos, setGeos] = useState([])\n  const [drawGeo, setDrawGeo] = useState(geoData.geo)\n  const [drawShape, setDrawShape] = useState(geoData.shape)\n  useEffect(\n    () => {\n      const update = geometryCatalog[drawGeoType]\n      setDrawGeo(update.geo)\n      setDrawShape(update.shape)\n    },\n    [drawGeoType]\n  )\n  return (\n    <Component\n      {...additionalProps}\n      projection={PROJECTION}\n      maxZoom={20}\n      minZoom={1.5}\n      zoom={2}\n      geos={geos}\n      viewport={viewport}\n      coordinateType={LAT_LON}\n      isDrawing={isDrawing}\n      mapStyle={RENDERER_STYLE}\n      drawStyle={DRAWING_STYLE}\n      drawShape={drawShape}\n      drawGeo={drawGeo}\n      onSetShape={shape => {\n        setDrawShape(shape)\n        setDrawGeo(null)\n      }}\n      onUpdate={setDrawGeo}\n      onOk={() => {\n        setViewport(drawGeo.bbox)\n        setGeos([...geos, drawGeo])\n        setIsDrawing(false)\n        action('Confirmed Geo ')(drawGeo)\n      }}\n      onCancel={() => {\n        setIsDrawing(false)\n      }}\n      height=\"500px\"\n    />\n  )\n}\n\nstories.add('draw on WorldMap', createDrawMenuStory(WorldMapWithDrawMenu, {}))\nstories.add(\n  'draw on ClusterMap',\n  createDrawMenuStory(ClusterMapWithDrawMenu, {\n    geos: [],\n    distance: 50,\n    selectGeos: () => {},\n  })\n)\n","import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  memo,\n} from 'react'\nimport OpenLayersMap from 'ol/Map'\nimport View from 'ol/View'\nimport Tile from 'ol/layer/Tile'\nimport OSM from 'ol/source/OSM'\nimport Box from '@material-ui/core/Box'\nimport Renderer from 'geospatialdraw/bin/renderer'\nimport { combineExtents } from 'geospatialdraw/bin/geometry/utilities'\nimport { LAT_LON } from 'geospatialdraw/bin/coordinates/units'\nimport { useCursorPosition } from './effects'\nimport CoordinateValue from '../location/coordinate-value'\n\nexport const geometryListToViewport = geometryList =>\n  geometryList.length > 0\n    ? combineExtents(geometryList.map(geometry => geometry.bbox))\n    : null\n\nconst WorldMap = ({\n  projection,\n  style,\n  geos = [],\n  center = null,\n  viewport = null,\n  maxZoom,\n  minZoom,\n  zoom,\n  coordinateType = LAT_LON,\n  onMapLoaded = () => {},\n  width = '100%',\n  height = '100%',\n}) => {\n  const mapDiv = useRef(null)\n  const [mapControls, createMapControls] = useState(null)\n  const [container, setContainer] = useState({ width: 0, height: 0 })\n  const {\n    cursor: { lat, lon },\n    setMap,\n  } = useCursorPosition()\n  useEffect(\n    () => {\n      if (mapDiv.current && !mapControls) {\n        const map = new OpenLayersMap({\n          layers: [\n            new Tile({\n              source: new OSM(),\n            }),\n          ],\n          target: mapDiv.current,\n          view: new View({\n            center: [0, 0],\n            rotation: 0,\n            zoom,\n            minZoom,\n            maxZoom,\n            projection,\n          }),\n        })\n        mapDiv.current\n          .querySelectorAll(\n            '.ol-overlaycontainer-stopevent, .ol-overlaycontainer'\n          )\n          .forEach(el => (el.style.display = 'none'))\n        const geoRenderer = new Renderer(map, style, maxZoom)\n        map.once('rendercomplete', () => {\n          createMapControls({ map, geoRenderer })\n        })\n      }\n    },\n    [mapDiv, mapControls, zoom, minZoom, maxZoom, projection, style]\n  )\n  useEffect(\n    () => {\n      if (mapControls) {\n        setMap(mapControls.map)\n        onMapLoaded(mapControls.map)\n      }\n    },\n    [mapControls, setMap, onMapLoaded]\n  )\n  useEffect(\n    () => {\n      if (mapControls) {\n        mapControls.geoRenderer.clearGeos()\n        mapControls.geoRenderer.renderList(geos)\n      }\n    },\n    [mapControls, geos]\n  )\n  useEffect(\n    () => {\n      if (mapControls) {\n        if (viewport) {\n          mapControls.geoRenderer.panToExtent(viewport)\n        } else if (center) {\n          mapControls.map.getView().setCenter(center)\n        }\n      }\n    },\n    [mapControls, viewport, center]\n  )\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (mapDiv.current) {\n      const width = mapDiv.current.parentElement.offsetWidth\n      const height = mapDiv.current.parentElement.offsetHeight\n      if (width !== container.width || height !== container.height) {\n        setContainer({ width, height })\n      }\n    }\n  })\n  useLayoutEffect(\n    () => {\n      if (mapControls) {\n        window.requestAnimationFrame(() => {\n          mapControls.geoRenderer.resizeMap()\n        })\n      }\n    },\n    [mapControls, container.width, container.height]\n  )\n  return (\n    <Box width={width} height={height} position=\"relative\">\n      <Box width=\"100%\" height=\"100%\" ref={mapDiv} className=\"map\" />\n      <Box\n        position=\"absolute\"\n        left=\"0\"\n        bottom=\"0\"\n        bgcolor=\"rgba(0,0,0, 0.5)\"\n        color=\"white\"\n        borderRadius=\"0 10px 0 0\"\n        p={1}\n      >\n        <CoordinateValue lat={lat} lon={lon} unit={coordinateType} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default memo(WorldMap)\n","import { storiesOf } from '../@storybook/react'\nimport { select } from '@connexta/ace/@storybook/addon-knobs'\nimport React from 'react'\nimport WorldMap from './world-map'\nimport Style from 'ol/style/Style'\nimport Fill from 'ol/style/Fill'\nimport Circle from 'ol/style/Circle'\nimport Stroke from 'ol/style/Stroke'\nimport { LAT_LON } from 'geospatialdraw/bin/coordinates/units'\nimport {\n  BUFFER_CLASSNAME,\n  HIDDEN_CLASSNAME,\n} from 'geospatialdraw/bin/geometry/geometry'\nimport { POINT_RADIUS } from 'geospatialdraw/bin/shapes/shape'\n\nconst featureHasClass = (feature, className) =>\n  (feature.get('class') || []).includes(className)\n\nconst featureColor = feature =>\n  featureHasClass(feature, HIDDEN_CLASSNAME)\n    ? 'rgba(0, 0, 0, 0)'\n    : feature.get('color') || 'blue'\n\nconst LINE_WIDTH = 1.8\nconst POINT_SIZE = 4\n\nconst MAP_STYLE = feature =>\n  new Style({\n    stroke: new Stroke({\n      color: featureColor(feature),\n      width: LINE_WIDTH,\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 0, 0)',\n    }),\n    ...(featureHasClass(feature, BUFFER_CLASSNAME) &&\n    feature.get('shape') === POINT_RADIUS\n      ? {}\n      : {\n          image: new Circle({\n            radius: POINT_SIZE,\n            fill: new Fill({\n              color: featureColor(feature),\n            }),\n          }),\n        }),\n  })\n\nconst PROJECTION = 'EPSG:4326'\n\nconst stories = storiesOf('Maps', module)\n\nstories.add('bare map', () => {\n  return (\n    <WorldMap\n      projection={PROJECTION}\n      style={MAP_STYLE}\n      coordinateType={LAT_LON}\n      maxZoom={20}\n      minZoom={1.5}\n      zoom={2}\n      height=\"500px\"\n    />\n  )\n})\n\nstories.add('render geometries', () => {\n  const geos = [\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-77.14101030066769, 38.12853403337011],\n            [-77.15732422141605, 38.090304558346936],\n            [-77.17227678899663, 38.059283559933505],\n            [-77.2787301432643, 38.042947321920096],\n            [-77.39377564457455, 38.10478846336155],\n            [-77.37989430571616, 38.211621211135004],\n            [-77.29066988006372, 38.23704057602198],\n            [-77.23655051232805, 38.17776592006078],\n            [-77.14101030066769, 38.12853403337011],\n          ],\n        ],\n      },\n      properties: {\n        shape: 'Polygon',\n        id: 'shape1',\n        color: '#a020f0',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n      },\n      bbox: [\n        -77.39377564457455,\n        38.042947321920096,\n        -77.14101030066769,\n        38.23704057602198,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-48.52260964518281, -5.422812136709466],\n            [-48.20103414906473, -5.921405130103808],\n            [-48.58495335774491, -6.656576615699192],\n            [-49.35629496058171, -7.220492195843082],\n            [-49.05070514670665, -8.114299347133246],\n            [-50.494650503939695, -10.315617580582623],\n            [-50.555500573327464, -12.51119524144825],\n            [-49.699389848670606, -12.992255223966657],\n            [-48.84844563933912, -12.873616723902453],\n            [-47.881541863815855, -13.518283025057785],\n            [-46.95692697299289, -13.140361996627453],\n            [-46.08493399752098, -13.000483378003368],\n            [-46.11803796608728, -11.901355080634344],\n            [-46.530019725181205, -11.17708617298432],\n            [-45.75886947476387, -10.136511715969567],\n            [-46.50648337758783, -9.950325811836548],\n            [-46.81628294469097, -9.007723793584494],\n            [-46.55585230180809, -8.050578991453602],\n            [-47.15650754648799, -7.875682880068629],\n            [-47.495392681348804, -6.901699065025397],\n            [-47.4075619208174, -5.461580756181515],\n            [-48.101023088934625, -4.881208867964203],\n            [-48.52260964518281, -5.422812136709466],\n          ],\n        ],\n      },\n      properties: {\n        shape: 'Polygon',\n        id: 'shape2',\n        color: '#ffd700',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n      },\n      bbox: [\n        -50.555500573327464,\n        -13.518283025057785,\n        -45.75886947476387,\n        -4.881208867964203,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [129.1518048627637, -31.629617510480546],\n            [129.05907305960878, -25.93903105437493],\n            [141.08274489367915, -26.010442822429503],\n            [140.87057949583584, -37.992509539459405],\n            [140.09850443831823, -37.76171498473229],\n            [139.64540194477775, -36.77768152000342],\n            [139.03146773014043, -35.660346088239336],\n            [138.06150962839044, -35.888242774117856],\n            [136.83571110543622, -35.99091012761082],\n            [135.63019766442213, -34.850391745058005],\n            [134.23673672951367, -33.08745253195413],\n            [133.78342724534116, -32.1932530015316],\n            [131.96563551474608, -32.05125742795062],\n            [131.32334358351898, -31.491968740172446],\n            [129.1518048627637, -31.629617510480546],\n          ],\n        ],\n      },\n      properties: {\n        shape: 'Polygon',\n        id: 'shape3',\n        color: '#ff00ff',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n      },\n      bbox: [\n        129.05907305960878,\n        -37.992509539459405,\n        141.08274489367915,\n        -25.93903105437493,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [112.66897771954346, 47.8014155606246],\n            [112.76517881053884, 47.60824961436289],\n            [113.66977457160384, 47.533633165806926],\n            [114.45758081350047, 47.14843031611881],\n            [114.42756155693857, 46.84807171478872],\n            [114.65177618117082, 46.72985428850513],\n            [114.9275947044044, 46.48847157174798],\n            [115.43516587315291, 46.55445416332818],\n            [115.74273042434355, 46.56478158455688],\n            [116.30303453492868, 46.597723069633666],\n            [116.51034672377376, 46.30828961809215],\n            [116.51014748092048, 46.17283768499923],\n            [116.2526593001893, 45.91422046143276],\n            [116.28599927097265, 45.758611793015646],\n            [116.03309367586708, 45.6576952878258],\n            [115.68747373969863, 45.433181799313616],\n            [114.92629962585804, 45.36351321494761],\n            [114.77255055740493, 45.42086194955204],\n            [114.553184175936, 45.38523068595589],\n            [114.35722882972827, 45.08782752028289],\n            [114.14523443383095, 44.975554172455695],\n            [113.92377600240249, 44.927071744822534],\n            [113.66575650739588, 44.75728362667983],\n            [113.46448801843384, 44.78683798325073],\n            [112.9438000285106, 44.79567108307978],\n            [112.55275272179273, 44.937266337482384],\n            [112.44519478816, 45.072917513428585],\n            [112.0887161164874, 45.06640891355455],\n            [111.97777105434879, 45.069065484931706],\n            [111.930118805271, 45.21474521782668],\n            [111.71636443083631, 45.50358094080834],\n            [111.69557675981004, 45.75031000746202],\n            [111.64825658215437, 46.060066230038814],\n            [111.19816697657915, 46.24124439796108],\n            [111.24761241133652, 46.382275130946034],\n            [111.24382679712407, 46.60406563379663],\n            [111.36679284474434, 46.74748728102102],\n            [111.49583579938985, 47.187548329647484],\n            [111.7724845011788, 47.38174369731784],\n            [112.05667122425042, 47.34999766936078],\n            [112.0966858306189, 47.64872912072236],\n            [112.377850703749, 47.7484833759347],\n            [112.66897771954346, 47.8014155606246],\n          ],\n        ],\n      },\n      properties: {\n        shape: 'Polygon',\n        id: 'shape4',\n        color: '#ffff00',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n      },\n      bbox: [\n        111.19816697657915,\n        44.75728362667983,\n        116.51034672377376,\n        47.8014155606246,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [2.3801982067247183, 10.380487991234242],\n      },\n      properties: {\n        shape: 'Point Radius',\n        id: 'shape5',\n        color: '#a52a2a',\n        buffer: {\n          width: 86.22498402406272,\n          unit: 'kilometers',\n        },\n      },\n      bbox: [\n        1.591858105761676,\n        9.605049151287616,\n        3.1685383076877605,\n        11.155926831180869,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.03353449715513, 38.88832624652902],\n      },\n      properties: {\n        id: 'shape6',\n        color: '#0000ff',\n        shape: 'Point',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n      },\n      bbox: [\n        -77.03353449715513,\n        38.88832624652902,\n        -77.03353449715513,\n        38.88832624652902,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [37.631401597084825, 55.74584388706087],\n      },\n      properties: {\n        shape: 'Point',\n        id: 'shape7',\n        color: '#ff0000',\n        buffer: {\n          width: 0,\n          unit: 'meters',\n        },\n      },\n      bbox: [\n        37.631401597084825,\n        55.74584388706087,\n        37.631401597084825,\n        55.74584388706087,\n      ],\n    },\n  ]\n  const shapeIndex = select(\n    'Pan To',\n    ['none', ...geos.map((_x, i) => (i + 1).toString())],\n    'none'\n  )\n  const viewport = shapeIndex === 'none' ? null : geos[shapeIndex - 1].bbox\n  return (\n    <WorldMap\n      projection={PROJECTION}\n      style={MAP_STYLE}\n      geos={geos}\n      viewport={viewport}\n      coordinateType={LAT_LON}\n      maxZoom={20}\n      minZoom={1.5}\n      zoom={2}\n      height=\"500px\"\n    />\n  )\n})\n","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/individual-filter'\n\nimport Box from '@material-ui/core/Box'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\n\nimport AttributeDropdown from '../filter/attribute-dropdown'\nimport ComparatorDropdown from '../filter/comparator-dropdown'\n\nconst BooleanFilter = (props: QueryFilterProps) => {\n  const { filter } = props\n  return (\n    <React.Fragment>\n      <AttributeDropdown {...props} />\n      <ComparatorDropdown\n        {...props}\n        onChange={(newOperator: string) => {\n          const { property, type: oldOperator } = filter\n          if (newOperator !== oldOperator) {\n            if (newOperator === 'IS NULL') {\n              props.onChange({ property, type: newOperator, value: null })\n            } else {\n              props.onChange({ property, type: newOperator, value: false })\n            }\n          }\n        }}\n      />\n      {filter.type !== 'IS NULL' && (\n        <Box>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              props.onChange({\n                ...filter,\n                value: !filter.value,\n              })\n            }}\n          >\n            <Switch checked={filter.value !== false} />\n            {String(filter.value !== false)}\n          </Button>\n        </Box>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default BooleanFilter\ntry {\n    // @ts-ignore\n    booleanfilter.displayName = \"booleanfilter\";\n    // @ts-ignore\n    booleanfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"booleanfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter-input/boolean-filter.tsx#booleanfilter\"] = { docgenInfo: booleanfilter.__docgenInfo, name: \"booleanfilter\", path: \"src/main/webapp/query-filters/filter-input/boolean-filter.tsx#booleanfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/individual-filter'\nconst {\n  TimeRangeAfter,\n  TimeRangeBefore,\n  TimeRangeDuring,\n  TimeRangeRelative,\n  validate,\n} = require('../../time-range')\nconst { uglyMap, parseRelative } = require('../../basic-search-helper')\nimport AttributeDropdown from '../filter/attribute-dropdown'\n\nimport ComparatorDropdown from '../filter/comparator-dropdown'\nimport { Box } from '@material-ui/core'\n\nconst getDate = (value: any) => {\n  if (value == null) return null\n  const date = new Date(value)\n  if (!isNaN(date.valueOf())) {\n    return date\n  }\n  return null\n}\n\nconst toISOString = (value: any) => {\n  if (value == null) return ''\n  const date = new Date(value)\n  if (!isNaN(date.valueOf())) {\n    return date.toISOString()\n  }\n  return ''\n}\n\nconst comparatorsToComponents: any = {\n  BEFORE: TimeRangeBefore,\n  AFTER: TimeRangeAfter,\n  '=': TimeRangeRelative,\n  DURING: TimeRangeDuring,\n  'IS NULL': null,\n}\n\nconst fromFilter = (filter: any) => {\n  const timeRange: any = {}\n  switch (filter.type) {\n    case 'BEFORE':\n    case 'AFTER':\n      timeRange.value = getDate(filter.value)\n      break\n    case '=':\n      const { last, unit } = parseRelative(filter.value)\n      timeRange.last = last\n      timeRange.unit = unit\n      break\n    case 'DURING':\n      const dates = filter.value.split('/')\n      timeRange.from = getDate(dates[0])\n      timeRange.to = getDate(dates[1])\n      break\n  }\n\n  return timeRange\n}\n\nconst toDuringValue = (value: any) => {\n  if (value == null) return ''\n  const date = new Date(value)\n  if (!isNaN(date.valueOf())) {\n    return `${date.toISOString()}/${date.toISOString()}`\n  }\n  return ''\n}\n\nconst fromDuringValue = (value: string) => {\n  const dates = value.split('/')\n  const from = new Date(dates[0])\n  if (!isNaN(from.valueOf())) {\n    return from.toISOString()\n  }\n\n  return ''\n}\nconst default_relative_value = 'RELATIVE(PT1M)'\n\nconst FROM: any = {\n  DURING: (value: any) => fromDuringValue(value),\n  '=': () => '',\n  'IS NULL': () => '',\n}\n\nconst TO: any = {\n  DURING: (value: any) => toDuringValue(value),\n  '=': () => default_relative_value,\n  'IS NULL': () => null,\n}\n\nconst DateFilter = (props: QueryFilterProps) => {\n  const { filter } = props\n  const toFilter = (timeRange: any) => {\n    if (filter.type === '=') {\n      const { last, unit } = timeRange\n      if (!uglyMap[unit] || !last.match(/^(-?\\d*$)|^$/)) {\n        return { ...filter }\n      }\n      return {\n        ...filter,\n        value: uglyMap[unit](last),\n      }\n    }\n    if (filter.type === 'DURING') {\n      const { from, to } = timeRange\n\n      return {\n        ...filter,\n        value: `${toISOString(from)}/${toISOString(to)}`,\n      }\n    }\n    return {\n      ...filter,\n      value: toISOString(timeRange.value),\n    }\n  }\n  const value = fromFilter(filter)\n  const Component = comparatorsToComponents[filter.type]\n\n  return (\n    <React.Fragment>\n      <AttributeDropdown {...props} />\n      <ComparatorDropdown\n        {...props}\n        onChange={(newOperator: string) => {\n          const { type: oldOperator, value: oldValue } = filter\n          if (oldOperator === newOperator) return\n          let newValue = oldValue\n          if (FROM[oldOperator] !== undefined) {\n            newValue = FROM[oldOperator](newValue)\n          }\n          if (TO[newOperator] !== undefined) {\n            newValue = TO[newOperator](newValue)\n          }\n          props.onChange({\n            type: newOperator,\n            value: newValue,\n            property: filter.property,\n          })\n        }}\n      />\n      {filter.type !== 'IS NULL' && (\n        <Box style={{ margin: 5 }}>\n          <Component\n            errors={validate({ ...value, type: filter.type })}\n            timeRange={value}\n            setTimeRange={(value: any) => {\n              props.onChange(toFilter(value))\n            }}\n          />\n        </Box>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default DateFilter\ntry {\n    // @ts-ignore\n    datefilter.displayName = \"datefilter\";\n    // @ts-ignore\n    datefilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"datefilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter-input/date-filter.tsx#datefilter\"] = { docgenInfo: datefilter.__docgenInfo, name: \"datefilter\", path: \"src/main/webapp/query-filters/filter-input/date-filter.tsx#datefilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/individual-filter'\nimport { makeDefaultSearchGeo } from '../filter'\nimport { Location, geoToFilter } from '../../location'\nimport AttributeDropdown from '../filter/attribute-dropdown'\nimport { makeSearchGeoId } from '../filter/search-geo-factory'\nimport { wktToGeo } from '../../location/geo-to-wkt'\n\nconst getGeojson = (filter: QueryFilterProps['filter']) => {\n  if (filter.geojson) return filter.geojson\n\n  if (filter.value) {\n    return wktToGeo({\n      wkt: filter.value,\n      id: makeSearchGeoId(),\n      buffer: filter.distance || 0,\n      bufferUnit: 'meters',\n    })\n  }\n\n  return makeDefaultSearchGeo()\n}\n\nconst LocationFilter = (props: QueryFilterProps) => {\n  const { filter } = props\n  const geojson = getGeojson(filter)\n\n  return (\n    <React.Fragment>\n      <AttributeDropdown {...props} />\n      <Location\n        value={geojson}\n        onChange={value => {\n          props.onChange(geoToFilter(value, filter.property))\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default LocationFilter\ntry {\n    // @ts-ignore\n    locationfilter.displayName = \"locationfilter\";\n    // @ts-ignore\n    locationfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"locationfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter-input/location-filter.tsx#locationfilter\"] = { docgenInfo: locationfilter.__docgenInfo, name: \"locationfilter\", path: \"src/main/webapp/query-filters/filter-input/location-filter.tsx#locationfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/individual-filter'\nimport TextField from '@material-ui/core/TextField'\nimport { getIn } from 'immutable'\nimport Box from '@material-ui/core/Box'\nimport AttributeDropdown from '../filter/attribute-dropdown'\nimport ComparatorDropdown from '../filter/comparator-dropdown'\nimport { sampleAttributeDefinitions } from '../filter/dummyDefinitions'\n\nconst intRegex = /^(-?\\d*$)|^$/\nconst floatRegex = /^-?\\d*(\\.\\d*)?$|^$/\n\nconst isInteger = (type: any) =>\n  type === 'INTEGER' || type === 'SHORT' || type === 'LONG'\n\nconst validateNumber = (num: string) => {\n  const errors: any = {}\n  if (num === '') {\n    errors.value = 'A value must be entered'\n  }\n  return errors\n}\n\nconst FloatInput = (props: any) => {\n  const errors = validateNumber(props.value)\n  return (\n    <TextField\n      error={errors.value !== undefined}\n      helperText={errors.value}\n      onChange={event => {\n        const value = event.target.value\n        if (value.match(floatRegex)) {\n          props.onChange(value)\n        }\n      }}\n      value={props.value}\n      variant=\"outlined\"\n      style={{ width: 100 }}\n    />\n  )\n}\n\nconst IntegerInput = (props: any) => {\n  const errors = validateNumber(props.value)\n  return (\n    <TextField\n      error={errors.value !== undefined}\n      helperText={errors.value}\n      onChange={event => {\n        const value = event.target.value\n        if (value.match(intRegex)) {\n          props.onChange(value)\n        }\n      }}\n      value={props.value}\n      variant=\"outlined\"\n      style={{ width: 100 }}\n    />\n  )\n}\nconst NumberInput = (props: any) => {\n  if (props.isInt) {\n    return <IntegerInput {...props} />\n  } else {\n    return <FloatInput {...props} />\n  }\n}\n\nconst NumberFilter = (props: QueryFilterProps) => {\n  const { attributeDefinitions = sampleAttributeDefinitions, filter } = props\n\n  const getType = (property: string) => {\n    return getIn(\n      attributeDefinitions.find(definition => definition.id === property),\n      ['type'],\n      'INTEGER'\n    )\n  }\n  const isInt = isInteger(getType(filter.property))\n  if (filter.type !== 'BETWEEN') {\n    return (\n      <NumberInput\n        isInt={isInt}\n        onChange={(value: string) => {\n          props.onChange({ ...filter, value })\n        }}\n        value={filter.value}\n      />\n    )\n  } else {\n    return (\n      <Box style={{ display: 'flex', alignItems: 'center' }}>\n        <NumberInput\n          isInt={isInt}\n          onChange={(value: string) => {\n            props.onChange({\n              ...filter,\n              value: { ...filter.value, lower: value },\n            })\n          }}\n          value={filter.value.lower}\n        />\n        <Box style={{ margin: 10 }} component=\"span\">\n          TO\n        </Box>\n        <NumberInput\n          isInt={isInt}\n          onChange={(value: string) => {\n            props.onChange({\n              ...filter,\n              value: { ...filter.value, upper: value },\n            })\n          }}\n          value={filter.value.upper}\n        />\n      </Box>\n    )\n  }\n}\n\nconst FROM: any = {\n  BETWEEN: (value: any) => value.lower,\n  'IS NULL': () => '',\n}\n\nconst TO: any = {\n  BETWEEN: (value: any) => ({ lower: value, upper: value }),\n  'IS NULL': () => null,\n}\n\nexport default (props: QueryFilterProps) => {\n  const { filter } = props\n  return (\n    <React.Fragment>\n      <AttributeDropdown {...props} />\n      <ComparatorDropdown\n        {...props}\n        onChange={(newOperator: string) => {\n          const { property, type: oldOperator, value: oldValue } = filter\n          if (oldOperator === newOperator) return\n          let newValue = oldValue\n          if (FROM[oldOperator] !== undefined) {\n            newValue = FROM[oldOperator](newValue)\n          }\n          if (TO[newOperator] !== undefined) {\n            newValue = TO[newOperator](newValue)\n          }\n          props.onChange({\n            type: newOperator,\n            value: newValue,\n            property,\n          })\n        }}\n      />\n      {filter.type !== 'IS NULL' && (\n        <Box>\n          <NumberFilter {...props} />\n        </Box>\n      )}\n    </React.Fragment>\n  )\n}\ntry {\n    // @ts-ignore\n    numberfilter.displayName = \"numberfilter\";\n    // @ts-ignore\n    numberfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"numberfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter-input/number-filter.tsx#numberfilter\"] = { docgenInfo: numberfilter.__docgenInfo, name: \"numberfilter\", path: \"src/main/webapp/query-filters/filter-input/number-filter.tsx#numberfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/individual-filter'\nimport TextField from '@material-ui/core/TextField'\nimport Box from '@material-ui/core/Box'\nimport { getIn, List } from 'immutable'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport AttributeDropdown from '../filter/attribute-dropdown'\nimport ComparatorDropdown from '../filter/comparator-dropdown'\nimport { sampleAttributeDefinitions } from '../filter/dummyDefinitions'\nconst useApolloFallback = require('../../react-hooks/use-apollo-fallback')\n  .default\n\nconst intRegex = /^(\\d*$)|^$/\n\nconst validateText = (value: any) => {\n  let errors: any = {}\n  if (value === '') errors.value = 'A value must be entered'\n  return errors\n}\n\nconst FACETED_QUERY = gql`\n  query getFacetedOptions($attribute: String!) {\n    facet(attribute: $attribute) {\n      value\n    }\n  }\n`\nconst FACET_WHITELIST = gql`\n  query getAttributeSuggestionList {\n    systemProperties {\n      attributeSuggestionList\n    }\n  }\n`\n\nconst WithFacetedSuggestions = (props: QueryFilterProps) => {\n  const { filter } = props\n  const { data, loading, error } = useQuery(FACET_WHITELIST)\n  if (loading) {\n    return <TextFilterContainer {...props} loading={true} />\n  }\n  if (error) {\n    return <TextFilterContainer {...props} />\n  }\n\n  const attributeSuggestionList =\n    getIn(data, ['systemProperties', 'attributeSuggestionList'], undefined) ||\n    []\n  if (!attributeSuggestionList.includes(filter.property)) {\n    return <TextFilterContainer {...props} />\n  }\n  return <WithFacetedQuery {...props} />\n}\n\nconst WithFacetedQuery = (props: QueryFilterProps) => {\n  const { filter } = props\n  const { data, loading, error } = useQuery(FACETED_QUERY, {\n    variables: { attribute: filter.property },\n  })\n\n  if (loading) {\n    return <TextFilterContainer {...props} loading={true} />\n  }\n  if (error) {\n    return <TextFilterContainer {...props} />\n  }\n\n  const enums = getIn(data, ['facet'], []).map((facet: any) => facet.value)\n\n  return <TextFilterContainer {...props} enums={enums} />\n}\n\nconst TextFilterContainer = (props: TextFilterProps) => {\n  const { attributeDefinitions = sampleAttributeDefinitions, filter } = props\n  let { enums = [] } = props\n  enums = List(\n    enums.concat(\n      getIn(\n        attributeDefinitions.find(\n          definition => definition.id === filter.property\n        ),\n        ['enums'],\n        undefined\n      ) || []\n    )\n  )\n    .toSet()\n    .toArray()\n\n  return <TextFilter {...props} enums={enums} />\n}\n\ntype TextFilterProps = QueryFilterProps & {\n  enums?: string[]\n  loading?: boolean\n}\n\nconst TextFilter = (props: TextFilterProps) => {\n  const { enums = [], filter } = props\n  const errors = validateText(filter.value)\n  return (\n    <Autocomplete\n      freeSolo\n      disableClearable\n      autoSelect\n      options={enums}\n      value={filter.value}\n      onChange={(_, value: any) => {\n        props.onChange({ ...filter, value })\n      }}\n      loading={props.loading}\n      renderInput={params => {\n        return (\n          <TextField\n            {...params}\n            error={errors.value !== undefined}\n            helperText={errors.value}\n            placeholder=\"Use * for wildcard\"\n            variant=\"outlined\"\n            onChange={event => {\n              props.onChange({ ...filter, value: event.target.value })\n            }}\n            fullWidth\n          />\n        )\n      }}\n    />\n  )\n}\n\nconst validateNear = (value: any) => {\n  let errors: any = {}\n  if (value.value === '') {\n    errors.value = 'A value must be entered'\n  }\n  if (value.distance === '') {\n    errors.distance = 'A value must be entered'\n  } else if (value.distance === '0') {\n    errors.distance = 'A value greater than 0 must be entered'\n  }\n  return errors\n}\n\nconst NearFilter = (props: QueryFilterProps) => {\n  const { filter } = props\n  const errors = validateNear(filter.value)\n\n  return (\n    <Box style={{ display: 'flex', alignItems: 'center' }}>\n      <TextField\n        variant=\"outlined\"\n        fullWidth\n        error={errors.value !== undefined}\n        helperText={errors.value}\n        onChange={event => {\n          const value = event.target.value\n          props.onChange({\n            ...filter,\n            value: { ...filter.value, value },\n          })\n        }}\n        value={filter.value.value}\n      />\n      <Box style={{ margin: 10 }} component=\"span\">\n        within\n      </Box>\n      <TextField\n        variant=\"outlined\"\n        error={errors.distance !== undefined}\n        helperText={errors.distance}\n        style={{ width: 100 }}\n        onChange={event => {\n          const value = event.target.value\n          if (!value.match(intRegex)) return\n\n          props.onChange({\n            ...filter,\n            value: { ...filter.value, distance: value },\n          })\n        }}\n        value={filter.value.distance}\n      />\n    </Box>\n  )\n}\n\nconst FROM: any = {\n  NEAR: (value: any) => value.value,\n  'IS NULL': () => '',\n}\nconst TO: any = {\n  NEAR: (value: any) => ({ value, distance: 2 }),\n  'IS NULL': () => null,\n}\n\nexport default (props: QueryFilterProps) => {\n  const { filter } = props\n  let Component\n  if (filter.type === 'NEAR') {\n    Component = NearFilter\n  } else {\n    Component = useApolloFallback(WithFacetedSuggestions, TextFilterContainer)\n  }\n  return (\n    <React.Fragment>\n      <AttributeDropdown {...props} />\n      <ComparatorDropdown\n        {...props}\n        onChange={(newOperator: string) => {\n          const { property, type: oldOperator, value: oldValue } = filter\n          if (oldOperator === newOperator) return\n          let newValue = oldValue\n          if (FROM[oldOperator] !== undefined) {\n            newValue = FROM[oldOperator](newValue)\n          }\n          if (TO[newOperator] !== undefined) {\n            newValue = TO[newOperator](newValue)\n          }\n          props.onChange({\n            type: newOperator,\n            value: newValue,\n            property,\n          })\n        }}\n      />\n      {filter.type !== 'IS NULL' && <Component {...props} />}\n    </React.Fragment>\n  )\n}\ntry {\n    // @ts-ignore\n    textfilter.displayName = \"textfilter\";\n    // @ts-ignore\n    textfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"textfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter-input/text-filter.tsx#textfilter\"] = { docgenInfo: textfilter.__docgenInfo, name: \"textfilter\", path: \"src/main/webapp/query-filters/filter-input/text-filter.tsx#textfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport { QueryFilterProps } from './individual-filter'\nimport { getDefaultValue } from './filter-utils'\nimport { getIn } from 'immutable'\nimport {\n  sampleAttributeDefinitions,\n  AttributeDefinition,\n} from './dummyDefinitions'\nimport { Comparators } from './comparator-dropdown'\nconst AttributeDropdown = (props: QueryFilterProps) => {\n  const { attributeDefinitions = sampleAttributeDefinitions, filter } = props\n\n  const getType = (property: string) => {\n    return getIn(\n      attributeDefinitions.find(definition => definition.id === property),\n      ['type'],\n      'STRING'\n    ) as AttributeDefinition['type']\n  }\n  return (\n    <Box>\n      <Autocomplete\n        disableClearable\n        options={attributeDefinitions.map(definition => definition.id)}\n        value={filter.property}\n        onChange={(_, newProperty: string) => {\n          const prevType = getType(filter.property)\n          const newType = getType(newProperty)\n          if (prevType !== newType) {\n            props.onChange({\n              type: Comparators[newType].options[0],\n              property: newProperty,\n              value: getDefaultValue(newType),\n            })\n          } else {\n            props.onChange({\n              ...filter,\n              property: newProperty,\n            })\n          }\n        }}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Attribute\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        )}\n        disabled={props.editing === false}\n      />\n    </Box>\n  )\n}\n\nexport default AttributeDropdown\ntry {\n    // @ts-ignore\n    attributedropdown.displayName = \"attributedropdown\";\n    // @ts-ignore\n    attributedropdown.__docgenInfo = { \"description\": \"\", \"displayName\": \"attributedropdown\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter/attribute-dropdown.tsx#attributedropdown\"] = { docgenInfo: attributedropdown.__docgenInfo, name: \"attributedropdown\", path: \"src/main/webapp/query-filters/filter/attribute-dropdown.tsx#attributedropdown\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport useAnchorEl from '../../react-hooks/use-anchor-el'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport Popover from '@material-ui/core/Popover'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport DropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport { Map, getIn } from 'immutable'\nimport { QueryFilter } from './individual-filter'\nimport {\n  AttributeDefinition,\n  sampleAttributeDefinitions,\n} from './dummyDefinitions'\n\nconst booleanComparators = ['=', 'IS NULL']\nconst booleanAliases = Map({ '=': 'IS', 'IS NULL': 'IS EMPTY' })\n\nconst dateComparators = ['BEFORE', 'AFTER', 'DURING', '=', 'IS NULL']\nconst dateAliases = Map({\n  BEFORE: 'Before',\n  AFTER: 'After',\n  DURING: 'Between',\n  '=': 'Relative',\n  'IS NULL': 'IS EMPTY',\n})\n\nconst textComparators = ['ILIKE', 'LIKE', '=', 'NEAR', 'IS NULL']\nconst textAliases = Map({\n  ILIKE: 'CONTAINS',\n  LIKE: 'MATCHCASE',\n  'IS NULL': 'IS EMPTY',\n})\n\nexport const numberComparators = [\n  '>',\n  '<',\n  '=',\n  '>=',\n  '<=',\n  'BETWEEN',\n  'IS NULL',\n]\nexport const numberAliases = Map({\n  BETWEEN: 'RANGE',\n  'IS NULL': 'IS EMPTY',\n})\n\nexport const Comparators = {\n  BOOLEAN: { options: booleanComparators, aliases: booleanAliases },\n  DATE: { options: dateComparators, aliases: dateAliases },\n  LOCATION: { options: textComparators, aliases: textAliases },\n  GEOMETRY: { options: textComparators, aliases: textAliases },\n  //Strings\n  STRING: { options: textComparators, aliases: textAliases },\n  XML: { options: textComparators, aliases: textAliases },\n  BINARY: { options: textComparators, aliases: textAliases },\n  //Numbers\n  FLOAT: { options: numberComparators, aliases: numberAliases },\n  DOUBLE: { options: numberComparators, aliases: numberAliases },\n  INTEGER: { options: numberComparators, aliases: numberAliases },\n  SHORT: { options: numberComparators, aliases: numberAliases },\n  LONG: { options: numberComparators, aliases: numberAliases },\n}\n\ntype ComparatorDropdownProps = {\n  onChange: (value: string) => void\n  editing?: boolean\n  attributeDefinitions?: AttributeDefinition[]\n  filter: QueryFilter\n}\n\nconst ComparatorDropdown = (props: ComparatorDropdownProps) => {\n  const [anchorEl, open, close] = useAnchorEl()\n  const { attributeDefinitions = sampleAttributeDefinitions, filter } = props\n  const type = getIn(\n    attributeDefinitions.find(definition => definition.id === filter.property),\n    ['type'],\n    'STRING'\n  ) as AttributeDefinition['type']\n  let options = Comparators[type].options\n  const aliases = Comparators[type].aliases\n  if (filter.property === 'anyText' || filter.property === 'anyGeo') {\n    options = options.filter(option => option !== 'IS NULL')\n  }\n  return (\n    <React.Fragment>\n      <Button\n        style={{ width: 'fit-content' }}\n        variant=\"outlined\"\n        onClick={open as any}\n        disabled={props.editing === false}\n      >\n        <Box>\n          <Box\n            whiteSpace=\"nowrap\"\n            overflow=\"hidden\"\n            textOverflow=\"ellipsis\"\n            justifyContent=\"left\"\n            maxWidth=\"calc(100% - 24px)\"\n            component=\"span\"\n          >\n            {aliases ? aliases.get(filter.type) || filter.type : filter.type}\n          </Box>\n          <DropDownIcon style={{ float: 'right' }} />\n        </Box>\n      </Button>\n      <Popover\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\n        onClose={close}\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl as any}\n      >\n        {options.map(option => {\n          return (\n            <MenuItem\n              onClick={() => {\n                close()\n                props.onChange(option)\n              }}\n              key={option}\n              value={option}\n            >\n              {aliases ? aliases.get(option) || option : option}\n            </MenuItem>\n          )\n        })}\n      </Popover>\n    </React.Fragment>\n  )\n}\n\nexport default ComparatorDropdown\ntry {\n    // @ts-ignore\n    comparatordropdown.displayName = \"comparatordropdown\";\n    // @ts-ignore\n    comparatordropdown.__docgenInfo = { \"description\": \"\", \"displayName\": \"comparatordropdown\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter/comparator-dropdown.tsx#comparatordropdown\"] = { docgenInfo: comparatordropdown.__docgenInfo, name: \"comparatordropdown\", path: \"src/main/webapp/query-filters/filter/comparator-dropdown.tsx#comparatordropdown\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export type AttributeDefinition = {\n  id: string\n  enums: string[]\n  type:\n    | 'STRING'\n    | 'XML'\n    | 'DATE'\n    | 'LOCATION'\n    | 'GEOMETRY'\n    | 'BOOLEAN'\n    | 'INTEGER'\n    | 'SHORT'\n    | 'LONG'\n    | 'FLOAT'\n    | 'DOUBLE'\n}\n\nexport const sampleAttributeDefinitions = [\n  {\n    type: 'XML',\n    enums: [],\n    id: 'metadata',\n  },\n  {\n    type: 'BINARY',\n    enums: [],\n    id: 'thumbnail',\n  },\n  {\n    type: 'BOOLEAN',\n    enums: [],\n    id: 'phonetics',\n  },\n  {\n    type: 'DATE',\n    enums: [],\n    id: 'created',\n  },\n  {\n    type: 'DOUBLE',\n    enums: [],\n    id: 'media.bit.rate',\n  },\n  {\n    type: 'INTEGER',\n    enums: [],\n    id: 'media.width-pixels',\n  },\n  {\n    type: 'LONG',\n    enums: [],\n    id: 'ext.population',\n  },\n  {\n    type: 'GEOMETRY',\n    enums: [],\n    id: 'anyGeo',\n  },\n  {\n    type: 'GEOMETRY',\n    enums: [],\n    id: 'location',\n  },\n  {\n    type: 'STRING',\n    enums: ['cat', 'dog', 'catdog'],\n    id: 'topic.vocabulary',\n  },\n]\n","import * as React from 'react'\nimport IndividualFilter, { QueryFilter } from './individual-filter'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Add from '@material-ui/icons/Add'\nimport { defaultFilter, filterHeaderButtonStyle } from './filter-utils'\nimport Operator from './operator'\nimport { isFilterGroup } from '../filter'\nimport { AttributeDefinition } from './dummyDefinitions'\nimport Fab from '@material-ui/core/Fab'\n\nimport Remove from '@material-ui/icons/Remove'\n\nexport type FilterGroupType = {\n  type: string\n  filters: Array<FilterGroupType | QueryFilter>\n}\n\nexport type FilterGroupProps = {\n  limitDepth?: number // Used to limit number of nested groups\n  editing?: boolean\n  onChange: (value: FilterGroupType) => void\n  onRemove?: () => void\n  attributeDefinitions?: AttributeDefinition[]\n  filter: FilterGroupType\n}\n\n//TODO: Remove this once we know how we want groups to look\nconst withRemoveButton = (Component: any) => {\n  return (props: any) => {\n    return typeof props.onRemove === 'function' ? (\n      <Box style={{ display: 'flex', alignItems: 'center' }}>\n        <Box style={{ margin: 10 }}>\n          <Fab onClick={() => props.onRemove()} size=\"small\" color=\"secondary\">\n            <Remove />\n          </Fab>\n        </Box>\n        <Component {...props} />\n      </Box>\n    ) : (\n      <Component {...props} />\n    )\n  }\n}\n\nconst withDivider = (Component: any) => {\n  return (props: any) => (\n    <Box style={{ display: 'flex' }}>\n      <Box>\n        <Divider />\n      </Box>\n      <Component {...props} />\n    </Box>\n  )\n}\n\nconst Divider = () => (\n  <Box\n    style={{\n      height: '100%',\n      width: 12,\n      backgroundColor: 'rgba(255, 0, 0, 0.2)',\n      float: 'left',\n      borderRadius: '14px',\n      marginRight: 10,\n    }}\n  />\n)\n\nconst FilterGroup = withRemoveButton(\n  withDivider((props: FilterGroupProps) => {\n    return (\n      <Box>\n        <Header {...props} />\n        <FilterList {...props} />\n      </Box>\n    )\n  })\n)\n\nconst Header = (props: FilterGroupProps) => {\n  const { filter } = props\n  return (\n    <Box display=\"flex\">\n      <Operator\n        onChange={(value: string) => {\n          props.onChange({ ...filter, type: value })\n        }}\n        value={filter.type}\n      />\n      <Button\n        onClick={() => {\n          const filters = filter.filters.slice()\n          filters.push({ ...defaultFilter })\n          props.onChange({ ...filter, filters })\n        }}\n        style={filterHeaderButtonStyle}\n        variant=\"outlined\"\n        startIcon={<Add fontSize=\"small\" />}\n      >\n        <Typography noWrap>Add Field</Typography>\n      </Button>\n      {(props.limitDepth === undefined || props.limitDepth !== 0) && (\n        <Button\n          style={filterHeaderButtonStyle}\n          onClick={() => {\n            const filters = filter.filters.slice()\n            filters.push({ type: 'AND', filters: [{ ...defaultFilter }] })\n            props.onChange({ ...filter, filters })\n          }}\n          variant=\"outlined\"\n          startIcon={<Add fontSize=\"small\" />}\n        >\n          <Typography noWrap>Add Group</Typography>\n        </Button>\n      )}\n    </Box>\n  )\n}\n\nconst FilterList = (props: FilterGroupProps) => {\n  const { filter } = props\n  return (\n    <Box>\n      {filter.filters.map((subfilter, i) => {\n        const onChange = (value: FilterGroupType | QueryFilter) => {\n          const filters = filter.filters.slice()\n          filters[i] = value\n          props.onChange({ ...filter, filters })\n        }\n        const onRemove = () => {\n          const filters = filter.filters.slice()\n          filters.splice(i, 1)\n          props.onChange({\n            ...filter,\n            filters,\n          })\n        }\n        if (isFilterGroup(subfilter)) {\n          return (\n            <Box key={i} style={{ margin: 10, marginLeft: 0 }}>\n              <FilterGroup\n                limitDepth={\n                  props.limitDepth !== undefined\n                    ? props.limitDepth - 1\n                    : undefined\n                }\n                filter={subfilter}\n                editing={props.editing}\n                onChange={onChange}\n                onRemove={onRemove}\n                attributeDefinitions={props.attributeDefinitions}\n              />\n            </Box>\n          )\n        } else {\n          return (\n            <Box key={i} style={{ margin: 10, marginLeft: 0 }}>\n              <IndividualFilter\n                filter={subfilter}\n                editing={props.editing}\n                onChange={onChange}\n                onRemove={onRemove}\n                attributeDefinitions={props.attributeDefinitions}\n              />\n            </Box>\n          )\n        }\n      })}\n    </Box>\n  )\n}\n\nexport default FilterGroup\ntry {\n    // @ts-ignore\n    filtergroup.displayName = \"filtergroup\";\n    // @ts-ignore\n    filtergroup.__docgenInfo = { \"description\": \"\", \"displayName\": \"filtergroup\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter/filter-group.tsx#filtergroup\"] = { docgenInfo: filtergroup.__docgenInfo, name: \"filtergroup\", path: \"src/main/webapp/query-filters/filter/filter-group.tsx#filtergroup\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { getDefaultValue } from './filter-utils'\nimport { getIn } from 'immutable'\n\nexport const deserialize = (filter: any, attributeDefinitions: any) => {\n  const deserializedFilter = { ...filter }\n  if (typeof filter.property === 'object') {\n    // if the filter is something like NEAR (which maps to a CQL filter function such as 'proximity'),\n    // there is an enclosing filter that creates the necessary '= TRUE' predicate, and the 'property'\n    // attribute is what actually contains that proximity() call.\n    const { filterFunctionName, params } = filter.property\n    if (filterFunctionName !== 'proximity') {\n      throw new Error(\n        'Unsupported filter function in filter view: ' + filterFunctionName\n      )\n    }\n    const [property, distance, value] = params\n    deserializedFilter.property = property\n    deserializedFilter.type = 'NEAR'\n    deserializedFilter.value = { distance, value }\n  }\n\n  if (filter.type === 'BETWEEN') {\n    deserializedFilter.value = {\n      lower: filter.lowerBoundary,\n      upper: filter.upperBoundary,\n    }\n  }\n  if (filter.type === 'IS NULL' || filter.value == undefined) {\n    deserializedFilter.value = getDefaultValue(\n      getIn(\n        attributeDefinitions.find(\n          (metacardType: any) => metacardType.id === filter.property\n        ),\n        ['type'],\n        'STRING'\n      )\n    )\n  }\n  return deserializedFilter\n}\nconst generateFilterFunction = (filterFunctionName: string, params: any) => {\n  return {\n    type: '=',\n    value: true,\n    property: {\n      type: 'FILTER_FUNCTION',\n      filterFunctionName,\n      params,\n    },\n  }\n}\n\nconst generateIsEmptyFilter = (property: string) => {\n  return {\n    type: 'IS NULL',\n    property,\n    value: null,\n  }\n}\n\nexport const serialize = (filter: any, attributeDefinitions: any) => {\n  switch (filter.type) {\n    case 'NEAR':\n      return generateFilterFunction('proximity', [\n        filter.property,\n        filter.value.distance,\n        filter.value.value,\n      ])\n    case 'IS NULL':\n      return generateIsEmptyFilter(filter.property)\n  }\n\n  switch (\n    getIn(\n      attributeDefinitions.find(\n        (metacardType: any) => metacardType.id === filter.property\n      ),\n      ['type'],\n      undefined\n    )\n  ) {\n    case 'FLOAT':\n    case 'DOUBLE':\n      if (filter.type === 'BETWEEN') {\n        return {\n          ...filter,\n          lowerBoundary:\n            filter.value.lower === '' ? '' : parseFloat(filter.value.lower),\n          upperBoundary:\n            filter.value.upper === '' ? '' : parseFloat(filter.value.upper),\n        }\n      }\n      return {\n        ...filter,\n        value: filter.value === '' ? '' : parseFloat(filter.value),\n      }\n    case 'INTEGER':\n    case 'LONG':\n    case 'SHORT':\n      if (filter.type === 'BETWEEN') {\n        return {\n          ...filter,\n          lowerBoundary:\n            filter.value.lower === '' ? '' : parseInt(filter.value.lower),\n          upperBoundary:\n            filter.value.upper === '' ? '' : parseInt(filter.value.upper),\n        }\n      }\n      return {\n        ...filter,\n        value: filter.value === '' ? '' : parseInt(filter.value),\n      }\n  }\n  return { ...filter }\n}\n","import { AttributeDefinition } from './dummyDefinitions'\n\nexport const defaultFilter = {\n  property: 'anyText',\n  type: 'ILIKE',\n  value: '',\n}\n\nexport const filterHeaderButtonStyle = {\n  margin: 'auto',\n  marginLeft: 0,\n  marginRight: 10,\n}\n\nexport const getDefaultValue = (\n  type: AttributeDefinition['type'] | undefined\n) => {\n  switch (type) {\n    case 'LOCATION':\n      return null\n    case 'DATE':\n      return ''\n    case 'BOOLEAN':\n      return false\n    case 'STRING':\n      return ''\n    case 'INTEGER':\n    case 'SHORT':\n    case 'LONG':\n      return '0'\n    case 'FLOAT':\n    case 'DOUBLE':\n      return '0.0'\n    default:\n      return ''\n  }\n}\ntry {\n    // @ts-ignore\n    getDefaultValue.displayName = \"getDefaultValue\";\n    // @ts-ignore\n    getDefaultValue.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDefaultValue\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter/filter-utils.tsx#getDefaultValue\"] = { docgenInfo: getDefaultValue.__docgenInfo, name: \"getDefaultValue\", path: \"src/main/webapp/query-filters/filter/filter-utils.tsx#getDefaultValue\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport IndividualFilter, {\n  QueryFilter,\n  QueryFilterProps,\n} from './individual-filter'\nimport FilterGroup, { FilterGroupType, FilterGroupProps } from './filter-group'\nexport { makeDefaultSearchGeo, makeSearchGeoId } from './search-geo-factory'\n\nexport const isFilterGroup = (\n  object: QueryFilter | FilterGroupType\n): object is FilterGroupType =>\n  (object as FilterGroupType).filters !== undefined\n\ntype FilterProps = FilterGroupProps | QueryFilterProps\n\nconst Filter = (props: FilterProps) => {\n  const Component = isFilterGroup(props.filter) ? FilterGroup : IndividualFilter\n  return <Component {...props} />\n}\n\nexport default Filter\ntry {\n    // @ts-ignore\n    isFilterGroup.displayName = \"isFilterGroup\";\n    // @ts-ignore\n    isFilterGroup.__docgenInfo = { \"description\": \"\", \"displayName\": \"isFilterGroup\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter/index.tsx#isFilterGroup\"] = { docgenInfo: isFilterGroup.__docgenInfo, name: \"isFilterGroup\", path: \"src/main/webapp/query-filters/filter/index.tsx#isFilterGroup\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    filter.displayName = \"filter\";\n    // @ts-ignore\n    filter.__docgenInfo = { \"description\": \"\", \"displayName\": \"filter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter/index.tsx#filter\"] = { docgenInfo: filter.__docgenInfo, name: \"filter\", path: \"src/main/webapp/query-filters/filter/index.tsx#filter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport TextFilter from '../filter-input/text-filter'\nimport LocationFilter from '../filter-input/location-filter'\nimport DateFilter from '../filter-input/date-filter'\nimport BooleanFilter from '../filter-input/boolean-filter'\nimport NumberFilter from '../filter-input/number-filter'\n// const FilterCard = require('../../basic-search').FilterCard\n// @ts-ignore require not working in storybook for some reason\nimport { FilterCard } from '../../basic-search'\nimport { getIn } from 'immutable'\nimport {\n  AttributeDefinition,\n  sampleAttributeDefinitions,\n} from './dummyDefinitions'\nimport { deserialize, serialize } from './filter-serialization'\nimport { GeometryJSON } from 'geospatialdraw/bin/geometry/geometry'\n\nexport type QueryFilter = {\n  property: string //property name, ex: anyText\n  type: string // cql operator, ex: ILIKE\n  value: any\n  geojson?: GeometryJSON\n  distance?: number //buffer for location filter\n}\nexport type QueryFilterProps = {\n  onChange: (value: QueryFilter) => void\n  onRemove?: () => void\n  editing?: boolean\n  attributeDefinitions?: AttributeDefinition[]\n  filter: QueryFilter\n}\n\nconst Inputs: any = {\n  LOCATION: LocationFilter,\n  GEOMETRY: LocationFilter,\n  DATE: DateFilter,\n  BOOLEAN: BooleanFilter,\n  //Strings\n  STRING: TextFilter,\n  XML: TextFilter,\n  //Numbers\n  FLOAT: NumberFilter,\n  DOUBLE: NumberFilter,\n  INTEGER: NumberFilter,\n  SHORT: NumberFilter,\n  LONG: NumberFilter,\n}\n\nconst withSerialization = (Component: any) => {\n  return (props: any) => {\n    const { attributeDefinitions = sampleAttributeDefinitions } = props\n    return (\n      <Component\n        {...props}\n        filter={deserialize(props.filter, attributeDefinitions)}\n        onChange={(value: any) => {\n          props.onChange(serialize(value, attributeDefinitions))\n        }}\n      />\n    )\n  }\n}\n\nexport default withSerialization((props: QueryFilterProps) => {\n  const { attributeDefinitions = sampleAttributeDefinitions, filter } = props\n\n  const getType = (property: string) => {\n    return getIn(\n      attributeDefinitions.find(definition => definition.id === property),\n      ['type'],\n      'STRING'\n    )\n  }\n  const type = getType(filter.property)\n  const Component = Inputs[type] || TextFilter\n  return (\n    <FilterCard label={filter.property} onRemove={props.onRemove}>\n      <Component {...props} />\n    </FilterCard>\n  )\n})\ntry {\n    // @ts-ignore\n    individualfilter.displayName = \"individualfilter\";\n    // @ts-ignore\n    individualfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"individualfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter/individual-filter.tsx#individualfilter\"] = { docgenInfo: individualfilter.__docgenInfo, name: \"individualfilter\", path: \"src/main/webapp/query-filters/filter/individual-filter.tsx#individualfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport useAnchorEl from '../../react-hooks/use-anchor-el'\nimport Button from '@material-ui/core/Button'\nimport Popover from '@material-ui/core/Popover'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\nimport { filterHeaderButtonStyle } from './filter-utils'\n\nconst operators = ['AND', 'OR', 'NOT AND', 'NOT OR']\n\ntype OperatorProps = {\n  value: string\n  onChange: (value: string) => void\n}\n\nconst Operator = (props: OperatorProps) => {\n  const [anchorEl, open, close] = useAnchorEl()\n  return (\n    <React.Fragment>\n      <Button\n        style={filterHeaderButtonStyle}\n        variant=\"outlined\"\n        onClick={open as any}\n        endIcon={<ArrowDropDown />}\n      >\n        <Typography noWrap>{props.value}</Typography>\n      </Button>\n      <Popover\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\n        onClose={close}\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl as any}\n      >\n        {operators.map(operator => {\n          return (\n            <MenuItem\n              onClick={() => {\n                close()\n                props.onChange(operator)\n              }}\n              key={operator}\n            >\n              {operator}\n            </MenuItem>\n          )\n        })}\n      </Popover>\n    </React.Fragment>\n  )\n}\n\nexport default Operator\ntry {\n    // @ts-ignore\n    operator.displayName = \"operator\";\n    // @ts-ignore\n    operator.__docgenInfo = { \"description\": \"\", \"displayName\": \"operator\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-filters/filter/operator.tsx#operator\"] = { docgenInfo: operator.__docgenInfo, name: \"operator\", path: \"src/main/webapp/query-filters/filter/operator.tsx#operator\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { makeEmptyGeometry } from 'geospatialdraw/bin/geometry/utilities'\nimport { LINE } from 'geospatialdraw/bin/shapes/shape'\n\nexport const makeSearchGeoId = (): string => `search-geo-${Math.random()}`\nexport const makeDefaultSearchGeo = () =>\n  makeEmptyGeometry(makeSearchGeoId(), LINE)\n","const { storiesOf } = require('../@storybook/react')\nimport * as React from 'react'\nimport { action } from '@storybook/addon-actions'\nimport { number, boolean } from '@storybook/addon-knobs'\nimport { useState } from 'react'\nimport Filter from './filter'\n\nconst stories = storiesOf('Query Filters', module)\n\nconst baseFilter = {\n  property: 'created',\n  type: 'DURING',\n  value: '2019-10-13T17:36:00.000Z/2019-10-30T17:36:00.000Z',\n}\n\nconst baseFilterGroup = {\n  type: 'AND',\n  filters: [baseFilter],\n}\n\nconst nearFilter = {\n  type: '=',\n  value: true,\n  property: {\n    type: 'FILTER_FUNCTION',\n    filterFunctionName: 'proximity',\n    params: ['topic.vocabulary', '2', 'hello there'],\n  },\n}\n\nconst rangeFilter = {\n  type: 'BETWEEN',\n  property: 'ext.population',\n  value: '',\n  lowerBoundary: 1,\n  upperBoundary: 5,\n}\n\nconst deserializedFilters = {\n  type: 'OR',\n  filters: [nearFilter, rangeFilter],\n}\n\nstories.add('basic', () => {\n  const [filter, setFilter]: any = useState(baseFilterGroup)\n  const editing = boolean('Editing', true)\n  return (\n    <Filter\n      limitDepth={number('Nesting Depth', 1)}\n      filter={filter}\n      onChange={(value: any) => {\n        setFilter(value)\n        action('onChange')(value)\n      }}\n      editing={editing}\n    />\n  )\n})\n\nstories.add('with deserialized filters', () => {\n  const [filter, setFilter]: any = useState(deserializedFilters)\n  const editing = boolean('Editing', true)\n  return (\n    <Filter\n      limitDepth={number('Nesting Depth', 1)}\n      filter={filter}\n      onChange={(value: any) => {\n        setFilter(value)\n        action('onChange')(value)\n      }}\n      editing={editing}\n    />\n  )\n})\n\nstories.add('single filter', () => {\n  const [filter, setFilter]: any = useState(nearFilter)\n  const editing = boolean('Editing', true)\n  return (\n    <Filter\n      filter={filter}\n      onChange={(value: any) => {\n        setFilter(value)\n        action('onChange')(value)\n      }}\n      editing={editing}\n    />\n  )\n})\n","import React from 'react'\n\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled'\n\nimport Typography from '@material-ui/core/Typography'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport Grid from '@material-ui/core/Grid'\n\nconst formatStatus = (status = 'Unknown', info = {}) => {\n  if (status === 'source.canceled' || status === 'source.error') {\n    return (\n      <Typography variant=\"subtitle2\" color=\"secondary\">\n        <Grid container alignItems=\"center\" spacing={1}>\n          <Grid item>\n            <ErrorIcon style={{ height: '0.8em' }} />\n          </Grid>\n          <Grid item>{info.message || status}</Grid>\n        </Grid>\n      </Typography>\n    )\n  }\n\n  if (status === 'source.success') {\n    const { hits = '', count = '', elapsed = ' ' } = info\n    return (\n      <Typography variant=\"subtitle2\" color=\"textSecondary\">\n        Available: {count}, Possible: {hits}, Time: {elapsed}\n        ms\n      </Typography>\n    )\n  }\n\n  return (\n    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n      {status}\n    </Typography>\n  )\n}\n\nconst Cancel = props => {\n  const { onCancel } = props\n  return (\n    <div style={{ position: 'relative' }}>\n      <IconButton\n        key=\"cancel\"\n        title=\"Cancel\"\n        color=\"secondary\"\n        onClick={onCancel}\n      >\n        <CancelIcon />\n      </IconButton>\n      <div\n        style={{\n          zIndex: -1,\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <CircularProgress size={30} />\n      </div>\n    </div>\n  )\n}\n\nconst Run = props => {\n  const { onRun } = props\n\n  return (\n    <IconButton key=\"run\" title=\"Run\" color=\"primary\" onClick={onRun}>\n      <PlayCircleFilledIcon />\n    </IconButton>\n  )\n}\n\nconst SourceStatus = props => {\n  const {\n    type,\n    info,\n    source,\n\n    onRun,\n    onCancel,\n  } = props\n\n  return (\n    <ListItem>\n      <ListItemText primary={source} secondary={formatStatus(type, info)} />\n      <ListItemSecondaryAction>\n        {type === 'source.pending' ? (\n          <Cancel onCancel={() => onCancel([source])} />\n        ) : (\n          <Run onRun={() => onRun([source])} />\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n\nconst QueryStatus = props => {\n  const { sources = {} } = props\n\n  return (\n    <List>\n      {Object.keys(sources).map(source => {\n        const { type, info } = sources[source]\n        return (\n          <SourceStatus\n            key={source}\n            source={source}\n            info={info}\n            type={type}\n            onRun={props.onRun}\n            onCancel={props.onCancel}\n          />\n        )\n      })}\n    </List>\n  )\n}\n\nexport default QueryStatus\n","import React from 'react'\nimport { storiesOf } from './@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nconst stories = storiesOf('QueryStatus', module)\n\nimport QueryStatus from './query-status'\n\nstories.add('one of each', () => {\n  const info = {\n    hits: 10,\n    count: 5,\n    elapsed: 100,\n    id: 'ddf.distribution',\n    successful: true,\n  }\n\n  const error = new Error('Network Error')\n\n  const sources = {\n    'ddf.success': { type: 'source.success', info },\n    'ddf.pending': { type: 'source.pending' },\n    'ddf.canceled': { type: 'source.canceled' },\n    'ddf.error': { type: 'source.error', info: error },\n  }\n\n  return (\n    <QueryStatus\n      sources={sources}\n      onRun={action('onRun')}\n      onCancel={action('onCancel')}\n    />\n  )\n})\n","export { Layout, Provider, DragSource, AddConfig } from './react-golden-layout'\n","import React, { Fragment, useRef, useState, useEffect, useContext } from 'react'\nimport ReactDOM from 'react-dom'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport GoldenLayout from 'golden-layout'\n\nimport 'golden-layout/src/css/goldenlayout-base.css'\nimport 'golden-layout/src/css/goldenlayout-light-theme.css'\n\nconst Context = React.createContext()\n\nconst useLayout = () => {\n  const value = useContext(Context)\n\n  const [layout, setLayout] = value\n\n  return { layout, setLayout }\n}\n\nexport const Provider = ({ children }) => {\n  const value = useState(null)\n\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n\nexport const AddConfig = ({ children, config }) => {\n  const { layout } = useLayout()\n\n  const onClick = () => {\n    if (layout === null) {\n      return\n    }\n\n    if (layout.root.contentItems.length > 0) {\n      layout.root.contentItems[0].addChild(config)\n    } else {\n      layout.root.addChild(config)\n    }\n  }\n\n  return <div onClick={onClick}>{children}</div>\n}\n\nexport const DragSource = ({ children, config }) => {\n  const source = useRef(null)\n\n  const { layout } = useLayout()\n\n  useEffect(\n    () => {\n      if (source === null) {\n        return\n      }\n\n      if (layout === null) {\n        return\n      }\n\n      layout.createDragSource(source.current, config)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [source, layout]\n  )\n\n  return <div ref={source}>{children}</div>\n}\n\nconst useStyles = makeStyles(theme => {\n  const { typography, palette } = theme\n\n  const background = palette.background.default\n  const text = palette.text.secondary\n  const primary = palette.primary.main\n  const { fontFamily } = typography\n\n  const root = height => {\n    return {\n      '& .lm_content': {\n        background,\n        border: `1px solid ${palette.divider}`,\n      },\n      '& .lm_splitter:hover': {\n        background: palette.divider,\n      },\n      '& .lm_goldenlayout': {\n        background,\n      },\n      '& .lm_header': {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n\n        '& .lm_controls': {\n          position: 'static',\n          marginRight: height / 2,\n        },\n\n        '& .lm_tabs': {\n          height: '100%',\n          position: 'static',\n\n          '& .lm_title': {\n            fontFamily,\n            color: text,\n            marginRight: height / 2,\n            fontSize: height / 3,\n          },\n\n          '& .lm_tab': {\n            height: 'calc(100% - 2px)',\n            background,\n            padding: '0 20px',\n            margin: 0,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            boxShadow: 'none',\n          },\n\n          '& .lm_tab.lm_active ': {\n            borderBottom: `2px solid ${primary}`,\n            '& .lm_title': {\n              color: primary,\n            },\n          },\n\n          '& .lm_close_tab': {\n            position: 'static !important',\n          },\n        },\n      },\n    }\n  }\n\n  return { root }\n})\n\nexport const Layout = props => {\n  const container = useRef(null)\n  const [regions, setRegions] = useState([])\n  const { setLayout } = useLayout()\n  const { config, components, onChange } = props\n  /* eslint-disable no-unused-vars */\n  const [dimensions, setDimensions] = useState(null)\n  /* eslint-enable no-unused-vars */\n  const height = 48\n  const { root } = useStyles(height)\n\n  useEffect(() => {\n    if (container.current === null) {\n      return\n    }\n\n    const layout = new GoldenLayout(\n      {\n        settings: {\n          showPopoutIcon: false,\n          responsiveMode: 'none',\n        },\n        dimensions: {\n          headerHeight: height,\n          dragProxyWidth: 300,\n          dragProxyHeight: 200,\n        },\n        labels: {\n          close: 'close',\n          maximise: 'maximize',\n          minimise: 'minimize',\n          popout: 'open in new window',\n          popin: 'pop in',\n          tabDropdown: 'additional tabs',\n        },\n        ...config,\n      },\n      container.current\n    )\n\n    setLayout(layout)\n\n    const onResize = () => {\n      layout.updateSize()\n    }\n\n    window.addEventListener('resize', onResize)\n\n    layout.on('initialised', () => {\n      layout.unbind('initialised')\n      setTimeout(() => {\n        layout.on('stateChanged', () => {\n          onChange(layout.toConfig())\n        })\n      }, 0)\n    })\n    const updateContainerSize = () => {\n      if (container.current) {\n        const width = container.current.offsetWidth\n        const height = container.current.offsetHeight\n        setDimensions({ width, height })\n      }\n    }\n    layout.on('componentCreated', component => {\n      if (component.container) {\n        component.container.on('resize', updateContainerSize)\n      }\n    })\n\n    // cleanup local state when items removed from golden layout\n    layout.on('itemDestroyed', component => {\n      if (!component.container) {\n        return\n      }\n      const el = component.container.getElement().get(0)\n      setRegions(regions => {\n        return regions.filter(region => {\n          return region.el !== el\n        })\n      })\n    })\n\n    Object.keys(components).forEach(key => {\n      layout.registerComponent(key, container => {\n        const el = container.getElement().get(0)\n        setRegions(regions => {\n          return regions.concat({ el, key })\n        })\n      })\n    })\n\n    layout.init()\n\n    return () => {\n      layout.destroy()\n      window.removeEventListener('resize', onResize)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Fragment>\n      <div\n        className={root}\n        style={{ height: '100%', width: '100%' }}\n        ref={container}\n      />\n      {regions.map(region => {\n        const { key, el } = region\n        const Component = components[key]\n        return ReactDOM.createPortal(<Component />, el)\n      })}\n    </Fragment>\n  )\n}\n","import React from 'react'\n\nimport { storiesOf } from '../@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nimport { Provider, Layout } from './react-golden-layout'\n\nconst stories = storiesOf('ReactGoldenLayout', module)\n\nstories.add('basic', () => {\n  const Test = () => 'Hi'\n\n  const config = {\n    content: [\n      {\n        type: 'row',\n        content: [\n          {\n            type: 'component',\n            title: 'A',\n            componentName: 'test-component',\n          },\n          {\n            type: 'column',\n            content: [\n              {\n                type: 'component',\n                title: 'B',\n                componentName: 'test-component',\n              },\n              {\n                type: 'component',\n                title: 'C',\n                componentName: 'test-component',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  }\n\n  const components = {\n    'test-component': Test,\n  }\n\n  return (\n    <Provider>\n      <div\n        style={{ height: 'calc(100vh - 16px)', width: 'calc(100vw - 16px)' }}\n      >\n        <Layout\n          config={config}\n          components={components}\n          onChange={action('onChange')}\n        />\n      </div>\n    </Provider>\n  )\n})\n","export { default as useKeyPressed } from './use-key-pressed'\nexport { default as useUndoState } from './use-undo-state'\nexport { default as useSelectionInterface } from './use-selection-interface'\nexport { default as useQueryExecutor } from './use-query-executor'\nexport { default as useApolloFallback } from './use-apollo-fallback'\nexport { default as useDrawInterface } from './use-draw-interface'\n","import { useState } from 'react'\n\n//Used as shorthand for anchorEl logic on Material UI Menus/Popovers\nconst useAnchorEl = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open: any = (event: any) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const close = () => {\n    setAnchorEl(null)\n  }\n  return [anchorEl, open, close]\n}\n\nexport default useAnchorEl\n","import { useApolloClient } from '@apollo/react-hooks'\n\nconst useApolloFallback = (container, component) => {\n  try {\n    useApolloClient()\n    return container\n  } catch (e) {\n    return component\n  }\n}\n\nexport default useApolloFallback\n","import { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { getIn } from 'immutable'\n\nconst query = gql`\n  query MetacardTypes {\n    metacardTypes {\n      id\n      type\n      enums\n    }\n  }\n`\n\nexport default () => {\n  const { data, ...rest } = useQuery(query)\n  const attributeDefinitions = getIn(data, ['metacardTypes'], [])\n\n  return { attributeDefinitions, ...rest }\n}\n","import React, { useState, useContext } from 'react'\n\nconst DrawContext = React.createContext()\n\nexport const DrawProvider = ({ children }) => {\n  const value = useState({\n    geo: null,\n    active: false,\n    shape: 'Polygon',\n  })\n\n  return <DrawContext.Provider value={value}>{children}</DrawContext.Provider>\n}\n\nexport default () => useContext(DrawContext)\n","import { useEffect, useState } from 'react'\n\nconst useKeyPressed = aKey => {\n  const [pressed, setPressed] = useState(false)\n\n  useEffect(\n    () => {\n      const onDown = ({ key }) => {\n        if (key === aKey) {\n          setPressed(true)\n        }\n      }\n\n      const onUp = ({ key }) => {\n        if (key === aKey) {\n          setPressed(false)\n        }\n      }\n\n      document.addEventListener('keydown', onDown)\n      document.addEventListener('keyup', onUp)\n      return () => {\n        document.removeEventListener('keydown', onDown)\n        document.removeEventListener('keyup', onUp)\n      }\n    },\n    [aKey]\n  )\n\n  return pressed\n}\n\nexport default useKeyPressed\n","import { useCallback, useReducer } from 'react'\n\nimport { Map } from 'immutable'\n\nimport gql from 'graphql-tag'\nimport { useApolloClient } from '@apollo/react-hooks'\n\nconst status = (state, action) => {\n  switch (action.type) {\n    case 'clear':\n      return state.clear()\n    case 'start':\n      return state.merge(action.status)\n    case 'success':\n      return state.set(action.src, {\n        type: 'source.success',\n        info: action.status,\n      })\n    case 'cancel':\n      return state.set(action.src, {\n        type: 'source.canceled',\n      })\n    case 'error':\n      return state.set(action.src, {\n        type: 'source.error',\n        info: {\n          message: 'source error',\n        },\n      })\n    default:\n      return state\n  }\n}\n\nconst results = (state, action) => {\n  switch (action.type) {\n    case 'clear':\n      return []\n    case 'success':\n      return action.results\n    default:\n      return state\n  }\n}\n\nconst reducer = (state, action) => {\n  if (state.status.get(action.src, { type: '' }).type === 'source.canceled') {\n    return state\n  }\n\n  return {\n    status: status(state.status, action),\n    results: results(state.results, action),\n  }\n}\n\nconst simpleSearch = gql`\n  query SimpleSearch($filterTree: Json!, $settings: QuerySettingsInput) {\n    metacards(filterTree: $filterTree, settings: $settings) {\n      results {\n        actions {\n          id\n          url\n          title\n          displayName\n        }\n        metacard\n      }\n      status {\n        count\n        hits\n        elapsed\n      }\n    }\n  }\n`\n\nconst useQueryExecutor = () => {\n  const client = useApolloClient()\n\n  const [state, dispatch] = useReducer(reducer, {\n    results: [],\n    status: Map(),\n  })\n\n  const onError = useCallback(\n    src => {\n      dispatch({ type: 'error', src })\n    },\n    [dispatch]\n  )\n\n  const onClear = useCallback(\n    () => {\n      dispatch({ type: 'clear' })\n    },\n    [dispatch]\n  )\n\n  const onCancel = useCallback(\n    src => {\n      dispatch({ type: 'cancel', src })\n    },\n    [dispatch]\n  )\n\n  const onSuccess = useCallback(\n    (src, data) => {\n      dispatch({\n        type: 'success',\n        src,\n        status: data.metacards.status,\n        results: data.metacards.results,\n      })\n    },\n    [dispatch]\n  )\n\n  const onSearch = useCallback(\n    async query => {\n      const { filterTree, srcs, ...settings } = query\n\n      const status = srcs.reduce((status, src) => {\n        return status.set(src, { type: 'source.pending' })\n      }, Map())\n\n      dispatch({ type: 'start', status })\n\n      srcs.map(async src => {\n        try {\n          const { data } = await client.query({\n            query: simpleSearch,\n            variables: {\n              filterTree,\n              settings: { src, ...settings },\n            },\n            fetchPolicy: 'network-only',\n          })\n          onSuccess(src, data)\n        } catch (e) {\n          onError(src)\n        }\n      })\n    },\n    [client, onSuccess, onError]\n  )\n\n  return {\n    results: state.results,\n    status: state.status.toJSON(),\n    onSearch,\n    onCancel,\n    onClear,\n  }\n}\n\nexport default useQueryExecutor\n","import React, { useState, useContext } from 'react'\nimport { Set } from 'immutable'\n\nconst SelectionContext = React.createContext()\n\nexport const SelectionProvider = ({ children }) => {\n  const value = useState(Set())\n\n  return (\n    <SelectionContext.Provider value={value}>\n      {children}\n    </SelectionContext.Provider>\n  )\n}\n\nexport default () => useContext(SelectionContext)\n","import { useState, useCallback } from 'react'\nimport { Map, List, is } from 'immutable'\n\nconst useUndoState = initialState => {\n  const [state, setState] = useState(() =>\n    Map({\n      current: 0,\n      history: List([initialState]),\n    })\n  )\n\n  const history = state.get('history')\n  const current = state.get('current')\n\n  const currentState = history.get(current)\n\n  const setCurrentState = useCallback(\n    nextState => {\n      // prevent the same history item from being pushed to the stack twice\n      if (!is(currentState, nextState)) {\n        const update = state\n          .update('current', current => current + 1)\n          .update('history', history =>\n            history.slice(0, state.get('current') + 1).push(nextState)\n          )\n\n        setState(update)\n      }\n    },\n    [state, setState, currentState]\n  )\n\n  const canUndo = current > 0\n\n  const onUndo = useCallback(\n    () => {\n      if (canUndo) {\n        setState(state.update('current', i => i - 1))\n      }\n    },\n    [state, setState, canUndo]\n  )\n\n  const canRedo = current < history.size - 1\n\n  const onRedo = useCallback(\n    () => {\n      if (canRedo) {\n        setState(state.update('current', i => i + 1))\n      }\n    },\n    [state, setState, canRedo]\n  )\n\n  return {\n    state: currentState,\n    setState: setCurrentState,\n    canUndo,\n    onUndo,\n    canRedo,\n    onRedo,\n  }\n}\n\nexport default useUndoState\n","import React, { memo, useState } from 'react'\n\nimport { Set } from 'immutable'\nimport { useUndoState } from '../react-hooks'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n\nimport TransferList from './transfer-list'\n\nconst MemoizedTransferList = memo(TransferList)\n\nconst validate = (form = {}) => {\n  const { title, description } = form\n\n  const attributes = Set(form.attributes)\n\n  const errors = {}\n\n  if (typeof title !== 'string') {\n    errors.title = 'Title must be string'\n  } else if (title.trim() === '') {\n    errors.title = 'Title must not be empty'\n  }\n\n  if (description !== undefined && typeof description !== 'string') {\n    errors.description = 'Description must be string'\n  }\n\n  if (attributes.isEmpty()) {\n    errors.attributes = 'Attributes cannot be empty'\n  }\n\n  return errors\n}\n\nexport const ResultForms = props => {\n  const { form = {}, attributes = [], onCancel, onSave } = props\n\n  const { state, setState, ...rest } = useUndoState(Set(form.attributes))\n\n  const [title, setTitle] = useState(form.title || '')\n  const [description, setDescription] = useState(form.description || '')\n\n  const errors = validate({ title, description, attributes: state })\n\n  const [submitted, setSubmitted] = useState(false)\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        maxHeight: '100%',\n        padding: 20,\n        boxSizing: 'border-box',\n        ...props.style,\n      }}\n    >\n      <TextField\n        autoFocus\n        required\n        fullWidth\n        label=\"Title\"\n        variant=\"outlined\"\n        style={{ marginBottom: 20 }}\n        value={title}\n        error={submitted && errors.title !== undefined}\n        helperText={submitted ? errors.title : undefined}\n        onChange={e => setTitle(e.target.value)}\n      />\n      <TextField\n        fullWidth\n        rows={2}\n        multiline\n        variant=\"outlined\"\n        label=\"Description\"\n        style={{ marginBottom: 30 }}\n        value={description}\n        onChange={e => setDescription(e.target.value)}\n      />\n\n      <MemoizedTransferList\n        state={state}\n        setState={setState}\n        label=\"Attributes\"\n        required\n        attributes={attributes}\n        error={submitted && errors.attributes !== undefined}\n        helperText={submitted ? errors.attributes : undefined}\n        {...rest}\n      />\n\n      <div\n        style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 20 }}\n      >\n        <Button variant=\"outlined\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n        <div style={{ width: 10, display: 'inline-block' }} />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            if (Object.keys(errors).length === 0) {\n              const resultForm = {\n                id: form.id,\n                title,\n                description,\n                attributes: state.toJSON(),\n              }\n              onSave(resultForm)\n            } else {\n              setSubmitted(true)\n            }\n          }}\n        >\n          Save\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default ResultForms\n","import React, { useState } from 'react'\nimport { storiesOf } from '../@storybook/react'\nimport { number, boolean, text } from '@connexta/ace/@storybook/addon-knobs'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nconst stories = storiesOf('ResultForms', module)\n\nimport { Set } from 'immutable'\nimport { useUndoState } from '../react-hooks'\n\nimport TransferList from './transfer-list'\nimport { ResultForms } from './result-forms'\nimport { Route, Editor } from './route'\n\nconst getAttributes = total => {\n  const attributes = []\n\n  for (let i = 0; i < total; i++) {\n    attributes.push(`Attribute #${i}`)\n  }\n\n  return attributes\n}\n\nstories.add('transfer list', () => {\n  const props = useUndoState(Set())\n\n  const total = number('Number of Attributes', 100)\n  const required = boolean('Required', false)\n  const error = boolean('Error', false)\n  const label = text('Label', 'Label')\n  const helperText = text('Helper Text', 'Helper text')\n\n  const attributes = getAttributes(total)\n\n  return (\n    <div style={{ height: 'calc(100vh - 16px)' }}>\n      <TransferList\n        label={label}\n        required={required}\n        helperText={helperText}\n        error={error}\n        attributes={attributes}\n        {...props}\n      />\n    </div>\n  )\n})\n\nstories.add('editor', () => {\n  const total = number('Number of Attributes', 100)\n\n  const attributes = getAttributes(total)\n\n  const resultForm = {\n    title: 'Example Title',\n    description: 'Example Description',\n    attributes: ['id'],\n  }\n\n  const fillForm = boolean('Fill Form', false)\n\n  return (\n    <div style={{ height: 'calc(100vh - 16px)' }}>\n      <ResultForms\n        attributes={attributes}\n        form={fillForm ? resultForm : undefined}\n        onSave={action('onSave')}\n        onCancel={action('onCancel')}\n      />\n    </div>\n  )\n})\n\nconst MockEditor = props => {\n  const attributes = getAttributes(100)\n\n  return <Editor attributes={attributes} {...props} />\n}\n\nstories.add('route', () => {\n  const loading = boolean('Loading', false)\n\n  const [forms, setForms] = useState([])\n\n  const onCreate = form => {\n    setForms(forms.concat(form))\n  }\n\n  const onSave = newForm => {\n    const newState = forms.map(form => {\n      if (form.id === newForm.id) {\n        return newForm\n      }\n      return form\n    })\n    setForms(newState)\n  }\n\n  const onDelete = newForm => {\n    const newState = forms.filter(form => {\n      return form.id !== newForm.id\n    })\n    setForms(newState)\n  }\n\n  const props = {\n    forms,\n    loading,\n    Editor: MockEditor,\n    onCreate,\n    onSave,\n    onDelete,\n  }\n\n  return <Route {...props} />\n})\n","import React, { Fragment, useState } from 'react'\n\nimport gql from 'graphql-tag'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\n\nimport ResultForms from './result-forms'\n\nimport Dialog from '@material-ui/core/Dialog'\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport Snackbar from '@material-ui/core/Snackbar'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\n\nimport {\n  IndexCards,\n  IndexCardItem,\n  AddCardItem,\n  DeleteAction,\n  ShareAction,\n  Actions,\n} from '../index-cards'\n\nconst Loading = () => {\n  return <LinearProgress />\n}\n\nconst AddItem = props => {\n  const { onCreate, Editor } = props\n\n  const [editing, setEditing] = useState(false)\n\n  const onSave = data => {\n    setEditing(false)\n    onCreate(data)\n  }\n\n  const onCancel = () => {\n    setEditing(false)\n  }\n\n  return (\n    <Fragment>\n      {editing ? (\n        <Dialog open>\n          <Editor onSave={onSave} onCancel={onCancel} />\n        </Dialog>\n      ) : null}\n      <AddCardItem onClick={() => setEditing(true)} />\n    </Fragment>\n  )\n}\n\nconst Item = props => {\n  const { form, Editor, onDelete } = props\n\n  const [editing, setEditing] = useState(false)\n\n  const onSave = data => {\n    setEditing(false)\n    props.onSave(data)\n  }\n\n  const onCancel = () => {\n    setEditing(false)\n  }\n\n  return (\n    <Fragment>\n      {editing ? (\n        <Dialog open>\n          <Editor form={form} onSave={onSave} onCancel={onCancel} />\n        </Dialog>\n      ) : null}\n      <IndexCardItem {...form} onClick={() => setEditing(true)}>\n        <Actions>\n          <ShareAction />\n          <DeleteAction onDelete={onDelete} />\n        </Actions>\n      </IndexCardItem>\n    </Fragment>\n  )\n}\n\nconst Notification = props => {\n  const { message, autoHideDuration = 5000, onClose } = props\n\n  return (\n    <Snackbar\n      open\n      autoHideDuration={autoHideDuration}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    >\n      <SnackbarContent message={message} />\n    </Snackbar>\n  )\n}\n\nexport const Route = props => {\n  const [message, setMessage] = useState(null)\n\n  const { loading, error, forms, Editor, onCreate, onSave, onDelete } = props\n\n  if (loading) {\n    return <Loading />\n  }\n\n  if (error) {\n    return <div>Error</div>\n  }\n\n  return (\n    <IndexCards>\n      {message ? (\n        <Notification message={message} onClose={() => setMessage(null)} />\n      ) : null}\n      <AddItem\n        Editor={Editor}\n        onCreate={(...args) => {\n          onCreate(...args)\n          setMessage('Result Form Created')\n        }}\n      />\n      {forms\n        .concat()\n        .sort((a, b) => (a.modified > b.modified ? -1 : 1))\n        .map(form => {\n          return (\n            <Item\n              key={form.id}\n              Editor={Editor}\n              onSave={(...args) => {\n                onSave(...args)\n                setMessage('Result Form Saved')\n              }}\n              onDelete={() => {\n                onDelete(form)\n                setMessage('Result Form Deleted')\n              }}\n              form={form}\n            />\n          )\n        })}\n    </IndexCards>\n  )\n}\n\n// TODO: Add metacardOwner to fragment\n//\n// - When the GraphQL endpoint can return metacardOwner on save, we can\n//   add metacardOwner to this fragment.\nconst fragment = gql`\n  fragment ResultFormAttributes on MetacardAttributes {\n    id\n    title\n    description\n    modified: metacard_modified\n    owner: metacard_owner\n    attributes: ui_attribute_group\n  }\n`\n\nconst resultForms = gql`\n  query ResultForms {\n    metacardsByTag(tag: \"attribute-group\") {\n      attributes {\n        ...ResultFormAttributes\n        owner: metacard_owner\n      }\n    }\n  }\n  ${fragment}\n`\n\nconst useCreate = () => {\n  const mutation = gql`\n    mutation CreateResultForms($attrs: MetacardAttributesInput!) {\n      createMetacard(attrs: $attrs) {\n        ...ResultFormAttributes\n        owner: metacard_owner\n      }\n    }\n    ${fragment}\n  `\n\n  return useMutation(mutation, {\n    update: (cache, { data }) => {\n      const query = resultForms\n\n      const { metacardsByTag } = cache.readQuery({ query })\n      const attributes = metacardsByTag.attributes\n        .filter(({ id }) => id !== data.createMetacard.id)\n        .concat(data.createMetacard)\n\n      cache.writeQuery({\n        query,\n        data: {\n          metacardsByTag: {\n            attributes,\n            __typename: 'QueryResponse',\n          },\n        },\n      })\n    },\n  })\n}\n\nconst useSave = () => {\n  const mutation = gql`\n    mutation SaveResultForms($id: ID!, $attrs: MetacardAttributesInput!) {\n      saveMetacard(id: $id, attrs: $attrs) {\n        ...ResultFormAttributes\n      }\n    }\n    ${fragment}\n  `\n  return useMutation(mutation)\n}\n\nconst useDelete = () => {\n  const mutation = gql`\n    mutation DeleteResultForms($id: ID!) {\n      deleteMetacard(id: $id)\n    }\n  `\n\n  return useMutation(mutation, {\n    update: (cache, { data }) => {\n      const query = resultForms\n\n      const { metacardsByTag } = cache.readQuery({ query })\n      const attributes = metacardsByTag.attributes.filter(\n        ({ id }) => id !== data.deleteMetacard\n      )\n\n      cache.writeQuery({\n        query,\n        data: {\n          metacardsByTag: {\n            attributes,\n            __typename: 'QueryResponse',\n          },\n        },\n      })\n    },\n  })\n}\n\nconst resultFormAttributes = gql`\n  query ResultFormAttributes {\n    metacardTypes {\n      id\n    }\n  }\n`\n\nexport const Editor = props => {\n  const { form, attributes, loading, error, onCancel, onSave } = props\n\n  if (loading) {\n    return <Loading />\n  }\n\n  if (error) {\n    return <div>Error</div>\n  }\n\n  return (\n    <ResultForms\n      style={{\n        maxHeight: '60vh',\n      }}\n      form={form}\n      attributes={attributes}\n      onCancel={onCancel}\n      onSave={onSave}\n    />\n  )\n}\n\nconst EditorWithAttributes = props => {\n  const { loading, error, data } = useQuery(resultFormAttributes)\n\n  const attributes = loading ? [] : data.metacardTypes.map(({ id }) => id)\n\n  return (\n    <Editor\n      loading={loading}\n      error={error}\n      attributes={attributes}\n      {...props}\n    />\n  )\n}\n\nexport default () => {\n  const { loading, error, data } = useQuery(resultForms)\n\n  const [create] = useCreate()\n  const [save] = useSave()\n  const [_delete] = useDelete()\n\n  if (loading) {\n    return <Route loading={loading} />\n  }\n\n  if (error) {\n    return <Route error={error} />\n  }\n\n  const onCreate = form => {\n    const { attributes, modified, owner, ...rest } = form\n    create({\n      variables: {\n        attrs: {\n          ui_attribute_group: attributes,\n          metacard_type: 'attribute-group',\n          metacard_tags: ['VALID', 'attribute-group'],\n          metacard_modified: modified,\n          metacard_owner: owner,\n          ...rest,\n        },\n      },\n    })\n  }\n\n  const onSave = form => {\n    const { attributes, modified, owner, ...rest } = form\n    save({\n      variables: {\n        id: form.id,\n        attrs: {\n          ui_attribute_group: attributes,\n          metacard_modified: modified,\n          metacard_owner: owner,\n          ...rest,\n        },\n      },\n    })\n  }\n\n  const onDelete = form => {\n    _delete({\n      variables: {\n        id: form.id,\n      },\n    })\n  }\n\n  const forms = data.metacardsByTag.attributes\n\n  return (\n    <Route\n      forms={forms}\n      Editor={EditorWithAttributes}\n      onCreate={onCreate}\n      onSave={onSave}\n      onDelete={onDelete}\n    />\n  )\n}\n","import React, { useState } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport CardContent from '@material-ui/core/CardContent'\nimport Card from '@material-ui/core/Card'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport RedoIcon from '@material-ui/icons/Redo'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport UndoIcon from '@material-ui/icons/Undo'\n\nconst Attributes = props => {\n  const [text, setText] = useState('')\n\n  const { title, attributes = [], onSelect } = props\n\n  const filtered = attributes.filter(type => type.match(text))\n\n  return (\n    <div style={{ maxHeight: '100%', flex: '1', alignItems: 'stretch' }}>\n      <Card\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          boxSizing: 'border-box',\n        }}\n      >\n        <CardContent style={{ paddingBottom: 0 }}>\n          <Typography variant=\"h6\" color=\"textSecondary\">\n            {title}\n            {filtered.length !== attributes.length\n              ? ` (${filtered.length}/${attributes.length} visible)`\n              : null}\n          </Typography>\n          <TextField\n            fullWidth\n            value={text}\n            onChange={e => setText(e.target.value)}\n            placeholder=\"type to filter...\"\n          />\n        </CardContent>\n        <List dense={true} style={{ flex: '1', overflow: 'auto' }}>\n          {filtered.map(type => {\n            return (\n              <ListItem key={type} button onClick={() => onSelect([type])}>\n                <ListItemText primary={type} />\n              </ListItem>\n            )\n          })}\n        </List>\n      </Card>\n    </div>\n  )\n}\n\nconst HistoryControls = props => {\n  const { canUndo, onUndo, canRedo, onRedo } = props\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={onUndo} disabled={!canUndo}>\n        <UndoIcon /> Undo\n      </Button>\n      <div style={{ width: 10, display: 'inline-block' }} />\n      <Button variant=\"outlined\" onClick={onRedo} disabled={!canRedo}>\n        <RedoIcon /> Redo\n      </Button>\n    </div>\n  )\n}\n\nconst TransferList = props => {\n  const { state, setState, attributes = [], ...rest } = props\n\n  const selected = attributes.filter(a => state.has(a))\n  const available = attributes.filter(a => !state.has(a))\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        maxHeight: '100%',\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: 3,\n          marginBottom: 10,\n        }}\n      >\n        <div>\n          <FormLabel required={props.required} error={props.error}>\n            {props.label}\n          </FormLabel>\n          <FormHelperText error={props.error}>\n            {props.helperText}\n          </FormHelperText>\n        </div>\n\n        <HistoryControls {...rest} />\n      </div>\n\n      <div\n        style={{ display: 'flex', flex: '1', overflow: 'hidden', padding: 3 }}\n      >\n        <Attributes\n          title=\"Available\"\n          attributes={available}\n          onSelect={a => setState(state.union(a))}\n        />\n\n        <div style={{ width: 20 }} />\n\n        <Attributes\n          title=\"Selected\"\n          attributes={selected}\n          onSelect={a => setState(state.subtract(a))}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default TransferList\n","import React, { useState } from 'react'\nimport { Set } from 'immutable'\nimport { useKeyPressed, useSelectionInterface } from '../react-hooks'\n\nimport Paper from '@material-ui/core/Card'\nimport Table from '@material-ui/core/Table'\nimport Typography from '@material-ui/core/Typography'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableBody from '@material-ui/core/TableBody'\nimport More from '@material-ui/icons/UnfoldMore'\nimport Less from '@material-ui/icons/UnfoldLess'\nimport DefaultThumbnail from '../thumbnail/thumbnail'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst cellStyles = {\n  minWidth: 150,\n  maxWidth: 450,\n}\n\nconst ExpandButton = props => {\n  const { expanded, onClick } = props\n  return (\n    <Button\n      style={{\n        minWidth: 25,\n        marginLeft: 5,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      onClick={onClick}\n    >\n      {expanded ? <Less /> : <More />}\n    </Button>\n  )\n}\n\nconst Description = props => {\n  const [expanded, setExpanded] = useState(false)\n  const { text } = props\n  const long = text.length > 250\n\n  return (\n    <div\n      style={{\n        ...cellStyles,\n        display: 'flex',\n        width: '20vw',\n        alignItems: 'stretch',\n      }}\n    >\n      <Typography>\n        {!long || expanded ? text : text.substring(0, 100).concat('...')}\n      </Typography>\n      {long ? (\n        <ExpandButton\n          expanded={expanded}\n          onClick={e => {\n            e.stopPropagation()\n            setExpanded(!expanded)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nconst getCellContent = (attribute, result, Thumbnail) => {\n  const { properties } = result.metacard\n  switch (attribute) {\n    case 'thumbnail':\n      return (\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Thumbnail result={result} />\n        </div>\n      )\n    case 'description':\n      return <Description text={properties.description} />\n    default:\n      return (\n        <Typography style={{ ...cellStyles }}>\n          {properties[attribute]}\n        </Typography>\n      )\n  }\n}\n\nconst getId = result => result.metacard.properties.id\n\nconst Result = props => {\n  const {\n    attributes,\n    selected,\n    onClick,\n    onSelect,\n    onRemove,\n    Thumbnail,\n    result,\n  } = props\n  const id = getId(result)\n  return (\n    <TableRow\n      onClick={onClick}\n      key={id}\n      selected={selected}\n      style={{ cursor: 'pointer' }}\n    >\n      <TableCell>\n        <Checkbox\n          checked={selected}\n          onClick={e => {\n            e.stopPropagation()\n            if (e.target.checked) {\n              onSelect()\n            } else {\n              onRemove()\n            }\n          }}\n        />\n      </TableCell>\n      {attributes.map(attribute => (\n        <TableCell key={attribute}>\n          {getCellContent(attribute.toLowerCase(), result, Thumbnail)}\n        </TableCell>\n      ))}\n    </TableRow>\n  )\n}\n\nconst DDFThumbnail = ({ result }) => {\n  const { url } =\n    result.actions.find(({ id }) => id === 'catalog.data.metacard.thumbnail') ||\n    {}\n  return <DefaultThumbnail src={url} />\n}\n\nconst computeSelected = (selection, results, start, end, e) => {\n  const clicked = getId(results[end])\n  if (e.ctrlKey || e.metaKey) {\n    return selection.has(clicked)\n      ? selection.remove(clicked)\n      : selection.add(clicked)\n  }\n  if (e.shiftKey && start !== null) {\n    const slice =\n      start < end\n        ? results.slice(start, end + 1)\n        : results.slice(end, start + 1)\n    const group = Set(slice.map(result => getId(result)))\n    return group.union(selection)\n  }\n  return selection.has(clicked) ? Set() : Set([getId(results[end])])\n}\n\nconst Results = props => {\n  const { results, attributes, onSelect, Thumbnail = DDFThumbnail } = props\n  const selection = Set(props.selection)\n  const [lastSelected, setLastSelected] = useState(null)\n  const allowTextSelect = !useKeyPressed('Shift')\n\n  const all = Set(results.map(getId))\n\n  const allSelected = all.subtract(selection).isEmpty()\n\n  return (\n    <Paper style={{ overflow: 'auto', maxHeight: '100%' }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Checkbox\n                checked={allSelected}\n                onChange={e => {\n                  if (e.target.checked) {\n                    onSelect(all)\n                  } else {\n                    onSelect(Set())\n                  }\n                }}\n              />\n            </TableCell>\n            {attributes.map(attribute => (\n              <TableCell key={attribute}>\n                <Typography>{attribute}</Typography>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody style={{ userSelect: allowTextSelect ? 'auto' : 'none' }}>\n          {results.map((result, i) => {\n            const id = getId(result)\n            return (\n              <Result\n                key={id}\n                result={result}\n                Thumbnail={Thumbnail}\n                attributes={attributes}\n                selected={selection.has(id)}\n                onRemove={() => {\n                  onSelect(selection.remove(id))\n                }}\n                onSelect={() => {\n                  onSelect(selection.add(id))\n                }}\n                onClick={e => {\n                  e.stopPropagation()\n                  const selected = computeSelected(\n                    selection,\n                    results,\n                    lastSelected,\n                    i,\n                    e\n                  )\n                  onSelect(selected)\n                  setLastSelected(e.shiftKey ? lastSelected : i)\n                }}\n              />\n            )\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nconst Container = prop => {\n  const [selection, onSelect] = useSelectionInterface()\n  return <Results {...prop} selection={selection} onSelect={onSelect} />\n}\n\nexport { Results }\nexport default Container\n","import React, { useState } from 'react'\nimport { Results } from './results'\nimport { storiesOf } from '../@storybook/react'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport { boolean } from '@connexta/ace/@storybook/addon-knobs'\nimport tn from './story-thumb'\n\nimport genResults from '../gen-results'\n\nconst stories = storiesOf('Result', module)\n\nconst attributes = [\n  'Title',\n  'Thumbnail',\n  'Description',\n  'Created',\n  'Modified',\n  'Checksum',\n  'ID',\n]\n\nconst Thumbnail = () => {\n  const loaded = boolean('Load Thumbnail', false)\n  return loaded ? (\n    <img style={{ maxHeight: 100 }} src={tn} />\n  ) : (\n    <Skeleton variant=\"rect\" height=\"100px\" width=\"100px\" />\n  )\n}\n\nstories.add('Basic', () => {\n  const [selection, setSelected] = useState([])\n\n  const results = genResults()\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <div\n        style={{\n          height: '90vh',\n          width: '90vw',\n          border: '1px dashed orange',\n        }}\n      >\n        <Results\n          results={results}\n          attributes={attributes}\n          selection={selection}\n          onSelect={setSelected}\n          Thumbnail={Thumbnail}\n        />\n      </div>\n    </div>\n  )\n})\n","import React, { useState } from 'react'\nimport Filter, { QueryFilter } from '../query-filters/filter/individual-filter'\n\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Divider from '@material-ui/core/Divider'\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled'\n\nimport loadable from 'react-loadable'\nimport Button from '@material-ui/core/Button'\nimport { SearchFormType } from '.'\nimport { FilterGroupType } from '../query-filters/filter/filter-group'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Typography from '@material-ui/core/Typography'\nimport useAttributeDefinitions from '../react-hooks/use-attribute-definitions'\nimport {\n  AttributeDefinition,\n  sampleAttributeDefinitions,\n} from '../query-filters/filter/dummyDefinitions'\nimport { defaultFilter } from '../query-filters/filter/filter-utils'\nimport QuerySettings, { QuerySettingsType } from './query-settings'\nimport Menu from '@material-ui/core/Menu'\nimport useAnchorEl from '../react-hooks/use-anchor-el'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst { useQueryExecutor, useApolloFallback } = require('../react-hooks')\nconst genResults = require('../gen-results').default\n\nconst Loading = () => {\n  return (\n    <Paper>\n      <LinearProgress />\n    </Paper>\n  )\n}\nconst Error = (props: any) => {\n  return (\n    <Paper>\n      <Typography>\n        {props.message ? props.message : 'Something went wrong'}\n      </Typography>\n    </Paper>\n  )\n}\n\nlet Visualizations: any = () => null\n\nif (typeof window !== 'undefined') {\n  Visualizations = loadable({\n    loader: () =>\n      import(//prettier-ignore\n      // @ts-ignore\n      /* webpackChunkName: \"visualizations\" */ '../workspaces/visualizations').then(\n        module => module.default\n      ),\n    loading: Loading,\n  })\n}\n\ntype QueryBuilderProps = {\n  attributeDefinitions?: AttributeDefinition[]\n  onCancel?: () => void\n  onSave?: (form: SearchFormType) => void\n  onSearch?: (query: any) => void\n  form?: SearchFormType\n}\n\nconst getFilterTree = (form: SearchFormType) => {\n  if (!form.filterTree) {\n    return {\n      type: 'AND',\n      filters: [{ ...defaultFilter }],\n    }\n  }\n\n  if (!form.filterTree.filters) {\n    return { type: 'AND', filters: [{ ...form.filterTree }] }\n  }\n  return { ...form.filterTree }\n}\n\nconst AddButton = (props: { options: any }) => {\n  const [anchorEl, open, close] = useAnchorEl()\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" style={{ marginLeft: 10 }} onClick={open}>\n        Add Option\n      </Button>\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={close}>\n        {Object.keys(props.options).map(option => {\n          return (\n            <MenuItem\n              key={option}\n              onClick={() => {\n                props.options[option]()\n                close()\n              }}\n            >\n              {option}\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </React.Fragment>\n  )\n}\n\nconst QueryBuilder = (props: QueryBuilderProps) => {\n  const { form = {} } = props\n  const [filterTree, setFilterTree] = useState<FilterGroupType>(\n    getFilterTree(form)\n  )\n  const [title, setTitle] = useState(form.title || 'New Search')\n\n  const [querySettings, setQuerySettings] = useState<QuerySettingsType>({\n    sources: form.sources || undefined,\n    sorts: form.sorts || undefined,\n    detail_level: form.detail_level || undefined,\n  })\n\n  const { attributeDefinitions = sampleAttributeDefinitions } = props\n\n  const addFilter = () => {\n    setFilterTree({\n      ...filterTree,\n      filters: [\n        { property: 'anyText', type: 'ILIKE', value: '' },\n        ...filterTree.filters,\n      ],\n    })\n  }\n\n  const addSources = () => {\n    if (querySettings.sources === undefined) {\n      setQuerySettings({ ...querySettings, sources: [] })\n    }\n  }\n\n  const addSorts = () => {\n    if (querySettings.sorts === undefined) {\n      setQuerySettings({ ...querySettings, sorts: [] })\n    }\n  }\n\n  const addResultForm = () => {\n    if (querySettings.detail_level === undefined) {\n      setQuerySettings({ ...querySettings, detail_level: null })\n    }\n  }\n\n  const options = {\n    'Field Filter': addFilter,\n    Sources: addSources,\n    'Sort Order': addSorts,\n    'Result Form': addResultForm,\n  }\n\n  return (\n    <Box>\n      <Box\n        style={{\n          width: 500,\n          overflow: 'auto',\n          height: `calc(100% - 60px)`,\n          padding: '8px 0px',\n        }}\n        display=\"flex\"\n        flexDirection=\"column\"\n      >\n        <Box display=\"flex\" style={{ padding: 8 }} alignItems=\"center\">\n          <TextField\n            fullWidth\n            value={form.title}\n            variant=\"outlined\"\n            label=\"Search Title\"\n            onChange={event => {\n              setTitle(event.target.value)\n            }}\n            autoFocus\n          />\n          <AddButton options={options} />\n        </Box>\n        <Divider />\n        {filterTree.filters.map((filter: QueryFilter, i) => (\n          <Box key={i} style={{ padding: '0px 16px' }}>\n            <Filter\n              filter={filter}\n              onChange={(newFilter: any) => {\n                const filters = filterTree.filters.slice()\n                filters[i] = newFilter\n                setFilterTree({ ...filterTree, filters })\n              }}\n              onRemove={() => {\n                const filters = filterTree.filters.slice()\n                filters.splice(i, 1)\n                setFilterTree({ ...filterTree, filters })\n              }}\n              attributeDefinitions={attributeDefinitions}\n            />\n          </Box>\n        ))}\n        <QuerySettings settings={querySettings} onChange={setQuerySettings} />\n      </Box>\n      <Box\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          margin: 'auto 5px',\n        }}\n      >\n        {props.onSearch && (\n          <React.Fragment>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              endIcon={<PlayCircleFilledIcon />}\n              onClick={() => {\n                if (props.onSearch) {\n                  const {\n                    sources: srcs,\n                    sorts = [],\n                    detail_level,\n                  } = querySettings\n                  props.onSearch({\n                    filterTree,\n                    srcs: srcs || ['ddf.distribution'],\n                    sorts: sorts.map(sort => {\n                      const splitIndex = sort.lastIndexOf(',')\n                      return {\n                        attribute: sort.substring(0, splitIndex),\n                        direction: sort.substring(splitIndex + 1, sort.length),\n                      }\n                    }),\n                    detail_level,\n                  })\n                }\n              }}\n            >\n              Test Search\n            </Button>\n            <Box style={{ width: 10, display: 'inline-block' }} />\n          </React.Fragment>\n        )}\n        <Button\n          onClick={() => {\n            if (props.onCancel) {\n              props.onCancel()\n            }\n          }}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          Cancel\n        </Button>\n        <Box style={{ width: 10, display: 'inline-block' }} />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            if (props.onSave) {\n              props.onSave({\n                filterTree,\n                title,\n                id: form.id,\n                ...querySettings,\n                detail_level: querySettings.detail_level || undefined,\n              })\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Box>\n    </Box>\n  )\n}\n\ntype EditorProps = QueryBuilderProps & {\n  results?: Array<any>\n}\n\nexport const SearchFormEditor = (props: EditorProps) => {\n  return (\n    <Box width=\"100%\" display=\"flex\" flexDirection=\"column\" height=\"100%\">\n      <Typography\n        variant=\"h4\"\n        component=\"h1\"\n        style={{ padding: 20 }}\n        color=\"textPrimary\"\n      >\n        Search Form Editor\n      </Typography>\n      <Divider />\n      <Box width=\"100%\" display=\"flex\" flexDirection=\"row\" height=\"100%\">\n        <QueryBuilder {...props} onSearch={props.onSearch} />\n        <Paper style={{ width: `calc(100% - 500px)`, height: '100%' }}>\n          <Box style={{ width: '100%', height: '100%' }}>\n            <Visualizations results={props.results || []} />\n          </Box>\n        </Paper>\n      </Box>\n    </Box>\n  )\n}\n\nconst MetacardTypesContainer = (props: EditorProps) => {\n  const { loading, error, attributeDefinitions } = useAttributeDefinitions()\n  if (loading) {\n    return <Loading />\n  }\n\n  if (error) {\n    return <Error message={error} />\n  }\n\n  return (\n    <SearchFormEditor {...props} attributeDefinitions={attributeDefinitions} />\n  )\n}\n\nconst useDummyExecutor = () => {\n  const [results, setResults] = useState([])\n  const onSearch = () => {\n    setResults(genResults())\n  }\n  return { results, onSearch }\n}\n\nexport default (props: any) => {\n  const fn = useApolloFallback(useQueryExecutor, useDummyExecutor)\n  const { results, onSearch } = fn()\n  const Component = useApolloFallback(MetacardTypesContainer, SearchFormEditor)\n  return <Component {...props} results={results} onSearch={onSearch} />\n}\ntry {\n    // @ts-ignore\n    SearchFormEditor.displayName = \"SearchFormEditor\";\n    // @ts-ignore\n    SearchFormEditor.__docgenInfo = { \"description\": \"\", \"displayName\": \"SearchFormEditor\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/search-forms/editor.tsx#SearchFormEditor\"] = { docgenInfo: SearchFormEditor.__docgenInfo, name: \"SearchFormEditor\", path: \"src/main/webapp/search-forms/editor.tsx#SearchFormEditor\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    editor.displayName = \"editor\";\n    // @ts-ignore\n    editor.__docgenInfo = { \"description\": \"\", \"displayName\": \"editor\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/search-forms/editor.tsx#editor\"] = { docgenInfo: editor.__docgenInfo, name: \"editor\", path: \"src/main/webapp/search-forms/editor.tsx#editor\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { useState, ReactNode } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Collapse from '@material-ui/core/Collapse'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nconst ResultFormSelect = require('../user-settings/result-form-select').default\nconst { SourcesSelect } = require('../sources')\nconst { FilterCard } = require('../basic-search')\nconst SortOrder = require('../sort-order').default\n\nexport type QuerySettingsType = {\n  sources?: string[]\n  sorts?: string[]\n  detail_level?: string | null //Result Form Name\n}\n\nconst getSorts = (sorts?: string[]) => {\n  if (!sorts) return undefined\n  return sorts.map(sort => {\n    const splitIndex = sort.lastIndexOf(',')\n    return {\n      attribute: sort.substring(0, splitIndex),\n      direction: sort.substring(splitIndex + 1, sort.length),\n    }\n  })\n}\n\nconst Section = (props: { title: string; children: ReactNode }) => {\n  const [open, setOpen] = useState(true)\n  const Arrow = open ? KeyboardArrowUpIcon : KeyboardArrowDownIcon\n  const { children, title } = props\n  return (\n    <Box>\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        marginTop={1}\n      >\n        <Box style={{ width: '100%' }}>\n          <Divider />\n        </Box>\n        <Typography\n          style={{ height: 'fit-content', whiteSpace: 'nowrap' }}\n          color=\"textPrimary\"\n        >\n          {title}\n        </Typography>\n        <IconButton onClick={() => setOpen(!open)}>\n          <Arrow />\n        </IconButton>\n        <Box style={{ width: '100%' }}>\n          <Divider />\n        </Box>\n      </Box>\n      <Collapse in={open}>{children}</Collapse>\n    </Box>\n  )\n}\n\ntype QuerySettingsProps = {\n  settings?: QuerySettingsType\n  onChange: (value: QuerySettingsType) => void\n}\n\nconst QuerySettings = (props: QuerySettingsProps) => {\n  const { settings = {} } = props\n  if (\n    settings.sources === undefined &&\n    settings.sorts === undefined &&\n    settings.detail_level === undefined\n  )\n    return null\n\n  return (\n    <Section title=\"Search Settings\">\n      {settings.sources !== undefined && (\n        <Box style={{ padding: '0px 16px' }}>\n          <FilterCard\n            label=\"Sources\"\n            onRemove={() => {\n              props.onChange({ ...settings, sources: undefined })\n            }}\n          >\n            <SourcesSelect\n              value={settings.sources}\n              sources={['ddf.distribution']}\n              onChange={(value: any) => {\n                props.onChange({ ...settings, sources: value })\n              }}\n            />\n          </FilterCard>\n        </Box>\n      )}\n      {settings.sorts !== undefined && (\n        <Box style={{ padding: '0px 16px' }}>\n          <FilterCard\n            label=\"Sorts\"\n            onRemove={() => {\n              props.onChange({ ...settings, sorts: undefined })\n            }}\n          >\n            <SortOrder\n              value={getSorts(settings.sorts)}\n              onChange={(value: any) => {\n                props.onChange({\n                  ...settings,\n                  sorts: value.map(\n                    (sort: any) => `${sort.attribute},${sort.direction}`\n                  ),\n                })\n              }}\n            />\n          </FilterCard>\n        </Box>\n      )}\n      {settings.detail_level !== undefined && (\n        <Box style={{ padding: '0px 16px' }}>\n          <FilterCard\n            label=\"Result Form\"\n            onRemove={() => {\n              props.onChange({ ...settings, detail_level: undefined })\n            }}\n          >\n            <ResultFormSelect\n              value={settings.detail_level}\n              onChange={(value: any) => {\n                props.onChange({ ...settings, detail_level: value })\n              }}\n            />\n          </FilterCard>\n        </Box>\n      )}\n    </Section>\n  )\n}\n\nexport default QuerySettings\ntry {\n    // @ts-ignore\n    querysettings.displayName = \"querysettings\";\n    // @ts-ignore\n    querysettings.__docgenInfo = { \"description\": \"\", \"displayName\": \"querysettings\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/search-forms/query-settings.tsx#querysettings\"] = { docgenInfo: querysettings.__docgenInfo, name: \"querysettings\", path: \"src/main/webapp/search-forms/query-settings.tsx#querysettings\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Dialog from '@material-ui/core/Dialog'\n\nconst {\n  IndexCards,\n  AddCardItem,\n  IndexCardItem,\n  Actions,\n  ShareAction,\n  DeleteAction,\n} = require('../index-cards')\nimport { useState, Fragment } from 'react'\nimport SearchFormEditor from './editor'\nimport { SearchFormType } from '.'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport Box from '@material-ui/core/Box'\n\ntype SearchFormProps = {\n  onDelete: (form: SearchFormType) => void\n  onSave: (form: SearchFormType) => void\n  form?: SearchFormType\n}\n\nconst SearchForm = (props: SearchFormProps) => {\n  const [editing, setEditing] = useState(false)\n  const onCancel = () => setEditing(false)\n  const onSave = (form: SearchFormType) => {\n    setEditing(false)\n    props.onSave(form)\n  }\n  return (\n    <Fragment>\n      {editing ? (\n        <Dialog fullWidth maxWidth={false} open onClose={onCancel}>\n          <Box height=\"calc(100vh - 128px)\">\n            <SearchFormEditor\n              form={props.form}\n              onCancel={onCancel}\n              onSave={onSave}\n            />\n          </Box>\n        </Dialog>\n      ) : null}\n      <IndexCardItem {...props.form} onClick={() => setEditing(true)}>\n        <Actions>\n          <ShareAction />\n          <DeleteAction onDelete={props.onDelete} />\n        </Actions>\n      </IndexCardItem>\n    </Fragment>\n  )\n}\n\ntype AddProps = {\n  onCreate: (form: SearchFormType) => void\n}\n\nconst AddSearchForm = (props: AddProps) => {\n  const [editing, setEditing] = useState(false)\n  const onCancel = () => setEditing(false)\n  const onSave = (form: SearchFormType) => {\n    setEditing(false)\n    props.onCreate(form)\n  }\n  return (\n    <Fragment>\n      {editing ? (\n        <Dialog fullWidth maxWidth={false} open onClose={onCancel}>\n          <Box height=\"calc(100vh - 128px)\">\n            <SearchFormEditor onCancel={onCancel} onSave={onSave} />\n          </Box>\n        </Dialog>\n      ) : null}\n      <AddCardItem onClick={() => setEditing(true)} />\n    </Fragment>\n  )\n}\n\ntype RouteProps = {\n  onDelete: (form: SearchFormType) => void\n  onSave: (form: SearchFormType) => void\n  onCreate: (form: SearchFormType) => void\n  loading?: boolean\n  error?: any\n  forms: SearchFormType[]\n}\n\nconst Route = (props: RouteProps) => {\n  const [message, setMessage] = useState<string | null>(null)\n\n  const { loading, error, forms, onDelete, onSave, onCreate } = props\n  if (loading === true) return <Loading />\n\n  if (error) return <div>Error</div>\n  return (\n    <IndexCards>\n      {message ? (\n        <Notification message={message} onClose={() => setMessage(null)} />\n      ) : null}\n      <AddSearchForm\n        onCreate={newForm => {\n          onCreate(newForm)\n          setMessage('Search Form Created')\n        }}\n      />\n      {forms\n        .slice()\n        .sort((a: any, b: any) => (a.modified > b.modified ? -1 : 1))\n        .map((form, i) => {\n          return (\n            <SearchForm\n              key={i}\n              form={form}\n              onDelete={() => {\n                onDelete(form)\n                setMessage('Search Form Deleted')\n              }}\n              onSave={newForm => {\n                onSave(newForm)\n                setMessage('Search Form Saved')\n              }}\n            />\n          )\n        })}\n    </IndexCards>\n  )\n}\n\ntype NotificationProps = {\n  onClose: () => void\n  message: string\n  autoHideDuration?: number\n}\nconst Notification = (props: NotificationProps) => {\n  const { message, autoHideDuration = 5000, onClose } = props\n\n  return (\n    <Snackbar\n      open\n      autoHideDuration={autoHideDuration}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    >\n      <SnackbarContent message={message} />\n    </Snackbar>\n  )\n}\n\nconst Loading = () => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <LinearProgress style={{ width: '25vw', height: 10 }} />\n    </div>\n  )\n}\nexport default Route\ntry {\n    // @ts-ignore\n    route.displayName = \"route\";\n    // @ts-ignore\n    route.__docgenInfo = { \"description\": \"\", \"displayName\": \"route\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/search-forms/route.tsx#route\"] = { docgenInfo: route.__docgenInfo, name: \"route\", path: \"src/main/webapp/search-forms/route.tsx#route\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","const { storiesOf } = require('../@storybook/react')\nimport React from 'react'\nimport { boolean } from '@storybook/addon-knobs'\nimport { useState } from 'react'\nimport SearchFormRoute from './route'\nimport { SearchFormEditor } from './editor'\nconst { SelectionProvider } = require('../react-hooks/use-selection-interface')\nconst { DrawProvider } = require('../react-hooks/use-draw-interface')\n\nconst stories = storiesOf('Search Forms', module)\n\nconst startingForms = [\n  {\n    id: '1',\n    title: 'Title 1',\n    modified: new Date().toISOString(),\n  },\n  {\n    id: '2',\n    title: 'Title 2',\n    modified: new Date().toISOString(),\n  },\n]\n\nstories.add('route', () => {\n  const [searchForms, setSearchForms]: any = useState(startingForms)\n  const loading = boolean('Loading', false)\n  const onDelete = (form: any) => {\n    setSearchForms(\n      searchForms.filter((searchForm: any) => searchForm.id !== form.id)\n    )\n  }\n\n  const onSave = (form: any) => {\n    setSearchForms(\n      searchForms.map((searchForm: any) => {\n        if (searchForm.id === form.id) {\n          return { ...form, modified: new Date().toISOString() }\n        }\n        return searchForm\n      })\n    )\n  }\n\n  const onCreate = (form: any) => {\n    setSearchForms(\n      searchForms.concat({\n        ...form,\n        id: Math.random(),\n        modified: new Date().toISOString(),\n      })\n    )\n  }\n\n  return (\n    <DrawProvider>\n      <SelectionProvider>\n        <SearchFormRoute\n          onCreate={onCreate}\n          onSave={onSave}\n          forms={searchForms}\n          onDelete={onDelete}\n          loading={loading}\n        />\n      </SelectionProvider>\n    </DrawProvider>\n  )\n})\nstories.add('editor', () => {\n  return (\n    <DrawProvider>\n      <SelectionProvider>\n        <div style={{ height: '100vh' }}>\n          <SearchFormEditor />\n        </div>\n      </SelectionProvider>\n    </DrawProvider>\n  )\n})\n","import React, { useEffect } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useApolloFallback } from './react-hooks'\nimport gql from 'graphql-tag'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Fab from '@material-ui/core/Fab'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Remove from '@material-ui/icons/Remove'\nimport Select from '@material-ui/core/Select'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\nimport { fromJS } from 'immutable'\n\nconst getDirectionLabel = type => {\n  let ascending = ''\n  let descending = ''\n  switch (type) {\n    case 'BINARY':\n    case 'XML':\n      ascending = 'Ascending'\n      descending = 'Descending'\n      break\n    case 'BOOLEAN':\n      ascending = 'True First'\n      descending = 'False First'\n      break\n    case 'DATE':\n      ascending = 'Earliest'\n      descending = 'Latest'\n      break\n    case 'DOUBLE':\n    case 'FLOAT':\n    case 'INTEGER':\n    case 'LONG':\n    case 'SHORT':\n      ascending = 'Smallest'\n      descending = 'Largest'\n      break\n    case 'GEOMETRY':\n      ascending = 'Closest'\n      descending = 'Furthest'\n      break\n    case 'STRING':\n      ascending = 'A to Z'\n      descending = 'Z to A'\n      break\n  }\n  return {\n    ascending,\n    descending,\n  }\n}\n\nconst sampleAttributeDescriptors = [\n  { id: 'metadata', type: 'XML', __typename: 'MetacardType' },\n  { id: 'thumbnail', type: 'BINARY', __typename: 'MetacardType' },\n  { id: 'phonetics', type: 'BOOLEAN', __typename: 'MetacardType' },\n  { id: 'created', type: 'DATE', __typename: 'MetacardType' },\n  { id: 'media.bit-rate', type: 'DOUBLE', __typename: 'MetacardType' },\n  { id: 'media.width-pixels', type: 'INTEGER', __typename: 'MetacardType' },\n  { id: 'ext.population', type: 'LONG', __typename: 'MetacardType' },\n  { id: 'location', type: 'GEOMETRY', __typename: 'MetacardType' },\n  { id: 'topic.vocabulary', type: 'STRING', __typename: 'MetacardType' },\n]\n\nconst AttributeSortOrder = props => {\n  const { attributeDescriptors, availableDescriptors, onChange } = props\n\n  const value = fromJS(props.value || {})\n\n  const attribute = attributeDescriptors.find(\n    attr => attr.id === value.get('attribute')\n  )\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: '250px',\n        maxWidth: '400px',\n        overflow: 'visible',\n      }}\n    >\n      <AttributeSelect\n        value={attribute}\n        attributeDescriptors={availableDescriptors}\n        onChange={attribute => {\n          onChange(value.set('attribute', attribute.id))\n        }}\n      />\n\n      <DirectionSelect\n        value={value.get('direction')}\n        attributeType={attribute.type}\n        onChange={direction => {\n          onChange(value.set('direction', direction))\n        }}\n      />\n    </div>\n  )\n}\n\nconst RemovableAttributeSortOrder = props => {\n  const { onRemove } = props\n\n  return (\n    <Box style={{ margin: 10 }}>\n      <Fab onClick={onRemove} size=\"small\" color=\"secondary\">\n        <Remove />\n      </Fab>\n    </Box>\n  )\n}\n\nconst MultipleSorts = props => {\n  const { value, onChange } = props\n\n  return (\n    <List>\n      {value.map((sortItem, index) => {\n        return (\n          <ListItem key={sortItem.get('attribute')}>\n            <Box style={{ display: 'flex', alignItems: 'center' }}>\n              <RemovableAttributeSortOrder\n                onRemove={() => {\n                  onChange(value.delete(index))\n                }}\n              />\n              <AttributeSortOrder\n                {...props}\n                value={sortItem}\n                onChange={sort => {\n                  onChange(value.set(index, sort))\n                }}\n              />\n            </Box>\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nconst AttributeSelect = props => {\n  const { attributeDescriptors, value, onChange } = props\n\n  const handleChange = selectedOption => {\n    onChange(selectedOption)\n  }\n\n  return (\n    <Autocomplete\n      options={attributeDescriptors}\n      defaultValue={value}\n      autoSelect\n      disableClearable\n      onChange={(event, value) => {\n        handleChange(value)\n      }}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label=\"Sort Attribute\"\n          margin=\"normal\"\n          fullWidth\n        />\n      )}\n      getOptionLabel={option => option.id}\n    />\n  )\n}\n\nconst DirectionSelect = props => {\n  const { attributeType, onChange, value = 'ascending' } = props\n  const directionLabel = getDirectionLabel(attributeType)\n\n  return (\n    <Select\n      fullWidth\n      value={value}\n      onChange={e => {\n        onChange(e.target.value)\n      }}\n    >\n      <MenuItem value={'ascending'}>\n        <Typography>{directionLabel.ascending}</Typography>\n      </MenuItem>\n      <MenuItem value={'descending'}>\n        <Typography>{directionLabel.descending}</Typography>\n      </MenuItem>\n    </Select>\n  )\n}\n\nconst sortById = (a, b) => {\n  return a.id > b.id ? 1 : -1\n}\n\nconst getAvailableAttributes = (descriptors, used) => {\n  return descriptors\n    .filter(descriptor => !used.includes(descriptor.id))\n    .sort(sortById)\n}\n\nconst getUsedAttributes = sorts => {\n  return sorts.map(sort => sort.get('attribute'))\n}\n\nconst getNextAvailableSort = descriptors => {\n  const direction = 'ascending'\n  const attribute = descriptors[0].id\n\n  return { attribute, direction }\n}\n\nconst SortOrder = props => {\n  const { attributeDescriptors = sampleAttributeDescriptors } = props\n\n  const value = fromJS(props.value || [])\n\n  const onChange = value => {\n    props.onChange(value.toJS())\n  }\n  const unavailableAttributes = getUsedAttributes(value)\n  const availableDescriptors = getAvailableAttributes(\n    attributeDescriptors,\n    unavailableAttributes\n  )\n\n  const pushNextSort = () => {\n    const nextSort = getNextAvailableSort(availableDescriptors)\n    return value.push(fromJS(nextSort))\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (value.isEmpty()) {\n      onChange(pushNextSort())\n    }\n  }, [])\n\n  return (\n    <div>\n      <AttributeSortOrder\n        attributeDescriptors={attributeDescriptors}\n        availableDescriptors={availableDescriptors}\n        onChange={sort => {\n          const next = value.shift().unshift(sort)\n          onChange(next)\n        }}\n        value={value.get(0) || getNextAvailableSort(availableDescriptors)}\n      />\n\n      <MultipleSorts\n        attributeDescriptors={attributeDescriptors}\n        availableDescriptors={availableDescriptors}\n        onChange={list => {\n          const next = value.slice(0, 1).concat(list)\n          onChange(next)\n        }}\n        value={value.slice(1)}\n      />\n\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        disabled={availableDescriptors.length === 0}\n        onClick={() => {\n          onChange(pushNextSort())\n        }}\n      >\n        Add Sort\n      </Button>\n    </div>\n  )\n}\n\nconst Loading = () => {\n  return (\n    <Paper>\n      <LinearProgress />\n    </Paper>\n  )\n}\nconst Error = props => {\n  return (\n    <Paper>\n      <Typography>\n        {props.message ? props.message : 'Something went wrong'}\n      </Typography>\n    </Paper>\n  )\n}\n\nconst query = gql`\n  query MetacardTypesSearchSettings {\n    metacardTypes {\n      id\n      type\n    }\n  }\n`\n\nconst Container = props => {\n  const { loading, error, data = {} } = useQuery(query)\n  if (loading) {\n    return <Loading />\n  }\n  if (error) {\n    return <Error message={error} />\n  }\n\n  const attributeDescriptors = data.metacardTypes\n\n  return <SortOrder {...props} attributeDescriptors={attributeDescriptors} />\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, SortOrder)\n  return <Component {...props} />\n}\n","import React, { useState } from 'react'\n\nimport { action } from '@connexta/ace/@storybook/addon-actions'\nimport { storiesOf } from './@storybook/react'\n\nimport SortOrder from './sort-order'\n\nconst stories = storiesOf('Sort Order', module)\n\nconst useSortState = (sorts = []) => {\n  const [value, setState] = useState(sorts)\n\n  const onChange = (...args) => {\n    action('onChange')(...args)\n    setState(...args)\n  }\n\n  return { value, onChange }\n}\n\nstories.add('Sort Order', () => {\n  return <SortOrder {...useSortState()} />\n})\n\nstories.add('Sort Order with values provided', () => {\n  const sorts = [\n    { attribute: 'thumbnail', direction: 'ascending' },\n    { attribute: 'phonetics', direction: 'descending' },\n    { attribute: 'media.bit-rate', direction: 'ascending' },\n    { attribute: 'location', direction: 'descending' },\n  ]\n\n  return <SortOrder {...useSortState(sorts)} />\n})\n","import React from 'react'\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Divider from '@material-ui/core/Divider'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport OnlineIcon from '@material-ui/icons/CloudDoneOutlined'\nimport OfflineIcon from '@material-ui/icons/OfflineBoltOutlined'\nimport Select from '@material-ui/core/Select'\nimport { useApolloFallback } from './react-hooks'\n\nconst sourcesMessage = offlineCount => {\n  if (offlineCount === 0) {\n    return 'All sources are currently up'\n  }\n\n  if (offlineCount === 1) {\n    return '1 source is currently down'\n  }\n\n  return `${offlineCount} sources are currently down`\n}\n\nexport const sources = gql`\n  query SourcesPages {\n    sources {\n      isAvailable\n      sourceId\n      local\n    }\n  }\n`\n\nexport const Sources = props => {\n  const { sources } = props\n  const offlineCount = sources.filter(source => !source.isAvailable).length\n  const getIcon = source => (source.isAvailable ? OnlineIcon : OfflineIcon)\n\n  return (\n    <div style={{ maxWidth: 600, margin: '20px auto' }}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h1\">\n            {sourcesMessage(offlineCount)}\n          </Typography>\n          <Divider style={{ marginBottom: 15, marginTop: 10 }} />\n          <List>\n            {sources.map(source => {\n              const Icon = getIcon(source)\n\n              return (\n                <ListItem key={source.sourceId}>\n                  <ListItemIcon>\n                    <Icon key={source.isAvailable} />\n                  </ListItemIcon>\n                  <ListItemText>\n                    <Typography>{source.sourceId}</Typography>\n                  </ListItemText>\n                </ListItem>\n              )\n            })}\n          </List>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nconst SourcesSelectComponent = props => {\n  const { sources = [], value = [], onChange } = props\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Sources</InputLabel>\n      <Select\n        multiple\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        renderValue={selected => {\n          return selected.join(', ')\n        }}\n      >\n        {sources.map(source => (\n          <MenuItem key={source} value={source}>\n            <Checkbox checked={value.indexOf(source) > -1} />\n            <ListItemText primary={source} />\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nconst SourcesSelectContainer = props => {\n  const { loading, data = {} } = useQuery(sources)\n\n  return (\n    <SourcesSelectComponent\n      {...props}\n      sources={\n        loading\n          ? []\n          : data.sources\n              .filter(source => source.isAvailable)\n              .map(source => source.sourceId)\n      }\n    />\n  )\n}\n\nconst SourcesSelect = props => {\n  const Component = useApolloFallback(\n    SourcesSelectContainer,\n    SourcesSelectComponent\n  )\n\n  return <Component {...props} />\n}\n\nconst pollInterval = gql`\n  query SourcePollInterval {\n    systemProperties {\n      sourcePollInterval\n    }\n  }\n`\n\nconst useSourcePollInterval = init => {\n  const { data, loading, error } = useQuery(pollInterval)\n\n  if (loading || error) {\n    return init\n  }\n\n  return data.systemProperties.sourcePollInterval\n}\n\nexport { SourcesSelect }\n\nexport default () => {\n  const pollInterval = useSourcePollInterval(60000)\n\n  const { loading, data = {} } = useQuery(sources, {\n    pollInterval,\n  })\n\n  return <Sources sources={loading ? [] : data.sources} />\n}\n","import React from 'react'\nimport { storiesOf } from './@storybook/react'\nimport { Sources } from './sources'\nimport { number, select } from '@connexta/ace/@storybook/addon-knobs'\n\nconst stories = storiesOf('Sources', module)\n\nconst available = availability => {\n  if (availability === 'all') {\n    return true\n  }\n  if (availability === 'none') {\n    return false\n  }\n  return Math.random() > 0.5\n}\n\nconst generateSources = (numSources = 0, availability) => {\n  const sources = []\n\n  for (let i = 0; i < numSources; i++) {\n    sources.push({\n      actions: [],\n      isAvailable: available(availability),\n      sourceId: `ddf.distribution.${i}`,\n      cataloguedTypes: [],\n      version: '',\n    })\n  }\n\n  return sources\n}\n\nstories.add('Basic', () => {\n  const n = number('Number of Sources', 4)\n  const availability = select(\n    'Source Availability',\n    {\n      all: 'all',\n      none: 'none',\n      random: 'random',\n    },\n    'all'\n  )\n  return <Sources sources={generateSources(n, availability)} />\n})\n","import { storiesOf } from './@storybook/react'\nimport { number } from '@connexta/ace/@storybook/addon-knobs'\nimport React from 'react'\nimport SpacedLinearContainer from './spaced-linear-container'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\n\nconst stories = storiesOf('SpacedLinearContainer', module)\nstories.addDecorator(Story => <Story />)\n\nstories.add('column direction', () => {\n  const spacing = number('spacing', 1)\n  return (\n    <SpacedLinearContainer\n      style={{ border: '1px solid blue' }}\n      direction=\"column\"\n      spacing={spacing}\n    >\n      <Button variant=\"contained\">A Button</Button>\n      <Box>Some Text</Box>\n      <TextField variant=\"outlined\" label=\"A Text Field\" />\n    </SpacedLinearContainer>\n  )\n})\n\nstories.add('row direction', () => {\n  const spacing = number('spacing', 1)\n  return (\n    <SpacedLinearContainer\n      style={{ border: '1px solid blue' }}\n      direction=\"row\"\n      spacing={spacing}\n    >\n      <Button variant=\"contained\">A Button</Button>\n      <Box>Some Text</Box>\n      <TextField variant=\"outlined\" label=\"A Text Field\" />\n    </SpacedLinearContainer>\n  )\n})\n","import * as React from 'react'\nimport Box from '@material-ui/core/Box'\n\ntype Props = any & {\n  direction: 'row' | 'column'\n  spacing: number\n  children: React.ReactNode\n  childStyle?: object\n}\n\nconst SpacedLinearContainer: React.SFC<Props> = ({\n  direction,\n  spacing,\n  children,\n  childStyle,\n  ...rest\n}) => {\n  const count = React.Children.count(children)\n  const childSpacing = (index: number) => (index < count - 1 ? spacing : 0)\n  const zeroSpacing = () => 0\n  const bottomSpacing = direction === 'column' ? childSpacing : zeroSpacing\n  const rightSpacing = direction === 'row' ? childSpacing : zeroSpacing\n  return (\n    <Box display=\"flex\" flexDirection={direction} {...rest}>\n      {React.Children.map(children, (child: React.ReactNode, index: number) => (\n        <Box\n          mb={bottomSpacing(index)}\n          mr={rightSpacing(index)}\n          style={childStyle}\n        >\n          {child}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nexport default SpacedLinearContainer\ntry {\n    // @ts-ignore\n    spacedlinearcontainer.displayName = \"spacedlinearcontainer\";\n    // @ts-ignore\n    spacedlinearcontainer.__docgenInfo = { \"description\": \"\", \"displayName\": \"spacedlinearcontainer\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/spaced-linear-container.tsx#spacedlinearcontainer\"] = { docgenInfo: spacedlinearcontainer.__docgenInfo, name: \"spacedlinearcontainer\", path: \"src/main/webapp/spaced-linear-container.tsx#spacedlinearcontainer\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { createMuiTheme } from '@material-ui/core/styles'\n\nimport themeDark from './theme-dark.json'\nimport themeLight from './theme-light.json'\n\nconst dark = createMuiTheme(themeDark)\nconst light = createMuiTheme(themeLight)\n\nexport { dark, light }\n","import * as React from 'react'\n\nimport { dark, light } from './theme'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\n\nconst { boolean } = require('@connexta/ace/@storybook/addon-knobs')\n\nconst withTheme = Story => {\n  const darkMode = boolean('Dark Mode', false)\n  const theme = darkMode ? dark : light\n  const background = theme.palette.background.default\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <style>{`body {margin: 0; background: ${background};}`}</style>\n      <Story />\n    </MuiThemeProvider>\n  )\n}\n\nexport default withTheme\n","import React, { useState } from 'react'\n\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage'\n\nconst Thumbnail = props => {\n  const { src } = props\n  const [status, setStatus] = useState('loading')\n  return (\n    <React.Fragment>\n      {status === 'loading' ? <Skeleton variant=\"rect\" height=\"100px\" /> : null}\n      <img\n        style={{\n          display: status === 'success' ? 'block' : 'none',\n          maxHeight: 100,\n          maxWidth: 150,\n        }}\n        src={src}\n        onLoad={() => setStatus('success')}\n        onError={() => setStatus('failed')}\n      />\n      {status === 'failed' ? <BrokenImageIcon fontSize=\"large\" /> : null}\n    </React.Fragment>\n  )\n}\n\nexport default Thumbnail\n","import React from 'react'\nimport Thumbnail from './thumbnail'\nimport { storiesOf } from '../@storybook/react'\nimport { select } from '@connexta/ace/@storybook/addon-knobs'\n\nconst stories = storiesOf('Thumbnail', module)\n\nstories.add('Error', () => {\n  return (\n    <div\n      style={{\n        width: 'calc(100vw - 16px)',\n        height: 'calc(100vh - 16px)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Thumbnail src={'oof'} />\n    </div>\n  )\n})\n\nstories.add('Success', () => {\n  const image = select(\n    'Image Type',\n    {\n      Square: 'https://connexta.com/images/work1.jpg',\n      Long: 'https://connexta.com/images/logo-ddf2.png',\n    },\n    'Square'\n  )\n  return (\n    <div\n      style={{\n        width: 'calc(100vw - 16px)',\n        height: 'calc(100vh - 16px)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Thumbnail src={image} />\n    </div>\n  )\n})\n","import React, { useState } from 'react'\n\nimport DateFnsUtils from '@date-io/date-fns'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers'\n\nimport { Map } from 'immutable'\n\nconst relativeUnits = ['minutes', 'hours', 'days', 'months', 'years']\n\nconst isValidDate = date => {\n  if (date === undefined) {\n    return false\n  }\n\n  if (date === null) {\n    return false\n  }\n\n  if (typeof date === 'string') {\n    return isValidDate(new Date(date))\n  }\n\n  if (date instanceof Date) {\n    return !isNaN(date.valueOf())\n  }\n\n  return false\n}\n\nexport const createTimeRange = timeRange => {\n  const {\n    type = 'BEFORE',\n    value = new Date(),\n    from = new Date(),\n    to = new Date(),\n    last = 1,\n    unit = 'days',\n  } = timeRange\n\n  const cases = {\n    BEFORE: {\n      type,\n      value,\n    },\n    AFTER: {\n      type,\n      value,\n    },\n    DURING: {\n      type,\n      from,\n      to,\n    },\n    '=': {\n      type,\n      last,\n      unit,\n    },\n  }\n\n  return cases[type]\n}\n\nconst TimeRange = props => {\n  const { timeRange, errors = {} } = props\n  const [state, setState] = useState(\n    Map({\n      [timeRange.type]: timeRange,\n    })\n  )\n\n  const setTimeRange = timeRange => {\n    if (typeof props.setTimeRange === 'function') {\n      props.setTimeRange(timeRange)\n    }\n\n    setState(state.set(timeRange.type, timeRange))\n  }\n\n  const TimeRangeWhen = getTimeRangeWhen(timeRange.type)\n\n  return (\n    <div style={{ overflow: 'auto', flex: '1' }}>\n      <div style={{ display: 'flex' }}>\n        <FormControl fullWidth>\n          <InputLabel>Time Range</InputLabel>\n          <Select\n            error={errors.type !== undefined}\n            value={timeRange.type || ''}\n            onChange={e => {\n              const type = e.target.value\n              const prev = state.get(type)\n              const tr = createTimeRange({ ...prev, type })\n              setTimeRange(tr)\n            }}\n          >\n            <MenuItem value={'AFTER'}>After</MenuItem>\n            <MenuItem value={'BEFORE'}>Before</MenuItem>\n            <MenuItem value={'DURING'}>Between</MenuItem>\n            <MenuItem value={'='}>Relative</MenuItem>\n          </Select>\n          <FormHelperText error={errors.type !== undefined}>\n            {errors.type}\n          </FormHelperText>\n        </FormControl>\n      </div>\n\n      <TimeRangeWhen\n        type={timeRange.type}\n        timeRange={timeRange}\n        setTimeRange={setTimeRange}\n        errors={errors}\n      />\n    </div>\n  )\n}\n\nconst createTimeRangeComponent = label => props => {\n  const { timeRange = {}, setTimeRange, errors = {} } = props\n\n  return (\n    <DatePicker\n      label={label}\n      value={timeRange.value}\n      error={errors.value !== undefined}\n      helperText={errors.value}\n      onChange={date => {\n        setTimeRange({\n          type: timeRange.type,\n          value: date,\n        })\n      }}\n    />\n  )\n}\n\nconst TimeRangeAfter = createTimeRangeComponent(\n  'Limit search to after this time'\n)\nconst TimeRangeBefore = createTimeRangeComponent(\n  'Limit search to before this time'\n)\n\nconst TimeRangeDuring = props => {\n  const { timeRange = {}, setTimeRange, errors = {} } = props\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <DatePicker\n        label=\"From\"\n        error={errors.from !== undefined}\n        helperText={errors.from}\n        value={timeRange.from}\n        onChange={date => {\n          const value = `${date}/${timeRange.to}`\n          setTimeRange({ ...timeRange, from: date, value })\n        }}\n      />\n      <div style={{ width: 20 }} />\n      <DatePicker\n        label=\"To\"\n        error={errors.to !== undefined}\n        helperText={errors.to}\n        value={timeRange.to}\n        onChange={date => {\n          timeRange.to = date\n          const value = `${timeRange.from}/${date}`\n          setTimeRange({ ...timeRange, to: date, value })\n        }}\n      />\n    </div>\n  )\n}\n\nconst TimeRangeRelative = props => {\n  const { timeRange = {}, setTimeRange, errors = {} } = props\n\n  return (\n    <div style={{ overflow: 'auto', flex: '1', paddingTop: 10 }}>\n      <div style={{ display: 'flex' }}>\n        <div>\n          <TextField\n            label=\"Last\"\n            error={errors.last !== undefined}\n            variant=\"outlined\"\n            fullWidth\n            value={timeRange.last}\n            onChange={e => {\n              setTimeRange({\n                type: timeRange.type,\n                last: e.target.value,\n                unit: timeRange.unit,\n              })\n            }}\n          />\n          <FormHelperText error={errors.last !== undefined}>\n            {errors.last}\n          </FormHelperText>\n        </div>\n        <div style={{ width: 20 }} />\n        <FormControl fullWidth>\n          <InputLabel>Unit</InputLabel>\n          <Select\n            value={timeRange.unit}\n            error={errors.unit !== undefined}\n            onChange={e => {\n              setTimeRange({\n                type: timeRange.type,\n                last: timeRange.last,\n                unit: e.target.value,\n              })\n            }}\n          >\n            <MenuItem value={`minutes`}>Minutes</MenuItem>\n            <MenuItem value={`hours`}>Hours</MenuItem>\n            <MenuItem value={`days`}>Days</MenuItem>\n            <MenuItem value={`months`}>Months</MenuItem>\n            <MenuItem value={`years`}>Years</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    </div>\n  )\n}\n\nconst DatePicker = props => {\n  const { value, onChange, label, error, helperText } = props\n  const [state, setState] = useState(value)\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        error={error}\n        helperText={helperText}\n        fullWidth\n        disableToolbar\n        variant=\"inline\"\n        format=\"MM/dd/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label={label}\n        value={state}\n        onChange={(date, value) => {\n          if (isValidDate(date)) {\n            onChange(date.toISOString())\n          } else {\n            onChange('')\n          }\n          setState(value)\n        }}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  )\n}\n\nconst Empty = () => null\n\nconst ranges = {\n  AFTER: TimeRangeAfter,\n  BEFORE: TimeRangeBefore,\n  DURING: TimeRangeDuring,\n  '=': TimeRangeRelative,\n}\n\nconst getTimeRangeWhen = type => {\n  return ranges[type] || Empty\n}\n\nexport const validate = (timeRange = {}) => {\n  const errors = {}\n\n  const { type, value } = timeRange\n\n  switch (type) {\n    case undefined:\n      errors.type = 'Type must supplied'\n      break\n\n    case 'DURING': {\n      const { to, from } = timeRange\n      if (!isValidDate(to)) {\n        errors.to = `'To' date must be a valid date`\n      }\n\n      if (!isValidDate(from)) {\n        errors.from = `'From' date must be a valid date`\n      }\n\n      if (from && to) {\n        if (from >= to) {\n          errors.to = `'To' date must be after 'From' date`\n          errors.from = `'From' date must be before 'To' date`\n        }\n      }\n      break\n    }\n\n    case '=': {\n      const { last, unit } = timeRange\n      if (isNaN(last) || last <= 0) {\n        errors.last = 'Value must be > 0'\n      }\n\n      if (!relativeUnits.includes(unit)) {\n        errors.unit = 'Must include a valid unit'\n      }\n      break\n    }\n\n    default:\n      if (!isValidDate(value)) {\n        errors.value = `A valid date must be selected`\n      }\n  }\n\n  return errors\n}\n\nexport default TimeRange\nexport { TimeRangeAfter, TimeRangeBefore, TimeRangeDuring, TimeRangeRelative }\n","import React from 'react'\nimport { storiesOf } from './@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\nimport TimeRange, { validate } from './time-range'\n\nconst stories = storiesOf('TimeRange', module)\n\nstories.add('basic', () => {\n  const [timeRange, setTimeRange] = React.useState({})\n  return (\n    <TimeRange\n      timeRange={timeRange}\n      setTimeRange={timeRange => {\n        setTimeRange(timeRange)\n        action('setTimeRange')(timeRange)\n      }}\n    />\n  )\n})\n\nstories.add('validation', () => {\n  const [timeRange, setTimeRange] = React.useState({})\n  return (\n    <TimeRange\n      timeRange={timeRange}\n      setTimeRange={timeRange => {\n        setTimeRange(timeRange)\n        action('setTimeRange')(timeRange)\n      }}\n      errors={validate(timeRange)}\n    />\n  )\n})\n","import { useQuery } from '@apollo/react-hooks'\nimport Dialog from '@material-ui/core/Dialog'\nimport FormControl from '@material-ui/core/FormControl'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport List from '@material-ui/core/List'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport gql from 'graphql-tag'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport Inspector from '../inspector'\nimport { useApolloFallback } from '../react-hooks'\n\nconst resultQuery = gql`\n  query ResultQuery($ids: [ID]!) {\n    metacardsById(ids: $ids) {\n      results {\n        metacard\n        actions {\n          description\n          displayName\n          id\n          title\n          url\n        }\n      }\n    }\n  }\n`\n\nconst Loading = () => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <LinearProgress style={{ width: '25vw', height: 10 }} />\n    </div>\n  )\n}\n\nconst ResultInfoError = props => (\n  <Dialog open onClose={props.onClose}>\n    Error\n  </Dialog>\n)\n\nconst ResultInfoContainer = props => {\n  const { loading, data, error } = useQuery(resultQuery, {\n    variables: { id: props.selected },\n  })\n\n  if (error) {\n    return <ResultInfoError />\n  }\n\n  return (\n    <Dialog open onClose={props.onClose}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Inspector\n          results={\n            data.metacardsById.results.length > 0\n              ? data.metacardsById.results[0]\n              : null\n          }\n        />\n      )}\n    </Dialog>\n  )\n}\n\nconst HideAll = props => (\n  <MenuItem onClick={props.onClick}>\n    <VisibilityIcon />\n    <div style={{ width: 20 }} />\n    <ListItemText>Unhide All</ListItemText>\n  </MenuItem>\n)\n\nconst BlacklistItem = props => (\n  <FormControl fullWidth style={{ display: 'flex' }}>\n    <MenuItem>\n      <ListItemText\n        onClick={props.onClick}\n        style={{\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          textAlign: 'center',\n        }}\n      >\n        {props.children}\n      </ListItemText>\n      <IconButton onClick={props.onDelete}>\n        <VisibilityIcon />\n      </IconButton>\n    </MenuItem>\n  </FormControl>\n)\n\nconst HiddenSettings = (props = {}) => {\n  const { value = Map(), onChange } = props\n  const { resultBlacklist = [] } = value.toJSON()\n  const [selected, setSelected] = React.useState(null)\n\n  const ResultInfoComponent = useApolloFallback(\n    ResultInfoContainer,\n    ResultInfoError\n  )\n  return (\n    <React.Fragment>\n      {selected && (\n        <ResultInfoComponent\n          selected={selected}\n          onClose={() => setSelected(null)}\n        />\n      )}\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        {resultBlacklist.length > 0 ? (\n          <HideAll\n            onClick={() => props.onChange(value.set('resultBlacklist', []))}\n          />\n        ) : (\n          <Typography>Nothing Hidden.</Typography>\n        )}\n      </div>\n\n      <List>\n        {resultBlacklist.map(({ id, title }) => {\n          return (\n            <BlacklistItem\n              key={id}\n              onClick={() => setSelected(id)}\n              onDelete={() => {\n                onChange(\n                  value.set(\n                    'resultBlacklist',\n                    value\n                      .get('resultBlacklist')\n                      .filter(result => result.id !== id)\n                  )\n                )\n              }}\n            >\n              {title}\n            </BlacklistItem>\n          )\n        })}\n      </List>\n    </React.Fragment>\n  )\n}\n\nexport default HiddenSettings\n","import FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport OutlinedSelect from '../input/outlined-select'\n\nconst millisecondsInDay = 24 * 60 * 60 * 1000\nconst durations = [\n  {\n    label: '1 Day',\n    value: millisecondsInDay,\n  },\n  {\n    label: '2 Days',\n    value: 2 * millisecondsInDay,\n  },\n  {\n    label: '4 Days',\n    value: 4 * millisecondsInDay,\n  },\n  {\n    label: '1 Week',\n    value: 7 * millisecondsInDay,\n  },\n  {\n    label: '2 Weeks',\n    value: 14 * millisecondsInDay,\n  },\n  {\n    label: '1 Month',\n    value: 30 * millisecondsInDay,\n  },\n  {\n    label: '2 Months',\n    value: 60 * millisecondsInDay,\n  },\n  {\n    label: '4 Months',\n    value: 120 * millisecondsInDay,\n  },\n  {\n    label: '6 Months',\n    value: 180 * millisecondsInDay,\n  },\n  {\n    label: '1 Year',\n    value: 365 * millisecondsInDay,\n  },\n]\n\nconst NotificationSettings = (props = {}) => {\n  const { value = Map(), onChange } = props\n  const { alertPersistence, alertExpiration } = value.toJSON()\n\n  return (\n    <React.Fragment>\n      <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n        <OutlinedSelect\n          label=\"Keep notifications after logging out\"\n          value={alertPersistence}\n          onChange={e =>\n            onChange(value.set('alertPersistence', e.target.value))\n          }\n        >\n          <MenuItem key={true} value={true}>\n            Yes\n          </MenuItem>\n          <MenuItem key={false} value={false}>\n            No\n          </MenuItem>\n        </OutlinedSelect>\n      </FormControl>\n\n      {alertPersistence && (\n        <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n          <OutlinedSelect\n            label=\"Expire After\"\n            value={alertExpiration}\n            onChange={e =>\n              onChange(value.set('alertExpiration', e.target.value))\n            }\n          >\n            {durations.map(duration => (\n              <MenuItem key={duration.value} value={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </OutlinedSelect>\n        </FormControl>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default NotificationSettings\n","import { useQuery } from '@apollo/react-hooks'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport gql from 'graphql-tag'\nimport { getIn } from 'immutable'\nimport React from 'react'\nimport OutlinedSelect from '../input/outlined-select'\nimport { useApolloFallback } from '../react-hooks'\n\nconst resultForms = gql`\n  query SearchForms {\n    metacardsByTag(tag: \"attribute-group\") {\n      attributes {\n        id\n        title\n      }\n    }\n  }\n`\n\nconst ResultForms = props => {\n  return (\n    <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n      <OutlinedSelect\n        label=\"Result Form\"\n        value={props.value || 0}\n        onChange={e => {\n          props.onChange(e.target.value !== 0 ? e.target.value : null)\n        }}\n      >\n        <MenuItem key={'allFields'} value={0}>\n          All Fields\n        </MenuItem>\n\n        {props.resultForms &&\n          props.resultForms.map(resultForm => (\n            <MenuItem key={resultForm.id} value={resultForm.title}>\n              {resultForm.title}\n            </MenuItem>\n          ))}\n      </OutlinedSelect>\n    </FormControl>\n  )\n}\n\nconst Container = props => {\n  const { error, data, loading } = useQuery(resultForms)\n\n  return loading || error ? null : (\n    <ResultForms\n      {...props}\n      resultForms={getIn(data, ['metacardsByTag', 'attributes'])}\n    />\n  )\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, ResultForms)\n  return <Component {...props} />\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport Slider from '@material-ui/core/Slider'\nimport Typography from '@material-ui/core/Typography'\nimport { get, getIn, Map, set, setIn, merge } from 'immutable'\nimport React from 'react'\nimport SortOrder from '../sort-order'\nimport ResultFormSelect from './result-form-select'\nimport SourceSelect from './source-select'\n\nconst Spacing = () => <div style={{ marginTop: 20 }} />\nconst Defaults = props => (\n  <React.Fragment>\n    <Spacing />\n    <Typography variant=\"h6\" component=\"h2\">\n      Defaults\n    </Typography>\n\n    <SortOrder\n      value={getIn(props.value, ['querySettings', 'sorts'])}\n      onChange={sortOrder =>\n        props.onChange(\n          setIn(props.value, ['querySettings', 'sorts'], sortOrder)\n        )\n      }\n    />\n    <Spacing />\n    <SourceSelect\n      value={getIn(props.value, ['querySettings', 'src'])}\n      onChange={newValue => {\n        const querySettings = merge(get(props.value, 'querySettings'), {\n          federation: newValue !== null ? 'selected' : 'enterprise',\n          src: newValue,\n        })\n\n        props.onChange(set(props.value, 'querySettings', querySettings))\n      }}\n    />\n    <Spacing />\n    <ResultFormSelect\n      value={getIn(props.value, ['querySettings', 'detail_level'])}\n      onChange={newValue =>\n        props.onChange(\n          setIn(props.value, ['querySettings', 'detail_level'], newValue)\n        )\n      }\n    />\n  </React.Fragment>\n)\n\nconst SearchSettings = (props = {}) => {\n  const { value = Map(), systemProperties = {}, onChange } = props\n  const resultCount = get(value, 'resultCount')\n\n  const onSliderChange = (_, newValue) => {\n    onChange(set(value, 'resultCount', newValue))\n  }\n\n  return (\n    <React.Fragment>\n      <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n        <Typography>Number of Search Results</Typography>\n        <Typography>{resultCount}</Typography>\n        <Slider\n          max={systemProperties.resultCount}\n          defaultValue={systemProperties.resultCount}\n          value={resultCount}\n          onChange={onSliderChange}\n        />\n      </FormControl>\n      <Defaults value={value} onChange={props.onChange} />\n    </React.Fragment>\n  )\n}\n\nexport default SearchSettings\n","import { useQuery } from '@apollo/react-hooks'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport HomeIcon from '@material-ui/icons/Home'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { get } from 'immutable'\nimport React from 'react'\nimport OutlinedSelect from '../input/outlined-select'\nimport { useApolloFallback } from '../react-hooks'\nimport { sources } from '../sources'\n\nconst sourcesSort = (source1, source2) => {\n  return source1.local ? -1 : source1.id <= source2.id\n}\n\nconst Source = props => {\n  const {\n    source: { sourceId, local, isAvailable },\n    selected,\n  } = props\n  return (\n    <React.Fragment>\n      <Checkbox checked={selected} />\n      <ListItemIcon>{local ? <HomeIcon /> : <CloudIcon />}</ListItemIcon>\n\n      <ListItemText\n        style={{\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n        }}\n        primary={sourceId}\n      />\n\n      {!isAvailable && (\n        <ListItemIcon>\n          <WarningIcon />\n        </ListItemIcon>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst Sources = props => {\n  return (\n    <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n      <OutlinedSelect\n        multiple\n        label=\"Sources\"\n        value={props.value || [0]}\n        onChange={e => {\n          props.onChange(\n            e.target.value.includes(0) && props.value !== null\n              ? null\n              : e.target.value.filter(source => source !== 0)\n          )\n        }}\n        renderValue={selected =>\n          selected.includes(0) ? `All Sources` : selected.join(', ')\n        }\n      >\n        <MenuItem key={'allFields'} value={0}>\n          <Checkbox checked={props.value === null} />\n          <ListItemText primary={`All Sources`} />\n        </MenuItem>\n\n        {props.sources &&\n          props.sources.sort(sourcesSort).map(source => {\n            const selected =\n              props.value !== null && props.value.includes(source.sourceId)\n            return (\n              <MenuItem key={source.sourceId} value={source.sourceId}>\n                <Source source={source} selected={selected} />\n              </MenuItem>\n            )\n          })}\n      </OutlinedSelect>\n    </FormControl>\n  )\n}\n\nconst Container = props => {\n  const { error, data, loading } = useQuery(sources)\n  return loading || error ? null : (\n    <Sources {...props} sources={get(data, 'sources')} />\n  )\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, Sources)\n  return <Component {...props} />\n}\n","import React from 'react'\n\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\nconst path = ['theme', 'theme']\n\nexport default props => {\n  const { value, onChange, onSave } = props\n  const darkMode = value.getIn(path) === 'dark'\n\n  const setTheme = theme => {\n    const preferences = value.setIn(path, theme)\n    onChange(preferences)\n    onSave(preferences)\n  }\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch\n            color=\"primary\"\n            checked={darkMode}\n            onChange={(_, checked) => {\n              setTheme(checked ? 'dark' : 'sea')\n            }}\n          />\n        }\n        label=\"Dark Mode\"\n      />\n    </FormGroup>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport { Map } from 'immutable'\nimport moment from 'moment'\nimport momentTimezone from 'moment-timezone'\nimport React from 'react'\nimport OutlinedSelect from '../input/outlined-select'\n\nconst useCurrentTime = (datetimefmt, timeZone) => {\n  const [currentTime, setCurrentTime] = React.useState(\n    momentTimezone.tz(moment(), timeZone).format(datetimefmt)\n  )\n\n  React.useEffect(\n    () => {\n      const interval = setInterval(() => {\n        setCurrentTime(\n          momentTimezone.tz(moment(), timeZone).format(datetimefmt)\n        )\n      }, 50)\n      return () => clearInterval(interval)\n    },\n    [datetimefmt, timeZone]\n  )\n\n  return currentTime\n}\n\nconst CurrentTime = props => {\n  const currentTime = useCurrentTime(props.format, props.timeZone)\n  return (\n    <div style={{ marginTop: 10 }}>\n      <Typography variant=\"h6\">Current Time (example)</Typography>\n      <Typography>{currentTime}</Typography>\n    </div>\n  )\n}\n\nconst timeZoneMap = {\n  UTC: 'Etc/UTC',\n  '-12': 'Etc/GMT+12',\n  '-11': 'Etc/GMT+11',\n  '-10': 'Etc/GMT+10',\n  '-9': 'Etc/GMT+9',\n  '-8': 'Etc/GMT+8',\n  '-7': 'Etc/GMT+7',\n  '-6': 'Etc/GMT+6',\n  '-5': 'Etc/GMT+5',\n  '-4': 'Etc/GMT+4',\n  '-3': 'Etc/GMT+3',\n  '-2': 'Etc/GMT+2',\n  '-1': 'Etc/GMT+1',\n  '1': 'Etc/GMT-1',\n  '2': 'Etc/GMT-2',\n  '3': 'Etc/GMT-3',\n  '4': 'Etc/GMT-4',\n  '5': 'Etc/GMT-5',\n  '6': 'Etc/GMT-6',\n  '7': 'Etc/GMT-7',\n  '8': 'Etc/GMT-8',\n  '9': 'Etc/GMT-9',\n  '10': 'Etc/GMT-10',\n  '11': 'Etc/GMT-11',\n  '12': 'Etc/GMT-12',\n}\n\nconst getTimeZoneFor = (sign, value) => {\n  if (sign === '+') return timeZoneMap[value]\n\n  return timeZoneMap[`${sign}${value}`]\n}\n\nconst generateTimeZones = (sign, rangeLimit) =>\n  Array(rangeLimit)\n    .fill(rangeLimit)\n    .map((_, index) => ({\n      label: `${sign}${index + 1}:00`,\n      value: getTimeZoneFor(sign, index + 1),\n    }))\n\nconst timeZones = [\n  ...generateTimeZones('+', 12),\n  {\n    label: 'UTC, +00:00',\n    value: timeZoneMap['UTC'],\n  },\n  ...generateTimeZones('-', 12),\n]\n\nconst dateTimeFormatsMap = {\n  ISO: { datetimefmt: 'YYYY-MM-DD[T]HH:mm:ss.SSSZ', timefmt: 'HH:mm:ssZ' },\n  24: { datetimefmt: 'DD MMM YYYY HH:mm:ss.SSS Z', timefmt: 'HH:mm:ss Z' },\n  12: { datetimefmt: 'DD MMM YYYY h:mm:ss.SSS a Z', timefmt: 'h:mm:ss a Z' },\n}\n\nconst dateTimeFormats = [\n  {\n    label: 'ISO 8601',\n    format: dateTimeFormatsMap['ISO'],\n  },\n  {\n    label: '24 Hour Standard',\n    format: dateTimeFormatsMap['24'],\n  },\n  {\n    label: '12 Hour Standard',\n    format: dateTimeFormatsMap['12'],\n  },\n]\n\nconst TimeSettings = (props = {}) => {\n  const { value = Map(), onChange } = props\n  const {\n    timeZone,\n    dateTimeFormat: { datetimefmt, timefmt } = {},\n  } = value.toJSON()\n\n  const format = dateTimeFormats.findIndex(\n    ({ format }) =>\n      format.datetimefmt === datetimefmt && format.timefmt === timefmt\n  )\n\n  return (\n    <React.Fragment>\n      <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n        <OutlinedSelect\n          label=\"Time Zone\"\n          value={timeZone}\n          onChange={e => onChange(value.set('timeZone', e.target.value))}\n        >\n          {timeZones.map(timezone => (\n            <MenuItem key={timezone.value} value={timezone.value}>\n              {timezone.label}\n            </MenuItem>\n          ))}\n        </OutlinedSelect>\n      </FormControl>\n\n      <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n        <OutlinedSelect\n          label=\"Time Format\"\n          value={format}\n          onChange={e =>\n            onChange(\n              value.set(\n                'dateTimeFormat',\n                dateTimeFormats[e.target.value].format\n              )\n            )\n          }\n        >\n          {dateTimeFormats.map((timeFormat, index) => (\n            <MenuItem key={index} value={index}>\n              {timeFormat.label}\n            </MenuItem>\n          ))}\n        </OutlinedSelect>\n      </FormControl>\n\n      <CurrentTime format={datetimefmt} timeZone={timeZone} />\n    </React.Fragment>\n  )\n}\n\nexport default TimeSettings\n","import { useMutation, useQuery } from '@apollo/react-hooks'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport AccessibleForwardIcon from '@material-ui/icons/AccessibleForward'\nimport BackArrowIcon from '@material-ui/icons/ArrowBackIos'\nimport BrushIcon from '@material-ui/icons/Brush'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport PublicIcon from '@material-ui/icons/Public'\nimport ScheduleIcon from '@material-ui/icons/Schedule'\nimport SearchIcon from '@material-ui/icons/Search'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\nimport gql from 'graphql-tag'\nimport { fromJS, Map } from 'immutable'\nimport React from 'react'\nimport { useApolloFallback } from '../react-hooks'\nimport { mergeDeepOverwriteLists } from '../utils'\nimport HiddenResultsSettings from './hidden-results-settings'\nimport NotificationSettings from './notification-settings'\nimport SearchSettings from './search-settings'\nimport TimeSettings from './time-settings'\nimport ThemeSettings from './theme-settings'\n\nconst generateSetting = (title, Icon = AccessibleForwardIcon, component) => {\n  return {\n    title,\n    Icon,\n    component:\n      component ||\n      (() => {\n        return <h2>{title}</h2>\n      }),\n  }\n}\n\nconst settings = [\n  generateSetting('Theme', BrushIcon, ThemeSettings),\n  generateSetting('Notifications', NotificationsIcon, NotificationSettings),\n  generateSetting('Map', PublicIcon),\n  generateSetting('Search Options', SearchIcon, SearchSettings),\n  generateSetting('Time', ScheduleIcon, TimeSettings),\n  generateSetting('Hidden', VisibilityOffIcon, HiddenResultsSettings),\n]\n\nconst AllSettings = props => (\n  <List>\n    {settings.map((setting, index) => {\n      const { title, Icon } = setting\n      return (\n        <MenuItem key={index} onClick={() => props.onClick(setting)}>\n          <ListItemIcon>\n            <Icon />\n          </ListItemIcon>\n          <ListItemText>{title}</ListItemText>\n        </MenuItem>\n      )\n    })}\n  </List>\n)\n\nconst DrawerContent = props => {\n  if (props.children) {\n    return (\n      <div\n        style={{\n          padding: 20,\n        }}\n      >\n        {props.children}\n      </div>\n    )\n  }\n\n  return <AllSettings onClick={props.onSelect} />\n}\n\nconst BackButton = props => (\n  <MenuItem onClick={props.onClick} style={{ textAlign: 'left' }}>\n    <ListItemIcon>\n      <BackArrowIcon />\n    </ListItemIcon>\n    <ListItemText>\n      <Typography variant=\"h6\">Back to Settings</Typography>\n    </ListItemText>\n  </MenuItem>\n)\n\nconst Navigation = props => {\n  const Top = () =>\n    props.navigate ? (\n      <BackButton {...props} />\n    ) : (\n      <Typography style={{ marginLeft: 20 }} variant=\"h6\">\n        {`Settings`}\n      </Typography>\n    )\n\n  return (\n    <React.Fragment>\n      <Top />\n      <Divider style={{ marginTop: 10, marginBottom: 15 }} />\n\n      {props.children}\n    </React.Fragment>\n  )\n}\n\nconst UserSettingsDrawer = props => {\n  const { open, onClose, navigate, onNavigate } = props\n  return (\n    <Drawer\n      ModalProps={{ disableEnforceFocus: true }}\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n    >\n      <div style={{ width: 360, marginTop: 20 }}>\n        <Navigation navigate={navigate} onClick={onNavigate}>\n          {props.children}\n        </Navigation>\n      </div>\n    </Drawer>\n  )\n}\n\nconst UserSettings = props => {\n  const [open, setOpen] = React.useState(props.open)\n  const [selected, setSelected] = React.useState({})\n  const [preferences, setPreferences] = React.useState(props.value)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const onSave = preferences => {\n    props.onSave(preferences.toJSON())\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n    setSelected({})\n    onSave(preferences)\n  }\n\n  const Component = selected.component ? selected.component : null\n  const drawerProps = {\n    open,\n    onClose: handleDrawerClose,\n    navigate: selected.component !== undefined,\n    onNavigate: () => setSelected({}),\n  }\n  return (\n    <React.Fragment>\n      <IconButton edge=\"end\" color=\"inherit\" onClick={handleDrawerOpen}>\n        <SettingsIcon />\n      </IconButton>\n      <UserSettingsDrawer {...drawerProps}>\n        <DrawerContent\n          onSelect={selected => {\n            setSelected(selected)\n          }}\n        >\n          {Component && (\n            <Component\n              value={preferences}\n              onChange={newPreferences => {\n                setPreferences(newPreferences)\n              }}\n              onSave={onSave}\n              systemProperties={props.systemProperties}\n            />\n          )}\n        </DrawerContent>\n      </UserSettingsDrawer>\n    </React.Fragment>\n  )\n}\n\nconst mutation = gql`\n  mutation updateUserPreferences($userPreferences: Json) {\n    updateUserPreferences(userPreferences: $userPreferences)\n  }\n`\n\nconst query = gql`\n  query UserPreferences {\n    user {\n      preferences {\n        alertExpiration\n        alertPersistence\n        dateTimeFormat {\n          datetimefmt\n          timefmt\n        }\n        resultBlacklist {\n          id\n          title\n        }\n        resultCount\n        theme {\n          theme\n        }\n        timeZone\n        querySettings {\n          src\n          federation\n          sorts {\n            attribute\n            direction\n          }\n          detail_level\n        }\n      }\n    }\n    systemProperties {\n      resultCount\n    }\n  }\n`\n\nconst Container = () => {\n  const { error, data, loading } = useQuery(query)\n  const [updateUserPreferences] = useMutation(mutation, {\n    update: (cache, { data: { updateUserPreferences } }) => {\n      const { systemProperties } = cache.readQuery({ query })\n\n      cache.writeQuery({\n        query,\n        data: {\n          user: {\n            preferences: updateUserPreferences,\n            __typename: 'UserPreferences',\n          },\n          systemProperties,\n        },\n      })\n    },\n  })\n  return loading || error ? null : (\n    <UserSettings\n      value={Map(data.user.preferences)}\n      systemProperties={data.systemProperties}\n      onSave={userPreferences => {\n        //preserve __typename fields\n        const newPreferences = mergeDeepOverwriteLists(\n          fromJS(data.user.preferences),\n          fromJS(userPreferences)\n        )\n\n        if (!fromJS(data.user.preferences).equals(newPreferences)) {\n          const userPreferences = newPreferences.toJS()\n          updateUserPreferences({\n            variables: { userPreferences },\n            optimisticResponse: {\n              updateUserPreferences: userPreferences,\n            },\n          })\n        }\n      }}\n    />\n  )\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, UserSettings)\n  return <Component {...props} />\n}\n","import { action } from '@connexta/ace/@storybook/addon-actions'\nimport { boolean } from '@connexta/ace/@storybook/addon-knobs'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport { storiesOf } from '../@storybook/react'\nimport useState from '../@storybook/use-state'\nimport HiddenResultsSettings from './hidden-results-settings'\nimport NotificationSettings from './notification-settings'\nimport SearchSettings from './search-settings'\nimport SourceSelect from './source-select'\nimport TimeSettings from './time-settings'\nimport Settings from './user-settings'\n\nconst stories = storiesOf('User Settings', module)\n\nconst sampleBlackList = [\n  {\n    id: '08ce4b7e641149b58ad47ec665d87a40',\n    title: 'Result 1',\n  },\n  {\n    id: '1f130107e85a481d835b86cd90a80355',\n    title:\n      'Result 2 (Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title) ',\n  },\n]\n\nconst HiddenResults = () => {\n  const populated = boolean('Populated', true)\n  const [state, setState] = React.useState(Map({}))\n  React.useEffect(\n    () => setState(Map(populated ? { resultBlacklist: sampleBlackList } : {})),\n    [populated]\n  )\n\n  return (\n    <HiddenResultsSettings\n      value={state}\n      onChange={newState => {\n        setState(newState)\n        action('onChange')(newState)\n      }}\n    />\n  )\n}\n\nconst UserSettings = () => {\n  const [state, setState] = React.useState(Map({}))\n  const open = boolean('Open Drawer', true)\n  return (\n    <Settings\n      open={open}\n      value={state}\n      onSave={newState => {\n        setState(newState)\n        action('onSave')(newState)\n      }}\n    />\n  )\n}\n\nstories.add('Notification Settings', () => {\n  const [value, onChange] = useState(\n    Map({ alertPersistence: true, alertExpiration: 2592000000 })\n  )\n  return <NotificationSettings value={value} onChange={onChange} />\n})\n\nstories.add('Search Settings', () => {\n  const [value, onChange] = useState()\n  return <SearchSettings value={value} onChange={onChange} />\n})\n\nstories.add('Time Settings', () => {\n  const [value, onChange] = useState(\n    Map({\n      dateTimeFormat: {\n        datetimefmt: 'DD MMM YYYY h:mm:ss.SSS a Z',\n        timefmt: 'h:mm:ss a Z',\n      },\n      timeZone: 'Etc/UTC',\n    })\n  )\n  return <TimeSettings value={value} onChange={onChange} />\n})\n\nstories.add('Hidden Results Settings', () => <HiddenResults />)\n\nstories.add('Source Select', () => {\n  const sources = [\n    {\n      isAvailable: false,\n      sourceId: 'Source1',\n      local: false,\n    },\n    {\n      isAvailable: true,\n      sourceId: 'ddf.distribution',\n      local: true,\n    },\n    {\n      isAvailable: true,\n      sourceId: 'Source2',\n      local: false,\n    },\n  ]\n  const [value, onChange] = useState(['Source1', 'Source2'])\n  return <SourceSelect value={value} onChange={onChange} sources={sources} />\n})\n\nstories.add('User Settings', () => <UserSettings />)\n","import { useQuery } from '@apollo/react-hooks'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport PersonIcon from '@material-ui/icons/Person'\nimport gql from 'graphql-tag'\nimport React from 'react'\nimport { useApolloFallback } from './react-hooks'\nimport Cookies from 'universal-cookie'\n\nconst UserDrawer = props => (\n  <Drawer\n    ModalProps={{ disableEnforceFocus: true }}\n    anchor=\"right\"\n    open={props.open}\n    onClose={props.onClose}\n  >\n    {props.children}\n  </Drawer>\n)\n\nconst UserInfo = props => (\n  <div\n    style={{\n      width: 360,\n      marginTop: 20,\n      marginLeft: 20,\n      overflow: 'auto',\n    }}\n  >\n    <ListItemText>\n      <Typography variant=\"h6\">{props.username}</Typography>\n    </ListItemText>\n    <ListItemText>{props.email}</ListItemText>\n  </div>\n)\n\nconst User = props => {\n  const { email, isGuest, username } = props.value\n  const [open, setOpen] = React.useState(props.open)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  const signOut = () => {\n    const cookies = new Cookies()\n    cookies.remove('RSESSION', { path: '/' })\n    location.reload(true)\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        color=\"inherit\"\n        style={{ textTransform: 'none' }}\n        onClick={handleDrawerOpen}\n      >\n        <PersonIcon />\n        <Typography variant=\"h6\">{username}</Typography>\n      </Button>\n\n      <UserDrawer open={open} onClose={handleDrawerClose}>\n        <UserInfo email={email} username={username} />\n        <Divider style={{ marginTop: 10, marginBottom: 15 }} />\n        {isGuest ? null : (\n          <Button color=\"secondary\" onClick={signOut}>{`Sign Out`}</Button>\n        )}\n      </UserDrawer>\n    </React.Fragment>\n  )\n}\n\nconst query = gql`\n  query User {\n    user {\n      email\n      isGuest\n      username\n    }\n  }\n`\n\nconst Container = () => {\n  const { error, data, loading } = useQuery(query)\n  return loading || error ? null : <User value={data.user} />\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, User)\n  return <Component {...props} />\n}\n","import { boolean, text } from '@connexta/ace/@storybook/addon-knobs'\nimport React from 'react'\nimport { storiesOf } from './@storybook/react'\nimport User from './user'\n\nconst stories = storiesOf('User', module)\n\nconst Component = props => {\n  const open = boolean('Open Drawer', true)\n\n  return <User open={open} value={props.value} />\n}\nstories.add('basic', () => {\n  const value = {\n    username: text('Username', 'admin'),\n    email: text('Email', 'admin@localhost.local'),\n    isGuest: boolean('Is Guest', false),\n  }\n  return <Component value={value} />\n})\n","import DateFnsUtils from '@date-io/date-fns'\nconst dateUtil = new DateFnsUtils()\n\n// copied from Common.js in DDF\nexport const getFileSize = item => {\n  if (item == undefined || item == null) {\n    return ''\n  }\n  const givenProductSize = item.replace(/[,]+/g, '').trim()\n  //remove any commas and trailing whitespace\n  const bytes = parseInt(givenProductSize, 10)\n  const noUnitsGiven = /[0-9]$/\n  //number without a word following\n  const reformattedProductSize = givenProductSize.replace(/\\s\\s+/g, ' ')\n  //remove extra whitespaces\n  const finalFormatProductSize = reformattedProductSize.replace(\n    /([0-9])([a-zA-Z])/g,\n    '$1 $2'\n  )\n  //make sure there is exactly one space between number and unit\n  const sizeArray = finalFormatProductSize.split(' ')\n  //splits size into number and unit\n  if (isNaN(bytes)) {\n    return 'Unknown Size'\n  }\n  if (noUnitsGiven.test(givenProductSize)) {\n    //need to parse number given and add units, number is assumed to be bytes\n    let size,\n      index,\n      type = ['bytes', 'KB', 'MB', 'GB', 'TB']\n    if (bytes === 0) {\n      return '0 bytes'\n    } else {\n      index = Math.floor(Math.log(bytes) / Math.log(1024))\n      if (index > 4) {\n        index = 4\n      }\n      size = (bytes / Math.pow(1024, index)).toFixed(index < 2 ? 0 : 1)\n    }\n    return size + ' ' + type[index]\n  } else {\n    //units were included with size\n    switch (sizeArray[1].toLowerCase()) {\n      case 'bytes':\n        return sizeArray[0] + ' bytes'\n      case 'b':\n        return sizeArray[0] + ' bytes'\n      case 'kb':\n        return sizeArray[0] + ' KB'\n      case 'kilobytes':\n        return sizeArray[0] + ' KB'\n      case 'kbytes':\n        return sizeArray[0] + ' KB'\n      case 'mb':\n        return sizeArray[0] + ' MB'\n      case 'megabytes':\n        return sizeArray[0] + ' MB'\n      case 'mbytes':\n        return sizeArray[0] + ' MB'\n      case 'gb':\n        return sizeArray[0] + ' GB'\n      case 'gigabytes':\n        return sizeArray[0] + ' GB'\n      case 'gbytes':\n        return sizeArray[0] + ' GB'\n      case 'tb':\n        return sizeArray[0] + ' TB'\n      case 'terabytes':\n        return sizeArray[0] + ' TB'\n      case 'tbytes':\n        return sizeArray[0] + ' TB'\n      default:\n        return 'Unknown Size'\n    }\n  }\n}\n\nexport const isDate = value => {\n  return dateUtil.isValid(value)\n}\n\nexport const formatDateString = (dateString, format) => {\n  if (isDate(dateString)) {\n    const date = dateUtil.date(dateString)\n    return dateUtil.format(date, format)\n  }\n  return 'Invalid Date'\n}\n","//https://github.com/immutable-js/immutable-js/issues/1452#issuecomment-386162309\nimport { List } from 'immutable'\n\nconst isMergeable = a =>\n  a &&\n  typeof a === 'object' &&\n  typeof a.mergeWith === 'function' &&\n  !List.isList(a)\n\nexport const mergeDeep = (a, b) => {\n  // If b is null, it would overwrite a, even if a is mergeable\n  if (isMergeable(a) && b !== null) {\n    return a.mergeWith(mergeDeep, b)\n  }\n\n  if (!List.isList(a) || !List.isList(b)) {\n    return b\n  }\n\n  return b.reduce((acc, nextItem, index) => {\n    const existingItem = acc.get(index)\n    if (isMergeable(existingItem)) {\n      return acc.set(index, existingItem.mergeWith(mergeDeep, nextItem))\n    }\n\n    return acc.set(index, nextItem)\n  }, a)\n}\n\nexport const mergeDeepOverwriteLists = (a, b) => {\n  // If b is null, it would overwrite a, even if a is mergeable\n  if (b === null) return b\n\n  if (isMergeable(a) && !List.isList(a)) {\n    return a.mergeWith(mergeDeepOverwriteLists, b)\n  }\n\n  return b\n}\n","const { mergeDeep, mergeDeepOverwriteLists } = require('./immutable-utils')\nconst { formatDateString, getFileSize, isDate } = require('./human-readable')\nmodule.exports = {\n  formatDateString,\n  getFileSize,\n  isDate,\n  mergeDeep,\n  mergeDeepOverwriteLists,\n}\n","import Button from '@material-ui/core/Button'\nimport Popover from '@material-ui/core/Popover'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport React from 'react'\nimport {\n  Actions,\n  DeleteAction,\n  EditAction,\n  IndexCardItem,\n} from '../index-cards'\n\nconst useOpenClose = props => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n    if (props.onClose) {\n      props.onClose()\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  return [anchorEl, open, handleOpen, handleClose]\n}\n\nconst QueryCard = props => {\n  const { title, onClick, QueryEditor, query } = props\n  const [anchorEl, open, handleOpen, handleClose] = useOpenClose(props)\n\n  return (\n    <React.Fragment>\n      <IndexCardItem\n        title={title}\n        subHeader={'Has not been run'}\n        onClick={onClick}\n      >\n        <Actions>\n          <EditAction onEdit={handleOpen} />\n          <DeleteAction />\n        </Actions>\n      </IndexCardItem>\n\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <QueryEditor query={query} onSearch={handleClose} />\n      </Popover>\n    </React.Fragment>\n  )\n}\n\nconst QuerySelector = props => {\n  const { queries, currentQuery, QueryEditor } = props\n  const [selected, setSelected] = React.useState(null)\n  const [anchorEl, open, handleOpen, handleClose] = useOpenClose(props)\n\n  const onSelect = query => {\n    setSelected(queries.filter(({ id }) => id === query.id)[0])\n    props.onSelect(query)\n  }\n\n  const queryCards = queries.map(query => (\n    <QueryCard\n      key={query.id}\n      query={query}\n      title={query.title}\n      onClick={() => {\n        onSelect(query)\n      }}\n      QueryEditor={QueryEditor}\n      onClose={handleClose}\n    />\n  ))\n\n  return (\n    <React.Fragment>\n      {queries && (\n        <div style={{ display: 'flex' }}>\n          <QueryCard\n            title={selected ? selected.title : queries[0].title}\n            onClick={() => {\n              props.onSelect(currentQuery)\n            }}\n            query={currentQuery}\n            QueryEditor={QueryEditor}\n            onClose={handleClose}\n          />\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            style={{ marginTop: 20, marginBottom: 20, marginRight: 20 }}\n            onClick={handleOpen}\n          >\n            <ExpandMoreIcon />\n          </Button>\n        </div>\n      )}\n\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {queryCards}\n      </Popover>\n    </React.Fragment>\n  )\n}\nexport default QuerySelector\n","import React, { useState, useEffect } from 'react'\nimport { featureCollection, centerOfMass, getCoord } from '@turf/turf'\n\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { useSelectionInterface, useDrawInterface } from '../react-hooks'\n\nimport { Layout, Provider, AddConfig, DragSource } from '../react-golden-layout'\n\nimport Histogram from '../histogram'\nimport Inspector from '../inspector/inspector'\nimport ResultTable from '../results/results'\nimport Gallery from '../gallery'\n\nimport {\n  ClusterMap,\n  RENDERER_STYLE,\n  DRAWING_STYLE,\n  withDrawMenu,\n} from '../maps'\nimport WKT from 'ol/format/WKT'\nimport GeoJSON from 'ol/format/GeoJSON'\nimport { geoJSONToGeometryJSON } from 'geospatialdraw/bin/geometry/utilities'\nimport { LAT_LON } from 'geospatialdraw/bin/coordinates/units'\nimport { Set } from 'immutable'\n\nconst MapComponent = withDrawMenu(ClusterMap)\n\nconst AddVisualization = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const options = {\n    '2D Map': {\n      type: 'component',\n      title: '2D Map',\n      componentName: '2d-map',\n    },\n    Table: {\n      type: 'component',\n      title: 'Table',\n      componentName: 'table',\n    },\n    Inspector: {\n      type: 'component',\n      title: 'Inspector',\n      componentName: 'inspector',\n    },\n    Histogram: {\n      type: 'component',\n      title: 'Histogram',\n      componentName: 'histogram',\n    },\n    Gallery: {\n      type: 'component',\n      title: 'Gallery',\n      componentName: 'gallery',\n    },\n  }\n\n  return (\n    <div style={{ position: 'absolute', bottom: 10, right: 10 }}>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"primary\"\n        variant=\"contained\"\n      >\n        Add Visual\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.keys(options).map(option => {\n          const config = options[option]\n\n          return (\n            <MenuItem key={option} onClick={() => handleClose(option)}>\n              <DragSource config={config}>\n                <AddConfig config={config}>{option}</AddConfig>\n              </DragSource>\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </div>\n  )\n}\n\nconst config = {\n  content: [\n    {\n      type: 'row',\n      content: [\n        {\n          type: 'component',\n          title: 'Table',\n          componentName: 'table',\n        },\n      ],\n    },\n  ],\n}\n\nconst VisContainer = ({ children }) => {\n  return (\n    <div\n      style={{\n        padding: 20,\n        boxSizing: 'border-box',\n        overflow: 'auto',\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nconst Visualizations = props => {\n  const { results } = props\n\n  const InspectorVis = () => {\n    const [selected] = useSelectionInterface()\n\n    const selectedResults = results.filter(result => {\n      return selected.has(result.metacard.properties.id)\n    })\n\n    return (\n      <VisContainer>\n        <Inspector results={selectedResults} />\n      </VisContainer>\n    )\n  }\n\n  const TableVis = () => {\n    return (\n      <VisContainer>\n        <ResultTable\n          attributes={['id', 'title', 'created']}\n          results={results}\n        />\n      </VisContainer>\n    )\n  }\n\n  const GalleryVis = () => {\n    return (\n      <VisContainer>\n        <Gallery results={results} />\n      </VisContainer>\n    )\n  }\n\n  const HistogramVis = () => {\n    const [selected, onSelect] = useSelectionInterface()\n\n    const selectedResults = results.filter(result => {\n      return selected.has(result.metacard.properties.id)\n    })\n\n    return (\n      <VisContainer>\n        <Histogram\n          results={results}\n          selected={selectedResults}\n          onSelect={onSelect}\n        />\n      </VisContainer>\n    )\n  }\n\n  const wkt = new WKT({ splitCollection: true })\n  const geoJSON = new GeoJSON()\n  const MapVis = () => {\n    const PROJECTION = 'EPSG:4326'\n    const [selection, onSelect] = useSelectionInterface()\n    const [originalGeo, setOriginalGeo] = useState(null)\n    const [\n      { geo: drawGeo, shape, active: isDrawing },\n      setDrawState,\n    ] = useDrawInterface()\n    useEffect(\n      () => {\n        if (isDrawing) {\n          setOriginalGeo(drawGeo)\n        }\n      },\n      [isDrawing]\n    )\n    const geos = results\n      .map(\n        result =>\n          result.metacard.properties.location\n            ? wkt\n                .readFeatures(result.metacard.properties.location)\n                .map(locationGeo => {\n                  const featureGeo = geoJSON.writeFeatureObject(locationGeo)\n                  return geoJSONToGeometryJSON(result.metacard.properties.id, {\n                    ...featureGeo,\n                    properties: {\n                      ...featureGeo.properties,\n                      selected: selection.has(result.metacard.properties.id),\n                    },\n                  })\n                })\n            : []\n      )\n      .reduce((list, value) => list.concat(value), [])\n    const selectedGeos = geos.filter(g => g.properties.selected)\n    const center =\n      isDrawing && originalGeo\n        ? getCoord(centerOfMass(originalGeo))\n        : selectedGeos.length > 0\n          ? getCoord(centerOfMass(featureCollection(selectedGeos)))\n          : null\n    return (\n      <MapComponent\n        projection={PROJECTION}\n        mapStyle={RENDERER_STYLE}\n        drawStyle={DRAWING_STYLE}\n        coordinateType={LAT_LON}\n        maxZoom={20}\n        minZoom={1.5}\n        zoom={2}\n        geos={geos}\n        center={center}\n        selectGeos={ids => {\n          if (!isDrawing) {\n            onSelect(Set(ids))\n          }\n        }}\n        isDrawing={isDrawing}\n        drawShape={shape}\n        drawGeo={isDrawing ? drawGeo : null}\n        onSetShape={update => {\n          setDrawState({\n            geo: null,\n            active: true,\n            shape: update,\n          })\n        }}\n        onUpdate={update => {\n          setDrawState({\n            geo: update,\n            active: true,\n            shape: update.properties.shape,\n          })\n        }}\n        onCancel={() => {\n          setDrawState({\n            geo: originalGeo,\n            active: false,\n            shape: originalGeo.properties.shape,\n          })\n        }}\n        onOk={() => {\n          setDrawState({\n            geo: drawGeo,\n            active: false,\n            shape,\n          })\n        }}\n      />\n    )\n  }\n\n  const components = {\n    inspector: InspectorVis,\n    table: TableVis,\n    '2d-map': MapVis,\n    histogram: HistogramVis,\n    gallery: GalleryVis,\n  }\n  return (\n    <Provider>\n      <div style={{ position: 'relative', height: '100%' }}>\n        <Layout\n          config={config}\n          components={components}\n          onChange={() => {\n            /*console.log(config)*/\n          }}\n        />\n        <AddVisualization />\n      </div>\n    </Provider>\n  )\n}\n\nexport default Visualizations\n","import React from 'react'\n\nimport { storiesOf } from '../@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\nimport Visualizations from './visualizations'\nimport { SelectionProvider } from '../react-hooks/use-selection-interface'\nimport useState from '../@storybook/use-state'\nimport QuerySelector from './query-selector'\nimport queries from './sample-queries.json'\nimport { BasicSearch } from '../basic-search'\nimport { DrawProvider } from '../react-hooks/use-draw-interface'\n\nconst stories = storiesOf('Workspaces', module)\n\nimport genResults from '../gen-results'\n\nstories.add('Visualizations', () => {\n  const results = genResults()\n\n  return (\n    <DrawProvider>\n      <SelectionProvider>\n        <div style={{ height: '100vh' }}>\n          <Visualizations results={results} />\n        </div>\n      </SelectionProvider>\n    </DrawProvider>\n  )\n})\n\nconst QueryEditor = ({ query }) => {\n  return (\n    <div style={{ padding: 20 }}>\n      <div style={{ overflow: 'hidden', padding: 2 }}>\n        <BasicSearch\n          query={query}\n          onSearch={query => {\n            action('onChange')(query)\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nstories.add('Query Selector', () => {\n  const [query, setQuery] = useState(queries[0])\n  return (\n    <QuerySelector\n      queries={queries}\n      currentQuery={query}\n      QueryEditor={QueryEditor}\n      onSelect={setQuery}\n    />\n  )\n})\n"],"mappingsnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AANA;AACA;AADA;AACA;AAQA;;;;;;;;;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;;;AACA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AACA;AAeA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AAcA;AAEA;AAFA;AACA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AARA;AACA;AAUA;AAEA;AAFA;AACA;AASA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;AAJA;;;;;;;;;;;;;AAtFA;AAaA;AAgBA;AAeA;AAQA;AAWA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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ACA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AALA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AAMA;AAUA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAKA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AASA;AAWA;AAEA;AAAA;AAQA;AARA;AAoBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HA;AACA;AAGA;AAEA;AAIA;AAYA;AACA;AAIA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/CA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAUA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAUA;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5DA;AAEA;AADA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AAMA;AAEA;AAEA;AACA;AAOA;AAIA;AAGA;AACA;AACA;AAMA;AAMA;AAEA;AACA;AAQA;AACA;AACA;AACA;AAGA;AACA;AACA;AAYA;AAAA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAIA;AACA;AACA;AACA;AACA;AAOA;AACA;AAaA;AAGA;AACA;AACA;AAEA;AAWA;AACA;AACA;AACA;AACA;AAUA;AACA;AAKA;AAGA;AAOA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAcA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AAEA;AACA;AAQA;AASA;AAmBA;AAEA;AACA;AAQA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGA;AAEA;AACA;AACA;AAEA;AAYA;AACA;AAGA;AAEA;AAMA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AAIA;AAGA;AAAA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAIA;AACA;AAKA;AACA;AAGA;AACA;AAKA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AAFA;;AAKA;AACA;AAFA;;AAKA;AACA;AAFA;;AAUA;AACA;AAFA;AAlBA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAJA;AADA;AAEA;AAJA;AADA;AAeA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AALA;AAEA;AALA;AAjBA;AACA;AA+BA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;;AACA;AACA;AACA;AACA;;AACA;;AAEA;AAEA;AAFA;AAFA;AAAA;AAAA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AA8BA;AA/BA;AAAA;AAAA;AACA;AA+BA;AAhCA;AAAA;AAAA;AACA;AAgCA;;AACA;AACA;AACA;AACA;;AAEA;AADA;AACA;AAIA;AALA;AAKA;AAIA;AATA;AASA;AAIA;AAbA;AAaA;AAIA;AAjBA;AAiBA;AAIA;AArBA;AAqBA;AAIA;AAzBA;AAyBA;AAIA;AA7BA;AA6BA;AAIA;AAjCA;AAiCA;AAIA;AArCA;AAqCA;AAvCA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqDA;AAAA;AAAA;AAtFA;AACA;AADA;AACA;AA2FA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAJA;AACA;AALA;AAAA;;;AAeA;AAEA;AAAA;;AAEA;AAEA;AAFA;;AAYA;AAhBA;AAgBA;AAdA;AAFA;AAAA;AAAA;AACA;AAqBA;AAEA;AAAA;AAEA;AACA;AACA;AAJA;AACA;AAzBA;AAAA;;;AAmCA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AALA;;AADA;AAQA;AANA;AALA;AAAA;;;AAkBA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAJA;;AAFA;AAQA;AALA;AANA;AAAA;;;AAmBA;AAEA;AAAA;;AAEA;AAEA;AAFA;;AAYA;AAAA;;AAGA;AAEA;AAFA;AAHA;AAdA;AAFA;AAAA;AAAA;AACA;AAyBA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AALA;;AADA;AAQA;AANA;AA7BA;AAAA;;;AA0CA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AALA;;AADA;AAQA;AANA;AAPA;AAAA;;;;;;;;;;;AA5RA;AAEA;AAGA;AAwBA;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnKA;AACA;AACA;AA2CA;AACA;AAOA;;;;AAIA;AACA;AAKA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAIA;AAQA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAcA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AAGA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAgBA;AAEA;AACA;AASA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AASA;AAAA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AASA;AAAA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAKA;AACA;AAEA;AAGA;AAMA;AAEA;AAWA;AAWA;AAAA;AACA;AAMA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtNA;AACA;AAEA;AACA;AAEA;AAOA;AAQA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAQA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAEA;AAIA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AAEA;AAIA;AAAA;AACA;AAOA;AAEA;AACA;AACA;AACA;AAGA;AAOA;AACA;AAGA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAGA;AASA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AASA;AAIA;AAEA;AACA;AAEA;AASA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAIA;AAKA;AACA;AAEA;AACA;AAKA;AAKA;AAIA;AAEA;AAGA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACnIA;AACA;AAIA;AAGA;AAAA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAEA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AAMA;AACA;AAdA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AAQA;AACA;AACA;AAKA;AAEA;AAEA;AACA;AAGA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AAEA;AAGA;AACA;AASA;AAAA;AAAA;AAAA;AAaA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAKA;AANA;AACA;AADA;AAMA;;;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAFA;AAGA;AACA;AAJA;AAGA;AAHA;AACA;AAGA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAWA;AACA;AADA;AAGA;AAFA;AAdA;AACA;AADA;AACA;;;AAoBA;AACA;AACA;;;;AADA;;;;;;;;;;;;;AAhCA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AADA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AAPA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AACA;AADA;AAFA;AACA;AAEA;AACA;AADA;AAGA;AACA;AAPA;AACA;AADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAPA;AASA;AACA;AACA;AAEA;AACA;AA1BA;AAaA;AAeA;AAAA;AAAA;AAAA;AAKA;AACA;AANA;AAQA;;AAGA;AACA;AAAA;AACA;AAJA;AAYA;AACA;AAEA;AACA;AAzBA;AA0BA;AAzBA;AA2BA;AAAA;AAGA;AACA;AAEA;AANA;AACA;AArFA;AACA;AADA;AACA;AAiGA;;;;;;;;;;;AAlGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;;;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;AAHA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAFA;AACA;AAMA;AAAA;AAGA;AAAA;AAZA;AAUA;AAZA;;;;;;;;;;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AACA;AAQA;;;;;;;;;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AAGA;AACA;AACA;AADA;AAGA;AAPA;AASA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAAA;AAEA;AAIA;AAPA;AASA;AAEA;AAFA;AAZA;AAiBA;AACA;AAEA;AA1DA;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAVA;AAaA;AAjBA;AAqBA;AAAA;AAAA;AAAA;AACA;AA/FA;AACA;AADA;AACA;AAsGA;AACA;;;;;;;;;;;AAxGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAFA;;AAiBA;AAAA;;AAGA;AAHA;AAGA;AAtBA;AAmBA;AASA;AA5BA;AAoCA;AADA;;AAQA;AAAA;;AAGA;AAHA;AAGA;AAXA;AAQA;;AASA;AAEA;AAFA;AAjBA;AA8BA;;AAEA;AAEA;AAFA;;AAIA;AAAA;;AAGA;AAHA;AAGA;AATA;AAMA;AASA;AAfA;AAsBA;;AAEA;AAEA;AAFA;;AAgBA;AAAA;;AAGA;AAHA;AAGA;AArBA;AAkBA;AASA;AA3BA;AAkCA;;AAEA;AAEA;AAFA;;AAIA;AAAA;;AAGA;AAHA;AAGA;AATA;AAMA;AASA;AAfA;AAiBA;;AAEA;AAEA;AAFA;;AAIA;AAAA;;AAGA;AAHA;AAGA;AATA;AAMA;AASA;AAfA;AAiBA;;AAEA;AAEA;AAFA;;AAIA;AAAA;;AAGA;AAHA;AAGA;AATA;AAMA;AASA;AAfA;AAiBA;AAGA;AACA;AAAA;AAFA;AA/KA;AAoLA;AAEA;AAFA;AAKA;AACA;AAAA;AA3LA;AAAA;AAAA;AACA;AA4LA;AAAA;AAEA;AAFA;AAAA;AAKA;AACA;AAEA;AAAA;AAGA;AACA;AAAA;AAFA;AAHA;AASA;AAhBA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AA9LA;;;;;;;;;;AAJA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AAQA;AAUA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AAUA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAIA;AAQA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClNA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AADA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAVA;AAaA;AAnBA;AACA;AADA;AACA;AAqBA;;;;;;;;;;AAxBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAMA;AAAA;AAAA;AAEA;AAFA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC7BA;AAMA;AAAA;AAAA;AAEA;AACA;AAIA;AAPA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC5BA;AAMA;AAAA;AAAA;AAEA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBA;AAQA;AAPA;AAQA;AAPA;AAQA;AAPA;AAQA;AAPA;AAQA;AAPA;AAQA;;;;;;;;;;;;;;;;;;;;;;ACbA;AAMA;AAAA;AAAA;AAEA;AAWA;AAWA;AAUA;AAIA;AAIA;AA1CA;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AGA;AAKA;AACA;AAEA;AAsBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAIA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AAEA;AAOA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAIA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5KA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAAA;AACA;AAEA;AAGA;AAIA;AAGA;AAGA;AAGA;AAIA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5KA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAOA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAWA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAQA;AACA;AAGA;AAQA;AACA;AAIA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAMA;AACA;AAIA;AAGA;AAGA;AAMA;AACA;AAAA;AAEA;AAIA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjPA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AAUA;AAGA;AAQA;AAGA;AACA;AACA;AAOA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAgBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AAGA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AAIA;AACA;AACA;AACA;AAIA;AAKA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAGA;AACA;AAUA;AAAA;AACA;AAEA;AASA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AAOA;AACA;AAIA;AACA;AACA;AACA;AACA;AAOA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAIA;AACA;AAAA;AAAA;AAEA;AAGA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAEA;AAMA;AAEA;AAQA;AAGA;AACA;AACA;AAMA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChEA;AACA;AAEA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAWA;AACA;AAD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AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AAIA;AACA;AACA;AAKA;AAIA;AAEA;AACA;AACA;AAGA;AAEA;;;;AAIA;AAEA;AAEA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AACA;AAGA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAIA;AACA;AAEA;AAKA;AACA;AAOA;AAMA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AAMA;AACA;AAEA;AACA;AAGA;AAGA;AAOA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAGA;AACA;AAEA;AAIA;AACA;AAKA;AAEA;AAGA;AACA;AAEA;AAGA;AAMA;AAKA;AAEA;AAGA;AACA;AAEA;AAGA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJA;AAEA;AACA;AAEA;AAQA;AACA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAQA;AACA;AACA;AACA;AAKA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAGA;AAWA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AAOA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAOA;AAEA;AAEA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AAKA;;;;;;;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","sourceRoot":""}